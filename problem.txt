    808     all_encountered_theorems = load_encountered_theorems(ENCOUNTERED_THEOREMS_FILE)

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(809)prove_sorry_theorems()
    808     all_encountered_theorems = load_encountered_theorems(ENCOUNTERED_THEOREMS_FILE)
--> 809
    810     for repo in repos_to_process:

ipdb> n
> /data/yingzi_ma/lean_project/ReProver/main.py(810)prove_sorry_theorems()
    809
--> 810     for repo in repos_to_process:
    811         sorry_theorems = repo.sorry_theorems_unproved

ipdb> n
> /data/yingzi_ma/lean_project/ReProver/main.py(811)prove_sorry_theorems()
    810     for repo in repos_to_process:
--> 811         sorry_theorems = repo.sorry_theorems_unproved
    812         repo_url = repo.url

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(812)prove_sorry_theorems()
    811         sorry_theorems = repo.sorry_theorems_unproved
--> 812         repo_url = repo.url
    813         repo_commit = repo.commit

ipdb> sorry_theorems
[Theorem(full_name='MyRing.neg_neg', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(305, 1), end=(306, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c
0a084411853a576389ecf5', theorem_statement='theorem neg_neg (a : R) : - -a = a :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='R : Type u_1\ninst✝ : Ring R\na : R\n⊢ - -a = a', state_after='no
goals')], difficulty_rating=None), Theorem(full_name='Cantor', file_path=PosixPath('MIL/C04_Sets_and_Functions/S02_Functions.lean'), start=(673, 1), end=(685, 16), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb0513
67c48c0a084411853a576389ecf5', theorem_statement='theorem Cantor : ∀ f : α → Set α, ¬Surjective f :=', traced_tactics=[AnnotatedTactic(tactic='intro f surjf', annotated_tactic=('intro f surjf', []), state_before='α✝ : Type u_1\nβ : Type u_2\nin
st✝ : Inhabited α✝\nP : α✝ → Prop\nh : ∃ x, P x\nα : Type u_3\n⊢ ∀ (f : α → Set α), ¬Surjective f', state_after='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\n
⊢ False'), AnnotatedTactic(tactic='let S := { i | i ∉ f i }', annotated_tactic=('let S := { i | i ∉ f i }', []), state_before='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf :
Surjective f\n⊢ False', state_after='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\n⊢ False'), AnnotatedTactic(tactic='rcases surjf
S with ⟨j, h⟩', annotated_tactic=('rcases surjf S with ⟨j, h⟩', []), state_before='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\n⊢
False', state_after='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\n⊢ False'), AnnotatedTactic(tact
ic="have h₁ : j ∉ f j := by\n  intro h'\n  have : j ∉ f j := by rwa [h] at h'\n  contradiction", annotated_tactic=("have h₁ : j ∉ f j := by\n    intro h'\n    have : j ∉ f j := by rwa [h] at h'\n    contradiction", []), state_before='case intro
\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\n⊢ False', state_after='case intro\nα✝ : Type u_1\nβ : Type u_2
\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\n⊢ False'), AnnotatedTactic(tactic='have h₂ : j ∈ S', annotated_tactic=('have
h₂ : j ∈ S', []), state_before='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\n⊢ Fals
e', state_after='case h₂\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\n⊢ j ∈ S\n\ncase intro\nα
✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ False'), AnnotatedTactic(tactic='sorr
y', annotated_tactic=('sorry', []), state_before='case h₂\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ :
j ∉ f j\n⊢ j ∈ S\n\ncase intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ Fals
e', state_after='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ False')
, AnnotatedTactic(tactic='have h₃ : j ∉ S', annotated_tactic=('have h₃ : j ∉ S', []), state_before='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\n
S : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ False', state_after='case h₃\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Se
t α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ j ∉ S\n\ncase intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉
 f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\nh₃ : j ∉ S\n⊢ False'), AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='case h₃\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\n
α : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ j ∉ S\n\ncase intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf
 : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\nh₃ : j ∉ S\n⊢ False', state_after='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Ty
pe u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\nh₃ : j ∉ S\n⊢ False'), AnnotatedTactic(tactic='contradiction', annotated_tactic=('contradiction', []), state_before='case int
ro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\nh₃ : j ∉ S\n⊢ False', state_after=
'no goals'), AnnotatedTactic(tactic="intro h'", annotated_tactic=("intro h'", []), state_before='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i
 | i ∉ f i}\nj : α\nh : f j = S\n⊢ j ∉ f j', state_after="α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh' : j
 ∈ f j\n⊢ False"), AnnotatedTactic(tactic="have : j ∉ f j := by rwa [h] at h'", annotated_tactic=("have : j ∉ f j := by rwa [h] at h'", []), state_before="α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type
 u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh' : j ∈ f j\n⊢ False", state_after="α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf
: Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh' : j ∈ f j\nthis : j ∉ f j\n⊢ False"), AnnotatedTactic(tactic='contradiction', annotated_tactic=('contradiction', []), state_before="α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabite
d α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh' : j ∈ f j\nthis : j ∉ f j\n⊢ False", state_after='no goals'), AnnotatedTactic(tactic="rwa [h] at h'", anno
tated_tactic=("rwa [h] at h'", []), state_before="α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh' : j ∈ f j\n
⊢ j ∉ f j", state_after='no goals')], difficulty_rating=None), Theorem(full_name='MyGroup.mul_right_inv', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(468, 1), end=(469, 8), url='https://gith
ub.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem mul_right_inv (a : G) : a * a⁻¹ = 1 :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), st
ate_before='G : Type u_1\ninst✝ : Group G\na : G\n⊢ a * a⁻¹ = 1', state_after='no goals')], difficulty_rating=None), Theorem(full_name='C03S06.aux', file_path=PosixPath('MIL/C03_Logic/S06_Sequences_and_Convergence.lean'), start=(275, 1), end=(2
83, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem aux {s t : ℕ → ℝ} {a : ℝ} (cs : ConvergesTo s a) (ct : ConvergesTo t 0) :\n    ConvergesTo (fun n
↦ s n * t n) 0 :=', traced_tactics=[AnnotatedTactic(tactic='intro ε εpos', annotated_tactic=('intro ε εpos', []), state_before='s t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\n⊢ ConvergesTo (fun n => s n * t n) 0', state_after='
s t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\n⊢ ∃ N, ∀ n ≥ N, |(fun n => s n * t n) n - 0| < ε'), AnnotatedTactic(tactic='dsimp', annotated_tactic=('dsimp', []), state_before='s t : ℕ → ℝ\na : ℝ\ncs : Conv
ergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\n⊢ ∃ N, ∀ n ≥ N, |(fun n => s n * t n) n - 0| < ε', state_after='s t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε'),
AnnotatedTactic(tactic='rcases exists_abs_le_of_convergesTo cs with ⟨N₀, B, h₀⟩', annotated_tactic=('rcases <a>exists_abs_le_of_convergesTo</a> cs with ⟨N₀, B, h₀⟩', [Annotation(full_name='C03S06.exists_abs_le_of_convergesTo', def_path='./MIL/C
03_Logic/S06_Sequences_and_Convergence.lean', def_pos=(239, 9), def_end_pos=(239, 37))]), state_before='s t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε', state_after='case
 intro.intro\ns t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB : ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤ n → |s n| < B\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε'), AnnotatedTactic(tactic='have Bpos : 0 < B := lt_of_le_o
f_lt (abs_nonneg _) (h₀ N₀ (le_refl _))', annotated_tactic=('have Bpos : 0 < B := <a>lt_of_le_of_lt</a> (<a>abs_nonneg</a> _) (h₀ N₀ (<a>le_refl</a> _))', [Annotation(full_name='lt_of_le_of_lt', def_path='./.lake/packages/mathlib/Mathlib/Init/O
rder/Defs.lean', def_pos=(122, 9), def_end_pos=(122, 23)), Annotation(full_name='abs_nonneg', def_path='./.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Abs.lean', def_pos=(122, 30), def_end_pos=(122, 40)), Annotation(full_name='le_refl', d
ef_path='./.lake/packages/mathlib/Mathlib/Init/Order/Defs.lean', def_pos=(45, 9), def_end_pos=(45, 16))]), state_before='case intro.intro\ns t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB : ℝ\nh₀ :
∀ (n : ℕ), N₀ ≤ n → |s n| < B\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε', state_after='case intro.intro\ns t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB : ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤ n → |s n| < B\nBpos : 0
 < B\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε'), AnnotatedTactic(tactic='have pos₀ : ε / B > 0 := div_pos εpos Bpos', annotated_tactic=('have pos₀ : ε / B > 0 := <a>div_pos</a> εpos Bpos', [Annotation(full_name='div_pos', def_path='./.lake/packages
/mathlib/Mathlib/Algebra/Order/Field/Defs.lean', def_pos=(79, 7), def_end_pos=(79, 14))]), state_before='case intro.intro\ns t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB : ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤
n → |s n| < B\nBpos : 0 < B\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε', state_after='case intro.intro\ns t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB : ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤ n → |s n| < B\nBpos : 0 <
 B\npos₀ : ε / B > 0\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε'), AnnotatedTactic(tactic='rcases ct _ pos₀ with ⟨N₁, h₁⟩', annotated_tactic=('rcases ct _ pos₀ with ⟨N₁, h₁⟩', []), state_before='case intro.intro\ns t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo
s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB : ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤ n → |s n| < B\nBpos : 0 < B\npos₀ : ε / B > 0\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε', state_after='case intro.intro.intro\ns t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s
 a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB : ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤ n → |s n| < B\nBpos : 0 < B\npos₀ : ε / B > 0\nN₁ : ℕ\nh₁ : ∀ n ≥ N₁, |t n - 0| < ε / B\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε'), AnnotatedTactic(tactic='sorry', a
nnotated_tactic=('sorry', []), state_before='case intro.intro.intro\ns t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB : ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤ n → |s n| < B\nBpos : 0 < B\npos₀ : ε / B > 0\nN₁ : ℕ\
nh₁ : ∀ n ≥ N₁, |t n - 0| < ε / B\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε', state_after='no goals')], difficulty_rating=None), Theorem(full_name="cauchySeq_of_le_geometric_two'", file_path=PosixPath('MIL/C09_Topology/S02_Metric_Spaces.lean'), star
t=(423, 1), end=(437, 19), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement="theorem cauchySeq_of_le_geometric_two' {u : ℕ → X}\n    (hu : ∀ n : ℕ, dist (u n) (u (n
 + 1)) ≤ (1 / 2) ^ n) : CauchySeq u :=", traced_tactics=[AnnotatedTactic(tactic="rw [Metric.cauchySeq_iff']", annotated_tactic=("rw [<a>Metric.cauchySeq_iff'</a>]", [Annotation(full_name="Metric.cauchySeq_iff'", def_path='./.lake/packages/mathl
ib/Mathlib/Topology/MetricSpace/Cauchy.lean', def_pos=(63, 9), def_end_pos=(63, 30))]), state_before='X : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\n⊢ CauchySeq u', state_
after='X : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\n⊢ ∀ ε > 0, ∃ N, ∀ n ≥ N, dist (u n) (u N) < ε'), AnnotatedTactic(tactic='intro ε ε_pos', annotated_tactic=('intro ε ε
_pos', []), state_before='X : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\n⊢ ∀ ε > 0, ∃ N, ∀ n ≥ N, dist (u n) (u N) < ε', state_after='X : Type u_1\ninst✝ : MetricSpace X\n
a b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\n⊢ ∃ N, ∀ n ≥ N, dist (u n) (u N) < ε'), AnnotatedTactic(tactic='obtain ⟨N, hN⟩ : ∃ N : ℕ, 1 / 2 ^ N * 2 < ε := by sorry', annotated_tactic=
('obtain ⟨N, hN⟩ : ∃ N : ℕ, 1 / 2 ^ N * 2 < ε := by sorry', []), state_before='X : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\n⊢ ∃ N, ∀ n ≥ N, dist (u
 n) (u N) < ε', state_after='case intro\nX : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\nN : ℕ\nhN : 1 / 2 ^ N * 2 < ε\n⊢ ∃ N, ∀ n ≥ N, dist (u n) (u
N) < ε'), AnnotatedTactic(tactic='use N', annotated_tactic=('use N', []), state_before='case intro\nX : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\nN
: ℕ\nhN : 1 / 2 ^ N * 2 < ε\n⊢ ∃ N, ∀ n ≥ N, dist (u n) (u N) < ε', state_after='case h\nX : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\nN : ℕ\nhN : 1
 / 2 ^ N * 2 < ε\n⊢ ∀ n ≥ N, dist (u n) (u N) < ε'), AnnotatedTactic(tactic='intro n hn', annotated_tactic=('intro n hn', []), state_before='case h\nX : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u
 (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\nN : ℕ\nhN : 1 / 2 ^ N * 2 < ε\n⊢ ∀ n ≥ N, dist (u n) (u N) < ε', state_after='case h\nX : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 /
 2) ^ n\nε : ℝ\nε_pos : ε > 0\nN : ℕ\nhN : 1 / 2 ^ N * 2 < ε\nn : ℕ\nhn : n ≥ N\n⊢ dist (u n) (u N) < ε'), AnnotatedTactic(tactic='obtain ⟨k, rfl : n = N + k⟩ := le_iff_exists_add.mp hn', annotated_tactic=('obtain ⟨k, rfl : n = N + k⟩ := le_iff
_exists_add.mp hn', []), state_before='case h\nX : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\nN : ℕ\nhN : 1 / 2 ^ N * 2 < ε\nn : ℕ\nhn : n ≥ N\n⊢ dis
t (u n) (u N) < ε', state_after='case h.intro\nX : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\nN : ℕ\nhN : 1 / 2 ^ N * 2 < ε\nk : ℕ\nhn : N + k ≥ N\n⊢
 dist (u (N + k)) (u N) < ε'), AnnotatedTactic(tactic='calc\n  dist (u (N + k)) (u N) = dist (u (N + 0)) (u (N + k)) := sorry\n  _ ≤ ∑ i in range k, dist (u (N + i)) (u (N + (i + 1))) := sorry\n  _ ≤ ∑ i in range k, (1 / 2 : ℝ) ^ (N + i) := sor
ry\n  _ = 1 / 2 ^ N * ∑ i in range k, (1 / 2 : ℝ) ^ i := sorry\n  _ ≤ 1 / 2 ^ N * 2 := sorry\n  _ < ε := sorry', annotated_tactic=('calc\n    <a>dist</a> (u (N + k)) (u N) = <a>dist</a> (u (N + 0)) (u (N + k)) := sorry\n    _ ≤ ∑ i in <a>range<
/a> k, <a>dist</a> (u (N + i)) (u (N + (i + 1))) := sorry\n    _ ≤ ∑ i in <a>range</a> k, (1 / 2 : ℝ) ^ (N + i) := sorry\n    _ = 1 / 2 ^ N * ∑ i in <a>range</a> k, (1 / 2 : ℝ) ^ i := sorry\n    _ ≤ 1 / 2 ^ N * 2 := sorry\n    _ < ε := sorry',
[Annotation(full_name='Dist.dist', def_path='./.lake/packages/mathlib/Mathlib/Topology/MetricSpace/PseudoMetric.lean', def_pos=(86, 3), def_end_pos=(86, 7)), Annotation(full_name='Dist.dist', def_path='./.lake/packages/mathlib/Mathlib/Topology/
MetricSpace/PseudoMetric.lean', def_pos=(86, 3), def_end_pos=(86, 7)), Annotation(full_name='Finset.range', def_path='./.lake/packages/mathlib/Mathlib/Data/Finset/Basic.lean', def_pos=(2929, 5), def_end_pos=(2929, 10)), Annotation(full_name='Di
st.dist', def_path='./.lake/packages/mathlib/Mathlib/Topology/MetricSpace/PseudoMetric.lean', def_pos=(86, 3), def_end_pos=(86, 7)), Annotation(full_name='Finset.range', def_path='./.lake/packages/mathlib/Mathlib/Data/Finset/Basic.lean', def_po
s=(2929, 5), def_end_pos=(2929, 10)), Annotation(full_name='Finset.range', def_path='./.lake/packages/mathlib/Mathlib/Data/Finset/Basic.lean', def_pos=(2929, 5), def_end_pos=(2929, 10))]), state_before='case h.intro\nX : Type u_1\ninst✝ : Metri
cSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\nN : ℕ\nhN : 1 / 2 ^ N * 2 < ε\nk : ℕ\nhn : N + k ≥ N\n⊢ dist (u (N + k)) (u N) < ε', state_after='no goals'), AnnotatedTactic(tac
tic='sorry', annotated_tactic=('sorry', []), state_before='X : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\n⊢ ∃ N, 1 / 2 ^ N * 2 < ε', state_after='no
goals')], difficulty_rating=None), Theorem(full_name='C03S05.MyAbs.lt_abs', file_path=PosixPath('MIL/C03_Logic/S05_Disjunction.lean'), start=(193, 1), end=(194, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051
367c48c0a084411853a576389ecf5', theorem_statement='theorem lt_abs : x < |y| ↔ x < y ∨ x < -y :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='x y : ℝ\n⊢ x < |y| ↔ x < y ∨ x < -y', state_after='n
o goals')], difficulty_rating=None), Theorem(full_name='MyRing.zero_mul', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(279, 1), end=(280, 8), url='https://github.com/avigad/mathematics_in_lea
n_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem zero_mul (a : R) : 0 * a = 0 :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='R : Type u_1\ninst✝ : Ring
R\na : R\n⊢ 0 * a = 0', state_after='no goals')], difficulty_rating=None), Theorem(full_name='C03S01.my_lemma3', file_path=PosixPath('MIL/C03_Logic/S01_Implication_and_the_Universal_Quantifier.lean'), start=(99, 1), end=(102, 8), url='https://g
ithub.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem my_lemma3 :\n    ∀ {x y ε : ℝ}, 0 < ε → ε ≤ 1 → |x| < ε → |y| < ε → |x * y| < ε :=', traced_tactics=[AnnotatedTactic(tac
tic='intro x y ε epos ele1 xlt ylt', annotated_tactic=('intro x y ε epos ele1 xlt ylt', []), state_before='⊢ ∀ {x y ε : ℝ}, 0 < ε → ε ≤ 1 → |x| < ε → |y| < ε → |x * y| < ε', state_after='x y ε : ℝ\nepos : 0 < ε\nele1 : ε ≤ 1\nxlt : |x| < ε\nylt
 : |y| < ε\n⊢ |x * y| < ε'), AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='x y ε : ℝ\nepos : 0 < ε\nele1 : ε ≤ 1\nxlt : |x| < ε\nylt : |y| < ε\n⊢ |x * y| < ε', state_after='no goals')], difficulty_rating=None), T
heorem(full_name='MyRing.two_mul', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(407, 1), end=(408, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a
084411853a576389ecf5', theorem_statement='theorem two_mul (a : R) : 2 * a = a + a :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='R : Type u_1\ninst✝ : Ring R\na : R\n⊢ 2 * a = a + a', state_af
ter='no goals')], difficulty_rating=None), Theorem(full_name='C03S05.MyAbs.abs_add', file_path=PosixPath('MIL/C03_Logic/S05_Disjunction.lean'), start=(163, 1), end=(164, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='52
97e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem abs_add (x y : ℝ) : |x + y| ≤ |x| + |y| :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='x✝ y✝ x y : ℝ\n⊢ |x + y| ≤ |x| + |y|'
, state_after='no goals')], difficulty_rating=None), Theorem(full_name='C03S04.aux', file_path=PosixPath('MIL/C03_Logic/S04_Conjunction_and_Iff.lean'), start=(246, 1), end=(248, 17), url='https://github.com/avigad/mathematics_in_lean_source', c
ommit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement=None, traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='x y : ℝ\nh : x ^ 2 + y ^ 2 = 0\n⊢ x ^ 2 = 0', state_after='no goals')], diff
iculty_rating=None), Theorem(full_name='C03S05.MyAbs.abs_lt', file_path=PosixPath('MIL/C03_Logic/S05_Disjunction.lean'), start=(196, 1), end=(197, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a08441
1853a576389ecf5', theorem_statement='theorem abs_lt : |x| < y ↔ -y < x ∧ x < y :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='x y : ℝ\n⊢ |x| < y ↔ -y < x ∧ x < y', state_after='no goals')], di
fficulty_rating=None), Theorem(full_name='MyGroup.mul_inv_rev', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(474, 1), end=(475, 8), url='https://github.com/avigad/mathematics_in_lean_source',
 commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem mul_inv_rev (a b : G) : (a * b)⁻¹ = b⁻¹ * a⁻¹ :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='G : Type u_1\ninst✝
: Group G\na b : G\n⊢ (a * b)⁻¹ = b⁻¹ * a⁻¹', state_after='no goals')], difficulty_rating=None), Theorem(full_name='MyRing.add_left_cancel', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(191,
1), end=(192, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem add_left_cancel {a b c : R} (h : a + b = a + c) : b = c :=', traced_tactics=[AnnotatedTa
ctic(tactic='sorry', annotated_tactic=('sorry', []), state_before='R : Type u_1\ninst✝ : Ring R\na b c : R\nh : a + b = a + c\n⊢ b = c', state_after='no goals')], difficulty_rating=None), Theorem(full_name='absorb1', file_path=PosixPath('MIL/C0
2_Basics/S05_Proving_Facts_about_Algebraic_Structures.lean'), start=(242, 1), end=(243, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem absorb1 : x ⊓
(x ⊔ y) = x :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='α : Type u_1\ninst✝ : Lattice α\nx y z : α\n⊢ x ⊓ (x ⊔ y) = x', state_after='no goals')], difficulty_rating=None), Theorem(full_name=
'MyRing.self_sub', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(382, 1), end=(383, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389
ecf5', theorem_statement='theorem self_sub (a : R) : a - a = 0 :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='R : Type u_1\ninst✝ : Ring R\na : R\n⊢ a - a = 0', state_after='no goals')], diffi
culty_rating=None), Theorem(full_name='MyRing.add_neg_cancel_right', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(179, 1), end=(180, 8), url='https://github.com/avigad/mathematics_in_lean_sou
rce', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem add_neg_cancel_right (a b : R) : a + b + -b = a :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='R : Type u_1\
ninst✝ : Ring R\na b : R\n⊢ a + b + -b = a', state_after='no goals')], difficulty_rating=None), Theorem(full_name='C03S06.convergesTo_add', file_path=PosixPath('MIL/C03_Logic/S06_Sequences_and_Convergence.lean'), start=(143, 1), end=(152, 8), u
rl='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem convergesTo_add {s t : ℕ → ℝ} {a b : ℝ}\n      (cs : ConvergesTo s a) (ct : ConvergesTo t b) :\n    Converg
esTo (fun n ↦ s n + t n) (a + b) :=', traced_tactics=[AnnotatedTactic(tactic='intro ε εpos', annotated_tactic=('intro ε εpos', []), state_before='s t : ℕ → ℝ\na b : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t b\n⊢ ConvergesTo (fun n => s n + t
n) (a + b)', state_after='s t : ℕ → ℝ\na b : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t b\nε : ℝ\nεpos : ε > 0\n⊢ ∃ N, ∀ n ≥ N, |(fun n => s n + t n) n - (a + b)| < ε'), AnnotatedTactic(tactic='dsimp', annotated_tactic=('dsimp', []), state_bef
ore='s t : ℕ → ℝ\na b : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t b\nε : ℝ\nεpos : ε > 0\n⊢ ∃ N, ∀ n ≥ N, |(fun n => s n + t n) n - (a + b)| < ε', state_after='s t : ℕ → ℝ\na b : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t b\nε : ℝ\nεpos : ε
> 0\n⊢ ∃ N, ∀ n ≥ N, |s n + t n - (a + b)| < ε'), AnnotatedTactic(tactic='have ε2pos : 0 < ε / 2 := by linarith', annotated_tactic=('have ε2pos : 0 < ε / 2 := by linarith', []), state_before='s t : ℕ → ℝ\na b : ℝ\ncs : ConvergesTo s a\nct : Con
vergesTo t b\nε : ℝ\nεpos : ε > 0\n⊢ ∃ N, ∀ n ≥ N, |s n + t n - (a + b)| < ε', state_after='s t : ℕ → ℝ\na b : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t b\nε : ℝ\nεpos : ε > 0\nε2pos : 0 < ε / 2\n⊢ ∃ N, ∀ n ≥ N, |s n + t n - (a + b)| < ε'), A
nnotatedTactic(tactic='rcases cs (ε / 2) ε2pos with ⟨Ns, hs⟩', annotated_tactic=('rcases cs (ε / 2) ε2pos with ⟨Ns, hs⟩', []), state_before='s t : ℕ → ℝ\na b : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t b\nε : ℝ\nεpos : ε > 0\nε2pos : 0 < ε /
2\n⊢ ∃ N, ∀ n ≥ N, |s n + t n - (a + b)| < ε', state_after='case intro\ns t : ℕ → ℝ\na b : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t b\nε : ℝ\nεpos : ε > 0\nε2pos : 0 < ε / 2\nNs : ℕ\nhs : ∀ n ≥ Ns, |s n - a| < ε / 2\n⊢ ∃ N, ∀ n ≥ N, |s n + t
 n - (a + b)| < ε'), AnnotatedTactic(tactic='rcases ct (ε / 2) ε2pos with ⟨Nt, ht⟩', annotated_tactic=('rcases ct (ε / 2) ε2pos with ⟨Nt, ht⟩', []), state_before='case intro\ns t : ℕ → ℝ\na b : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t b\nε :
 ℝ\nεpos : ε > 0\nε2pos : 0 < ε / 2\nNs : ℕ\nhs : ∀ n ≥ Ns, |s n - a| < ε / 2\n⊢ ∃ N, ∀ n ≥ N, |s n + t n - (a + b)| < ε', state_after='case intro.intro\ns t : ℕ → ℝ\na b : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t b\nε : ℝ\nεpos : ε > 0\nε2p
os : 0 < ε / 2\nNs : ℕ\nhs : ∀ n ≥ Ns, |s n - a| < ε / 2\nNt : ℕ\nht : ∀ n ≥ Nt, |t n - b| < ε / 2\n⊢ ∃ N, ∀ n ≥ N, |s n + t n - (a + b)| < ε'), AnnotatedTactic(tactic='use max Ns Nt', annotated_tactic=('use <a>max</a> Ns Nt', [Annotation(full_
name='Max.max', def_path='.lake/packages/lean4/src/lean/Init/Prelude.lean', def_pos=(1122, 3), def_end_pos=(1122, 6))]), state_before='case intro.intro\ns t : ℕ → ℝ\na b : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t b\nε : ℝ\nεpos : ε > 0\nε2po
s : 0 < ε / 2\nNs : ℕ\nhs : ∀ n ≥ Ns, |s n - a| < ε / 2\nNt : ℕ\nht : ∀ n ≥ Nt, |t n - b| < ε / 2\n⊢ ∃ N, ∀ n ≥ N, |s n + t n - (a + b)| < ε', state_after='case h\ns t : ℕ → ℝ\na b : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t b\nε : ℝ\nεpos :
ε > 0\nε2pos : 0 < ε / 2\nNs : ℕ\nhs : ∀ n ≥ Ns, |s n - a| < ε / 2\nNt : ℕ\nht : ∀ n ≥ Nt, |t n - b| < ε / 2\n⊢ ∀ n ≥ max Ns Nt, |s n + t n - (a + b)| < ε'), AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='case h\n
s t : ℕ → ℝ\na b : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t b\nε : ℝ\nεpos : ε > 0\nε2pos : 0 < ε / 2\nNs : ℕ\nhs : ∀ n ≥ Ns, |s n - a| < ε / 2\nNt : ℕ\nht : ∀ n ≥ Nt, |t n - b| < ε / 2\n⊢ ∀ n ≥ max Ns Nt, |s n + t n - (a + b)| < ε', state_a
fter='no goals'), AnnotatedTactic(tactic='linarith', annotated_tactic=('linarith', []), state_before='s t : ℕ → ℝ\na b : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t b\nε : ℝ\nεpos : ε > 0\n⊢ 0 < ε / 2', state_after='no goals')], difficulty_rati
ng=None), Theorem(full_name='C03S06.convergesTo_mul_const', file_path=PosixPath('MIL/C03_Logic/S06_Sequences_and_Convergence.lean'), start=(199, 1), end=(208, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb05136
7c48c0a084411853a576389ecf5', theorem_statement='theorem convergesTo_mul_const {s : ℕ → ℝ} {a : ℝ} (c : ℝ) (cs : ConvergesTo s a) :\n    ConvergesTo (fun n ↦ c * s n) (c * a) :=', traced_tactics=[AnnotatedTactic(tactic='by_cases h : c = 0', ann
otated_tactic=('by_cases h : c = 0', []), state_before='s : ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\n⊢ ConvergesTo (fun n => c * s n) (c * a)', state_after='case pos\ns : ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\nh : c = 0\n⊢ ConvergesTo (fun n => c *
 s n) (c * a)\n\ncase neg\ns : ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\nh : ¬c = 0\n⊢ ConvergesTo (fun n => c * s n) (c * a)'), AnnotatedTactic(tactic='have acpos : 0 < |c| := abs_pos.mpr h', annotated_tactic=('have acpos : 0 < |c| := abs_pos.mpr
h', []), state_before='case neg\ns : ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\nh : ¬c = 0\n⊢ ConvergesTo (fun n => c * s n) (c * a)', state_after='case neg\ns : ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\nh : ¬c = 0\nacpos : 0 < |c|\n⊢ ConvergesTo (fun n
 => c * s n) (c * a)'), AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='case neg\ns : ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\nh : ¬c = 0\nacpos : 0 < |c|\n⊢ ConvergesTo (fun n => c * s n) (c * a)', state_after='no go
als'), AnnotatedTactic(tactic='convert convergesTo_const 0', annotated_tactic=('convert <a>convergesTo_const</a> 0', [Annotation(full_name='C03S06.convergesTo_const', def_path='./MIL/C03_Logic/S06_Sequences_and_Convergence.lean', def_pos=(108,
9), def_end_pos=(108, 26))]), state_before='case pos\ns : ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\nh : c = 0\n⊢ ConvergesTo (fun n => c * s n) (c * a)', state_after="case h.e'_1.h\ns : ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\nh : c = 0\nx✝ : ℕ\n⊢ c *
 s x✝ = 0\n\ncase h.e'_2\ns : ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\nh : c = 0\n⊢ c * a = 0"), AnnotatedTactic(tactic='rw [h]', annotated_tactic=('rw [h]', []), state_before="case h.e'_2\ns : ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\nh : c = 0\n⊢ c
* a = 0", state_after="case h.e'_2\ns : ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\nh : c = 0\n⊢ 0 * a = 0"), AnnotatedTactic(tactic='ring', annotated_tactic=('ring', []), state_before="case h.e'_2\ns : ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\nh : c = 0
\n⊢ 0 * a = 0", state_after='no goals'), AnnotatedTactic(tactic='rw [h]', annotated_tactic=('rw [h]', []), state_before="case h.e'_1.h\ns : ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\nh : c = 0\nx✝ : ℕ\n⊢ c * s x✝ = 0", state_after="case h.e'_1.h\ns
: ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\nh : c = 0\nx✝ : ℕ\n⊢ 0 * s x✝ = 0"), AnnotatedTactic(tactic='ring', annotated_tactic=('ring', []), state_before="case h.e'_1.h\ns : ℕ → ℝ\na c : ℝ\ncs : ConvergesTo s a\nh : c = 0\nx✝ : ℕ\n⊢ 0 * s x✝ = 0"
, state_after='no goals')], difficulty_rating=None), Theorem(full_name='MyRing.add_right_cancel', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(194, 1), end=(195, 8), url='https://github.com/a
vigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem add_right_cancel {a b c : R} (h : a + b = c + b) : a = c :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('so
rry', []), state_before='R : Type u_1\ninst✝ : Ring R\na b c : R\nh : a + b = c + b\n⊢ a = c', state_after='no goals')], difficulty_rating=None), Theorem(full_name='MyGroup.mul_one', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in
_Algebraic_Structures.lean'), start=(471, 1), end=(472, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem mul_one (a : G) : a * 1 = a :=', traced_tactic
s=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='G : Type u_1\ninst✝ : Group G\na : G\n⊢ a * 1 = a', state_after='no goals')], difficulty_rating=None), Theorem(full_name='MyRing.eq_neg_of_add_eq_zero', file_path=
PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(298, 1), end=(299, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='the
orem eq_neg_of_add_eq_zero {a b : R} (h : a + b = 0) : a = -b :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='R : Type u_1\ninst✝ : Ring R\na b : R\nh : a + b = 0\n⊢ a = -b', state_after='no go
als')], difficulty_rating=None), Theorem(full_name='C03S06.convergesTo_unique', file_path=PosixPath('MIL/C03_Logic/S06_Sequences_and_Convergence.lean'), start=(332, 1), end=(347, 25), url='https://github.com/avigad/mathematics_in_lean_source',
commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem convergesTo_unique {s : ℕ → ℝ} {a b : ℝ}\n      (sa : ConvergesTo s a) (sb : ConvergesTo s b) :\n    a = b :=', traced_tactics=[AnnotatedTactic(tactic='by_contra abne
', annotated_tactic=('by_contra abne', []), state_before='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\n⊢ a = b', state_after='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\n⊢ False'), Annotated
Tactic(tactic='have : |a - b| > 0 := by sorry', annotated_tactic=('have : |a - b| > 0 := by sorry', []), state_before='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\n⊢ False', state_after='s : ℕ → ℝ\na b : ℝ\nsa
: ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\n⊢ False'), AnnotatedTactic(tactic='let ε := |a - b| / 2', annotated_tactic=('let ε := |a - b| / 2', []), state_before='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : Co
nvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\n⊢ False', state_after='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\n⊢ False'), AnnotatedTactic(tactic='have εpos : ε >
 0 := by\n  change |a - b| / 2 > 0\n  linarith', annotated_tactic=('have εpos : ε > 0 := by\n    change |a - b| / 2 > 0\n    linarith', []), state_before='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a
- b| > 0\nε : ℝ := |a - b| / 2\n⊢ False', state_after='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\n⊢ False'), AnnotatedTactic(tactic='rcases sa ε εpos wi
th ⟨Na, hNa⟩', annotated_tactic=('rcases sa ε εpos with ⟨Na, hNa⟩', []), state_before='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\n⊢ False', state_after=
'case intro\ns : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa : ∀ n ≥ Na, |s n - a| < ε\n⊢ False'), AnnotatedTactic(tactic='rcases sb ε εpos with
⟨Nb, hNb⟩', annotated_tactic=('rcases sb ε εpos with ⟨Nb, hNb⟩', []), state_before='case intro\ns : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa :
 ∀ n ≥ Na, |s n - a| < ε\n⊢ False', state_after='case intro.intro\ns : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa : ∀ n ≥ Na, |s n - a| < ε\nNb
: ℕ\nhNb : ∀ n ≥ Nb, |s n - b| < ε\n⊢ False'), AnnotatedTactic(tactic='let N := max Na Nb', annotated_tactic=('let N := <a>max</a> Na Nb', [Annotation(full_name='Max.max', def_path='.lake/packages/lean4/src/lean/Init/Prelude.lean', def_pos=(112
2, 3), def_end_pos=(1122, 6))]), state_before='case intro.intro\ns : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa : ∀ n ≥ Na, |s n - a| < ε\nNb :
ℕ\nhNb : ∀ n ≥ Nb, |s n - b| < ε\n⊢ False', state_after='case intro.intro\ns : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa : ∀ n ≥ Na, |s n - a|
< ε\nNb : ℕ\nhNb : ∀ n ≥ Nb, |s n - b| < ε\nN : ℕ := max Na Nb\n⊢ False'), AnnotatedTactic(tactic='have absa : |s N - a| < ε := by sorry', annotated_tactic=('have absa : |s N - a| < ε := by sorry', []), state_before='case intro.intro\ns : ℕ → ℝ
\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa : ∀ n ≥ Na, |s n - a| < ε\nNb : ℕ\nhNb : ∀ n ≥ Nb, |s n - b| < ε\nN : ℕ := max Na Nb\n⊢ False', state_afte
r='case intro.intro\ns : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa : ∀ n ≥ Na, |s n - a| < ε\nNb : ℕ\nhNb : ∀ n ≥ Nb, |s n - b| < ε\nN : ℕ := m
ax Na Nb\nabsa : |s N - a| < ε\n⊢ False'), AnnotatedTactic(tactic='have absb : |s N - b| < ε := by sorry', annotated_tactic=('have absb : |s N - b| < ε := by sorry', []), state_before='case intro.intro\ns : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\
nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa : ∀ n ≥ Na, |s n - a| < ε\nNb : ℕ\nhNb : ∀ n ≥ Nb, |s n - b| < ε\nN : ℕ := max Na Nb\nabsa : |s N - a| < ε\n⊢ False', state_after='case in
tro.intro\ns : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa : ∀ n ≥ Na, |s n - a| < ε\nNb : ℕ\nhNb : ∀ n ≥ Nb, |s n - b| < ε\nN : ℕ := max Na Nb\n
absa : |s N - a| < ε\nabsb : |s N - b| < ε\n⊢ False'), AnnotatedTactic(tactic='have : |a - b| < |a - b| := by sorry', annotated_tactic=('have : |a - b| < |a - b| := by sorry', []), state_before='case intro.intro\ns : ℕ → ℝ\na b : ℝ\nsa : Conver
gesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa : ∀ n ≥ Na, |s n - a| < ε\nNb : ℕ\nhNb : ∀ n ≥ Nb, |s n - b| < ε\nN : ℕ := max Na Nb\nabsa : |s N - a| < ε\nabsb : |s N - b| < ε
\n⊢ False', state_after='case intro.intro\ns : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis✝ : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa : ∀ n ≥ Na, |s n - a| < ε\nNb : ℕ\nhNb : ∀ n ≥ Nb, |s
 n - b| < ε\nN : ℕ := max Na Nb\nabsa : |s N - a| < ε\nabsb : |s N - b| < ε\nthis : |a - b| < |a - b|\n⊢ False'), AnnotatedTactic(tactic='exact lt_irrefl _ this', annotated_tactic=('exact <a>lt_irrefl</a> _ this', [Annotation(full_name='lt_irre
fl', def_path='./.lake/packages/mathlib/Mathlib/Init/Order/Defs.lean', def_pos=(79, 9), def_end_pos=(79, 18))]), state_before='case intro.intro\ns : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis✝ : |a - b| > 0\
nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa : ∀ n ≥ Na, |s n - a| < ε\nNb : ℕ\nhNb : ∀ n ≥ Nb, |s n - b| < ε\nN : ℕ := max Na Nb\nabsa : |s N - a| < ε\nabsb : |s N - b| < ε\nthis : |a - b| < |a - b|\n⊢ False', state_after='no goals'), Anno
tatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\n⊢ |a - b| > 0', state_after='no goals'), AnnotatedTactic(tactic='change |a - b| / 2 > 0', a
nnotated_tactic=('change |a - b| / 2 > 0', []), state_before='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\n⊢ ε > 0', state_after='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s
 a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\n⊢ |a - b| / 2 > 0'), AnnotatedTactic(tactic='linarith', annotated_tactic=('linarith', []), state_before='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : Converges
To s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\n⊢ |a - b| / 2 > 0', state_after='no goals'), AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : Converges
To s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa : ∀ n ≥ Na, |s n - a| < ε\nNb : ℕ\nhNb : ∀ n ≥ Nb, |s n - b| < ε\nN : ℕ := max Na Nb\n⊢ |s N - a| < ε', state_after='no goals'), AnnotatedTactic(tactic='
sorry', annotated_tactic=('sorry', []), state_before='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa : ∀ n ≥ Na, |s n - a| < ε\nNb : ℕ\nhNb : ∀
n ≥ Nb, |s n - b| < ε\nN : ℕ := max Na Nb\nabsa : |s N - a| < ε\n⊢ |s N - b| < ε', state_after='no goals'), AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='s : ℕ → ℝ\na b : ℝ\nsa : ConvergesTo s a\nsb : ConvergesTo
 s b\nabne : ¬a = b\nthis : |a - b| > 0\nε : ℝ := |a - b| / 2\nεpos : ε > 0\nNa : ℕ\nhNa : ∀ n ≥ Na, |s n - a| < ε\nNb : ℕ\nhNb : ∀ n ≥ Nb, |s n - b| < ε\nN : ℕ := max Na Nb\nabsa : |s N - a| < ε\nabsb : |s N - b| < ε\n⊢ |a - b| < |a - b|', sta
te_after='no goals')], difficulty_rating=None), Theorem(full_name='C03S01.Subset.trans', file_path=PosixPath('MIL/C03_Logic/S01_Implication_and_the_Universal_Quantifier.lean'), start=(506, 1), end=(507, 8), url='https://github.com/avigad/mathem
atics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem Subset.trans : r ⊆ s → s ⊆ t → r ⊆ t :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='α : Typ
e u_1\nr s t : Set α\n⊢ r ⊆ s → s ⊆ t → r ⊆ t', state_after='no goals')], difficulty_rating=None), Theorem(full_name='MyRing.neg_eq_of_add_eq_zero', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), star
t=(295, 1), end=(296, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem neg_eq_of_add_eq_zero {a b : R} (h : a + b = 0) : -a = b :=', traced_tactics=[An
notatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='R : Type u_1\ninst✝ : Ring R\na b : R\nh : a + b = 0\n⊢ -a = b', state_after='no goals')], difficulty_rating=None), Theorem(full_name='C03S06.exists_abs_le_of_converges
To', file_path=PosixPath('MIL/C03_Logic/S06_Sequences_and_Convergence.lean'), start=(239, 1), end=(243, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theore
m exists_abs_le_of_convergesTo {s : ℕ → ℝ} {a : ℝ} (cs : ConvergesTo s a) :\n    ∃ N b, ∀ n, N ≤ n → |s n| < b :=', traced_tactics=[AnnotatedTactic(tactic='rcases cs 1 zero_lt_one with ⟨N, h⟩', annotated_tactic=('rcases cs 1 <a>zero_lt_one</a>
with ⟨N, h⟩', [Annotation(full_name='zero_lt_one', def_path='./.lake/packages/mathlib/Mathlib/Algebra/Order/ZeroLEOne.lean', def_pos=(39, 15), def_end_pos=(39, 26))]), state_before='s : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\n⊢ ∃ N b, ∀ (n : ℕ), N
≤ n → |s n| < b', state_after='case intro\ns : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nN : ℕ\nh : ∀ n ≥ N, |s n - a| < 1\n⊢ ∃ N b, ∀ (n : ℕ), N ≤ n → |s n| < b'), AnnotatedTactic(tactic='use N, |a| + 1', annotated_tactic=('use N, |a| + 1', []), sta
te_before='case intro\ns : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nN : ℕ\nh : ∀ n ≥ N, |s n - a| < 1\n⊢ ∃ N b, ∀ (n : ℕ), N ≤ n → |s n| < b', state_after='case h\ns : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nN : ℕ\nh : ∀ n ≥ N, |s n - a| < 1\n⊢ ∀ (n : ℕ
), N ≤ n → |s n| < |a| + 1'), AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='case h\ns : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nN : ℕ\nh : ∀ n ≥ N, |s n - a| < 1\n⊢ ∀ (n : ℕ), N ≤ n → |s n| < |a| + 1', state_after='n
o goals')], difficulty_rating=None), Theorem(full_name='C03S05.MyAbs.neg_le_abs_self', file_path=PosixPath('MIL/C03_Logic/S05_Disjunction.lean'), start=(160, 1), end=(161, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='
5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem neg_le_abs_self (x : ℝ) : -x ≤ |x| :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='x✝ y x : ℝ\n⊢ -x ≤ |x|', state_after='no
 goals')], difficulty_rating=None), Theorem(full_name='absorb2', file_path=PosixPath('MIL/C02_Basics/S05_Proving_Facts_about_Algebraic_Structures.lean'), start=(245, 1), end=(246, 8), url='https://github.com/avigad/mathematics_in_lean_source',
commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem absorb2 : x ⊔ x ⊓ y = x :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='α : Type u_1\ninst✝ : Lattice α\nx y z : α\
n⊢ x ⊔ x ⊓ y = x', state_after='no goals')], difficulty_rating=None), Theorem(full_name='C03S05.MyAbs.le_abs_self', file_path=PosixPath('MIL/C03_Logic/S05_Disjunction.lean'), start=(157, 1), end=(158, 8), url='https://github.com/avigad/mathemat
ics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem le_abs_self (x : ℝ) : x ≤ |x| :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='x✝ y x : ℝ\n⊢ x
≤ |x|', state_after='no goals')], difficulty_rating=None)]
ipdb> repo_url
'https://github.com/avigad/mathematics_in_lean_source'
ipdb> n
> /data/yingzi_ma/lean_project/ReProver/main.py(814)prove_sorry_theorems()
    813         repo_commit = repo.commit
--> 814
    815         logger.info(f"Found {len(sorry_theorems)} sorry theorems to prove")

ipdb> n
2024-09-08 17:04:03.904 | INFO     | __main__:prove_sorry_theorems:814 - Found 29 sorry theorems to prove
> /data/yingzi_ma/lean_project/ReProver/main.py(816)prove_sorry_theorems()
    815         logger.info(f"Found {len(sorry_theorems)} sorry theorems to prove")
--> 816
    817         theorem_batch = []

ipdb> exit()
2024-09-08 17:04:10.662 | INFO     | __main__:main:1677 - An error occurred:
Traceback (most recent call last):
  File "/data/yingzi_ma/lean_project/ReProver/main.py", line 1646, in main
    raid_dir=RAID_DIR,
  File "/data/yingzi_ma/lean_project/ReProver/main.py", line 816, in prove_sorry_theorems
  File "/data/yingzi_ma/lean_project/ReProver/main.py", line 816, in prove_sorry_theorems
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/bdb.py", line 90, in trace_dispatch
    return self.dispatch_line(frame)
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/bdb.py", line 115, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
^Z
[41]+  Stopped                 bash run_code.sh
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ bash run_code.sh
Script executed from: /data/yingzi_ma/lean_project/ReProver
[2024-09-08 17:04:41,838] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
2024-09-08 17:04:45.689 | INFO     | __main__:main:1182 - Running retrieval baseline
2024-09-08 17:04:45.689 | INFO     | __main__:main:1185 - Configuring LeanDojo...
2024-09-08 17:04:45.692 | INFO     | generate_benchmark_lean4:configure_leandojo:347 - Current working directory: /data/yingzi_ma/lean_project/ReProver
2024-09-08 17:04:45.692 | INFO     | __main__:main:1187 - LeanDojo configured
2024-09-08 17:04:45.692 | INFO     | __main__:main:1192 - Starting the main process
2024-09-08 17:04:45.692 | INFO     | __main__:main:1200 - Loading database from /data/yingzi_ma/lean_project/dynamic_database_retrieval_single_repo_no_ewc_pfr.json
2024-09-08 17:05:00.179 | INFO     | dynamic_database:add_repository:600 - Attempting to add repository: https://github.com/teorth/pfr (commit: fa398a5b853c7e94e3294c45e50c6aee013a2687)
2024-09-08 17:05:00.179 | INFO     | dynamic_database:add_repository:603 - Added new repository: https://github.com/teorth/pfr (commit: fa398a5b853c7e94e3294c45e50c6aee013a2687)
2024-09-08 17:05:05.857 | INFO     | dynamic_database:add_repository:600 - Attempting to add repository: https://github.com/avigad/mathematics_in_lean_source (commit: 5297e0fb051367c48c0a084411853a576389ecf5)
2024-09-08 17:05:05.857 | INFO     | dynamic_database:add_repository:603 - Added new repository: https://github.com/avigad/mathematics_in_lean_source (commit: 5297e0fb051367c48c0a084411853a576389ecf5)
2024-09-08 17:05:06.095 | INFO     | __main__:main:1202 - Loaded database from /data/yingzi_ma/lean_project/dynamic_database_retrieval_single_repo_no_ewc_pfr.json
2024-09-08 17:05:06.095 | INFO     | __main__:main:1209 - Found 15 repositories
2024-09-08 17:05:06.096 | INFO     | __main__:main:1300 - Starting without curriculum learning
2024-09-08 17:05:06.463 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.8.0-rc2
2024-09-08 17:05:21.680 | INFO     | __main__:main:1329 - Finding compatible repositories...
2024-09-08 17:05:22.010 | INFO     | __main__:get_compatible_commit:322 - Latest commit: cfe61bc71b5ea501f89df36c945949a1febf5e75
2024-09-08 17:05:22.010 | INFO     | __main__:get_compatible_commit:325 - Creating LeanGitRepo for https://github.com/avigad/mathematics_in_lean_source
2024-09-08 17:05:22.198 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.11.0-rc2
2024-09-08 17:05:37.239 | INFO     | __main__:get_compatible_commit:327 - Getting config for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:05:37.239 | INFO     | __main__:get_compatible_commit:334 - Searching for compatible commit for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:05:37.247 | INFO     | __main__:get_compatible_commit:340 - Already in a Git repository
2024-09-08 17:05:37.248 | INFO     | __main__:get_compatible_commit:350 - Fetching commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:05:39.195 | INFO     | __main__:get_compatible_commit:354 - Fetched commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:05:39.199 | INFO     | __main__:get_compatible_commit:360 - Getting list of commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:05:39.209 | INFO     | __main__:get_compatible_commit:365 - Found 526 commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:05:39.610 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.10.0
2024-09-08 17:05:56.233 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.10.0-rc2

2024-09-08 17:06:15.501 | INFO     | __main__:get_compatible_commit:372 - Found compatible commit 5297e0fb051367c48c0a084411853a576389ecf5 for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:06:15.785 | INFO     | __main__:get_compatible_commit:322 - Latest commit: cfe61bc71b5ea501f89df36c945949a1febf5e75
2024-09-08 17:06:15.785 | INFO     | __main__:get_compatible_commit:325 - Creating LeanGitRepo for https://github.com/avigad/mathematics_in_lean_source
2024-09-08 17:06:15.785 | INFO     | __main__:get_compatible_commit:327 - Getting config for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:06:15.785 | INFO     | __main__:get_compatible_commit:334 - Searching for compatible commit for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:06:15.789 | INFO     | __main__:get_compatible_commit:340 - Already in a Git repository
2024-09-08 17:06:15.790 | INFO     | __main__:get_compatible_commit:350 - Fetching commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:06:17.786 | INFO     | __main__:get_compatible_commit:354 - Fetched commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:06:17.791 | INFO     | __main__:get_compatible_commit:360 - Getting list of commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:06:17.800 | INFO     | __main__:get_compatible_commit:365 - Found 526 commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:06:17.801 | INFO     | __main__:get_compatible_commit:372 - Found compatible commit 5297e0fb051367c48c0a084411853a576389ecf5 for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:06:17.803 | INFO     | __main__:main:1332 - Finished finding compatible repositories
2024-09-08 17:06:17.803 | INFO     | __main__:main:1350 - length of lean_git_repos: 2
2024-09-08 17:06:17.803 | INFO     | __main__:main:1351 - i: 0
2024-09-08 17:06:17.803 | INFO     | __main__:main:1356 - Main process
2024-09-08 17:06:17.803 | INFO     | __main__:main:1357 - Using lambda = 0.0
2024-09-08 17:06:17.803 | INFO     | __main__:main:1358 - Processing https://github.com/avigad/mathematics_in_lean_source
2024-09-08 17:06:17.803 | INFO     | __main__:main:1381 - Adding repo to repos_for_merged_dataset
2024-09-08 17:06:17.804 | INFO     | __main__:main:1392 - All GPUs
2024-09-08 17:06:17.804 | INFO     | __main__:main:1622 - Starting the prover
2024-09-08 17:06:17.804 | INFO     | prover.proof_search:__init__:407 - Inside __init__
2024-09-08 17:06:17.804 | INFO     | prover.proof_search:__init__:412 - ckpt_path is not None
2024-09-08 17:06:17.804 | INFO     | prover.proof_search:__init__:427 - Using RAG
/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/lightning_fabric/utilities/cloud_io.py:57: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly.
It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `
weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.se
rialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
Lightning automatically upgraded your loaded checkpoint from v0.0.0 to v2.2.4. To apply the upgrade to your files permanently, run `python -m pytorch_lightning.utilities.upgrade_checkpoint ../kaiyuy_leandojo-lean4-retriever-tacgen-byt5-small/mo
del_lightning.ckpt`
2024-09-08 17:06:18.479 | INFO     | generator.model:__init__:124 - Retriever checkpoint path: /data/yingzi_ma/lean_project/checkpoints_PT_full_merge_each_time_ewc/mathlib4_29dcec074de168ac2bf835a77ef68bbe069194c5.ckpt
2024-09-08 17:06:18.479 | INFO     | generator.model:__init__:138 - Loading the retriever from /data/yingzi_ma/lean_project/checkpoints_PT_full_merge_each_time_ewc/mathlib4_29dcec074de168ac2bf835a77ef68bbe069194c5.ckpt
Lightning automatically upgraded your loaded checkpoint from v0.0.0 to v2.2.4. To apply the upgrade to your files permanently, run `python -m pytorch_lightning.utilities.upgrade_checkpoint ../checkpoints_PT_full_merge_each_time_ewc/mathlib4_29d
cec074de168ac2bf835a77ef68bbe069194c5.ckpt`
2024-09-08 17:06:20.426 | INFO     | generator.model:__init__:151 - RetrievalAugmentedGenerator initialized
/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/pytorch_lightning/core/saving.py:184: Found keys that are in the model state dict but not in the checkpoint: ['retriever.encoder.shared.weight', 'retriever.encoder.encoder.em
bed_tokens.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.v.weight', 'retriever.encoder.e
ncoder.block.0.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight', 'retriever.encoder.encoder.block.0.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.0.layer.1.
DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.0.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.0.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.0.layer.1.layer_norm.weight', 'retriever
.encoder.encoder.block.1.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.1.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.1.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.1.layer.0.SelfAtt
ention.o.weight', 'retriever.encoder.encoder.block.1.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.1.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.1.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.
encoder.block.1.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.1.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.k.wei
ght', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.2.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.2.laye
r.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.2.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.2.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.2.layer.1.layer_norm.weight', 'retri
ever.encoder.encoder.block.3.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.3.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.3.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.3.layer.0.Sel
fAttention.o.weight', 'retriever.encoder.encoder.block.3.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.3.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.3.layer.1.DenseReluDense.wi_1.weight', 'retriever.enco
der.encoder.block.3.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.3.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.k
.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.4.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.4.
layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.4.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.4.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.4.layer.1.layer_norm.weight', 'r
etriever.encoder.encoder.block.5.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.5.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.5.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.5.layer.0
.SelfAttention.o.weight', 'retriever.encoder.encoder.block.5.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.5.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.5.layer.1.DenseReluDense.wi_1.weight', 'retriever.
encoder.encoder.block.5.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.5.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttenti
on.k.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.6.layer.0.layer_norm.weight', 'retriever.encoder.encoder.bloc
k.6.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.6.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.6.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.6.layer.1.layer_norm.weight'
, 'retriever.encoder.encoder.block.7.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.7.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.7.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.7.lay
er.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.7.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.7.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.7.layer.1.DenseReluDense.wi_1.weight', 'retrie
ver.encoder.encoder.block.7.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.7.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAtt
ention.k.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.8.layer.0.layer_norm.weight', 'retriever.encoder.encoder.
block.8.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.8.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.8.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.8.layer.1.layer_norm.wei
ght', 'retriever.encoder.encoder.block.9.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.9.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.9.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.9
.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.9.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.9.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.9.layer.1.DenseReluDense.wi_1.weight', 're
triever.encoder.encoder.block.9.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.9.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.10.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.10.layer.0.S
elfAttention.k.weight', 'retriever.encoder.encoder.block.10.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.10.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.10.layer.0.layer_norm.weight', 'retriever.encoder
.encoder.block.10.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.10.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.10.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.10.layer.1.l
ayer_norm.weight', 'retriever.encoder.encoder.block.11.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.11.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.11.layer.0.SelfAttention.v.weight', 'retriever.encoder
.encoder.block.11.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.11.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.11.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.11.layer.1.DenseReluDen
se.wi_1.weight', 'retriever.encoder.encoder.block.11.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.11.layer.1.layer_norm.weight', 'retriever.encoder.encoder.final_layer_norm.weight']
/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/pytorch_lightning/core/saving.py:188: Found keys that are not in the model state dict but in the checkpoint: ['pytorch-lightning_version', 'global_step', 'epoch', 'state_dict
', 'callbacks', 'loops', 'legacy_pytorch-lightning_version', 'hyper_parameters']
2024-09-08 17:06:20.965 | INFO     | prover.proof_search:__init__:451 - Loaded model from /data/yingzi_ma/lean_project/kaiyuy_leandojo-lean4-retriever-tacgen-byt5-small/model_lightning.ckpt
2024-09-08 17:06:20.966 | INFO     | prover.proof_search:__init__:452 - Using retriever: PremiseRetriever(
  (encoder): T5EncoderModel(
    (shared): Embedding(384, 1472)
    (encoder): T5Stack(
      (embed_tokens): Embedding(384, 1472)
      (block): ModuleList(
        (0): T5Block(
          (layer): ModuleList(
            (0): T5LayerSelfAttention(
              (SelfAttention): T5Attention(
                (q): Linear(in_features=1472, out_features=384, bias=False)
                (k): Linear(in_features=1472, out_features=384, bias=False)
                (v): Linear(in_features=1472, out_features=384, bias=False)
                (o): Linear(in_features=384, out_features=1472, bias=False)
                (relative_attention_bias): Embedding(32, 6)
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (1): T5LayerFF(
              (DenseReluDense): T5DenseGatedActDense(
                (wi_0): Linear(in_features=1472, out_features=3584, bias=False)
                (wi_1): Linear(in_features=1472, out_features=3584, bias=False)
                (wo): Linear(in_features=3584, out_features=1472, bias=False)
                (dropout): Dropout(p=0.1, inplace=False)
                (act): NewGELUActivation()
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
        (1-11): 11 x T5Block(
          (layer): ModuleList(
            (0): T5LayerSelfAttention(
              (SelfAttention): T5Attention(
                (q): Linear(in_features=1472, out_features=384, bias=False)
                (k): Linear(in_features=1472, out_features=384, bias=False)
                (v): Linear(in_features=1472, out_features=384, bias=False)
                (o): Linear(in_features=384, out_features=1472, bias=False)
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (1): T5LayerFF(
              (DenseReluDense): T5DenseGatedActDense(
                (wi_0): Linear(in_features=1472, out_features=3584, bias=False)
                (wi_1): Linear(in_features=1472, out_features=3584, bias=False)
                (wo): Linear(in_features=3584, out_features=1472, bias=False)
                (dropout): Dropout(p=0.1, inplace=False)
                (act): NewGELUActivation()
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
      (final_layer_norm): T5LayerNorm()
      (dropout): Dropout(p=0.1, inplace=False)
    )
  )
)
2024-09-08 17:06:20.966 | INFO     | prover.proof_search:__init__:455 - Loading indexed corpus from /data/yingzi_ma/lean_project/datasets_retrieval_single_repo_no_ewc_pfr/merged_with_new_mathematics_in_lean_source_5297e0fb051367c48c0a084411853a
576389ecf5/corpus.jsonl
2024-09-08 17:06:20.966 | INFO     | common:__init__:208 - Building the corpus from /data/yingzi_ma/lean_project/datasets_retrieval_single_repo_no_ewc_pfr/merged_with_new_mathematics_in_lean_source_5297e0fb051367c48c0a084411853a576389ecf5/corpu
s.jsonl
2024-09-08 17:06:29.847 | INFO     | retrieval.model:load_corpus:159 - Embeddings staled load corpus jsonl: True
2024-09-08 17:06:29.848 | INFO     | prover.proof_search:__init__:457 - Loaded indexed corpus from /data/yingzi_ma/lean_project/datasets_retrieval_single_repo_no_ewc_pfr/merged_with_new_mathematics_in_lean_source_5297e0fb051367c48c0a084411853a5
76389ecf5/corpus.jsonl
2024-09-08 17:06:29.848 | INFO     | prover.proof_search:__init__:471 - Launching 4 workers with 4 GPUs.
2024-09-08 17:06:32,516 INFO worker.py:1774 -- Started a local Ray instance. View the dashboard at 127.0.0.1:8267
^Z
[42]+  Stopped                 bash run_code.sh
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ ray stop
Could not terminate `/usr/bin/python3 /usr/local/bin/user_traffic_monitor.py` due to (pid=283579, name='python3')
Stopped only 0 out of 405 Ray processes within the grace period 16 seconds. Set `-v` to see more details. Remaining processes [psutil.Process(pid=1003873, name='raylet', status='zombie', started='16:58:40'), psutil.Process(pid=1037806, name='ra
ylet', status='zombie', started='17:06:31'), psutil.Process(pid=1004075, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1037987, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004
044, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1035669, name='ray::ProverActor', status='terminated', started='16:59:47'), psutil.Process(pid=1004134, name='ray::IDLE', status='terminated', started='16:58:42
'), psutil.Process(pid=1038080, name='ray::IDLE', status='terminated', started='17:06:33'), psutil.Process(pid=1004205, name='ray::IDLE', status='terminated', started='16:58:44'), psutil.Process(pid=1038083, name='ray::IDLE', status='terminated
', started='17:06:33'), psutil.Process(pid=1004198, name='ray::IDLE', status='terminated', started='16:58:44'), psutil.Process(pid=1038011, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1037980, name='ray::IDLE'
, status='terminated', started='17:06:31'), psutil.Process(pid=1004179, name='ray::IDLE', status='terminated', started='16:58:43'), psutil.Process(pid=1004037, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=10040
60, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004152, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1005539, name='ray::IDLE', status='terminated', started='16:58:49'), psut
il.Process(pid=1037962, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004121, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1038022, name='ray::IDLE', status='terminated', start
ed='17:06:32'), psutil.Process(pid=1004251, name='ray::IDLE', status='terminated', started='16:58:45'), psutil.Process(pid=1004889, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=1038035, name='ray::IDLE', status
='terminated', started='17:06:32'), psutil.Process(pid=1004135, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1005570, name='ray::IDLE', status='terminated', started='16:58:50'), psutil.Process(pid=1034992, name
='ray::ProverActor', status='terminated', started='16:59:11'), psutil.Process(pid=1038059, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004115, name='ray::IDLE', status='terminated', started='16:58:41'), psuti
l.Process(pid=1004053, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1037965, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004107, name='ray::IDLE', status='terminated', starte
d='16:58:41'), psutil.Process(pid=1004118, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1038052, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1005391, name='ray::IDLE', status=
'terminated', started='16:58:49'), psutil.Process(pid=1004318, name='ray::IDLE', status='terminated', started='16:58:46'), psutil.Process(pid=1004110, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004147, name=
'ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1004162, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1038055, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Proces
s(pid=1004736, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=1004091, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1037994, name='ray::IDLE', status='terminated', started='17:06
:31'), psutil.Process(pid=1038038, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004094, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1038061, name='ray::IDLE', status='termina
ted', started='17:06:32'), psutil.Process(pid=1004380, name='ray::IDLE', status='terminated', started='16:58:46'), psutil.Process(pid=1004085, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004494, name='ray::ID
LE', status='terminated', started='16:58:46'), psutil.Process(pid=1037990, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004148, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=10
04149, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1004215, name='ray::IDLE', status='terminated', started='16:58:45'), psutil.Process(pid=1005072, name='ray::IDLE', status='terminated', started='16:58:47'), p
sutil.Process(pid=1003946, name='python', status='terminated', started='16:58:40'), psutil.Process(pid=1004208, name='ray::IDLE', status='terminated', started='16:58:44'), psutil.Process(pid=1004493, name='ray::IDLE', status='terminated', start
ed='16:58:46'), psutil.Process(pid=1038111, name='ray::IDLE', status='terminated', started='17:06:34'), psutil.Process(pid=1037969, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1038045, name='ray::IDLE', status
='terminated', started='17:06:32'), psutil.Process(pid=1004254, name='ray::IDLE', status='terminated', started='16:58:46'), psutil.Process(pid=1004081, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004071, name
='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1037983, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004040, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Proce
ss(pid=1004151, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1004173, name='ray::IDLE', status='terminated', started='16:58:43'), psutil.Process(pid=1038001, name='ray::IDLE', status='terminated', started='17:0
6:32'), psutil.Process(pid=1004144, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1004112, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004074, name='ray::IDLE', status='termin
ated', started='16:58:40'), psutil.Process(pid=1004128, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004043, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1037976, name='ray::I
DLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004033, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004143, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1
004133, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1004056, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004177, name='ray::IDLE', status='terminated', started='16:58:43'),
psutil.Process(pid=1038018, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004193, name='ray::IDLE', status='terminated', started='16:58:44'), psutil.Process(pid=1004204, name='ray::IDLE', status='terminated', s
tarted='16:58:44'), psutil.Process(pid=1038041, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1038031, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1038075, name='ray::IDLE', st
atus='terminated', started='17:06:32'), psutil.Process(pid=1004067, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1037979, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004036,
name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004049, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004247, name='ray::IDLE', status='terminated', started='16:58:45'), psutil.P
rocess(pid=1004088, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004100, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1038034, name='ray::IDLE', status='terminated', started='
17:06:32'), psutil.Process(pid=1004156, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1005131, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=1038058, name='ray::IDLE', status='te
rminated', started='17:06:32'), psutil.Process(pid=1004695, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=1037972, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1038004, name='ra
y::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1005387, name='ray::IDLE', status='terminated', started='16:58:49'), psutil.Process(pid=1004194, name='ray::IDLE', status='terminated', started='16:58:44'), psutil.Process(p
id=1005466, name='ray::IDLE', status='terminated', started='16:58:49'), psutil.Process(pid=1004068, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004211, name='ray::IDLE', status='terminated', started='16:58:45
'), psutil.Process(pid=1038089, name='ray::IDLE', status='terminated', started='17:06:33'), psutil.Process(pid=1038027, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1005167, name='ray::IDLE', status='terminated
', started='16:58:48'), psutil.Process(pid=1004117, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1038095, name='ray::IDLE', status='terminated', started='17:06:33'), psutil.Process(pid=1004097, name='ray::IDLE'
, status='terminated', started='16:58:41'), psutil.Process(pid=1004187, name='ray::IDLE', status='terminated', started='16:58:44'), psutil.Process(pid=1004255, name='ray::IDLE', status='terminated', started='16:58:46'), psutil.Process(pid=10055
36, name='ray::IDLE', status='terminated', started='16:58:49'), psutil.Process(pid=1005538, name='ray::IDLE', status='terminated', started='16:58:49'), psutil.Process(pid=1038093, name='ray::IDLE', status='terminated', started='17:06:33'), psut
il.Process(pid=1037986, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004201, name='ray::IDLE', status='terminated', started='16:58:44'), psutil.Process(pid=1038014, name='ray::IDLE', status='terminated', start
ed='17:06:32'), psutil.Process(pid=1004125, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004093, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004585, name='ray::IDLE', status
='terminated', started='16:58:47'), psutil.Process(pid=1038007, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004184, name='ray::IDLE', status='terminated', started='16:58:43'), psutil.Process(pid=1037997, name
='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004077, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1005263, name='ray::IDLE', status='terminated', started='16:58:48'), psutil.Proce
ss(pid=1038048, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004105, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1003786, name='python', status='zombie', started='16:58:39'),
 psutil.Process(pid=1038051, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1038021, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1038195, name='ray::IDLE', status='terminated',
started='17:06:38'), psutil.Process(pid=1037968, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004047, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004267, name='ray::IDLE', s
tatus='terminated', started='16:58:46'), psutil.Process(pid=1004168, name='ray::IDLE', status='terminated', started='16:58:43'), psutil.Process(pid=1004070, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1037982,
 name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004039, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004064, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.
Process(pid=1038099, name='ray::IDLE', status='terminated', started='17:06:33'), psutil.Process(pid=1004114, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1038037, name='ray::IDLE', status='terminated', started=
'17:06:32'), psutil.Process(pid=1004838, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=1004106, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004063, name='ray::IDLE', status='t
erminated', started='16:58:40'), psutil.Process(pid=1037975, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004032, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004230, name='r
ay::IDLE', status='terminated', started='16:58:45'), psutil.Process(pid=1005339, name='ray::IDLE', status='terminated', started='16:58:48'), psutil.Process(pid=1038017, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(
pid=1004136, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1004161, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1038030, name='ray::IDLE', status='terminated', started='17:06:3
2'), psutil.Process(pid=1004207, name='ray::IDLE', status='terminated', started='16:58:44'), psutil.Process(pid=1038054, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004888, name='ray::IDLE', status='terminate
d', started='16:58:47'), psutil.Process(pid=1004090, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004048, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1038094, name='ray::IDLE
', status='terminated', started='17:06:33'), psutil.Process(pid=1004154, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1005369, name='ray::IDLE', status='terminated', started='16:58:48'), psutil.Process(pid=1038
068, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004189, name='ray::IDLE', status='terminated', started='16:58:44'), psutil.Process(pid=1005390, name='ray::IDLE', status='terminated', started='16:58:49'), psu
til.Process(pid=1004317, name='ray::IDLE', status='terminated', started='16:58:46'), psutil.Process(pid=1004158, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1035422, name='ray::ProverActor', status='terminated
', started='16:59:34'), psutil.Process(pid=1038060, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004146, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1004084, name='ray::IDLE'
, status='terminated', started='16:58:41'), psutil.Process(pid=1038063, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004130, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=10041
20, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1037989, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1038000, name='ray::IDLE', status='terminated', started='17:06:32'), psut
il.Process(pid=1004013, name='python', status='zombie', started='16:58:40'), psutil.Process(pid=1004320, name='ray::IDLE', status='terminated', started='16:58:46'), psutil.Process(pid=1005535, name='ray::IDLE', status='terminated', started='16:
58:49'), psutil.Process(pid=1004123, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1037884, name='python', status='zombie', started='17:06:31'), psutil.Process(pid=1037993, name='ray::IDLE', status='terminated',
 started='17:06:31'), psutil.Process(pid=1038125, name='ray::IDLE', status='terminated', started='17:06:34'), psutil.Process(pid=1004150, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1004379, name='ray::IDLE',
status='terminated', started='16:58:46'), psutil.Process(pid=1038116, name='ray::IDLE', status='terminated', started='17:06:34'), psutil.Process(pid=1005031, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=1038044
, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004165, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1038086, name='ray::IDLE', status='terminated', started='17:06:33'), psutil
.Process(pid=1004209, name='ray::IDLE', status='terminated', started='16:58:44'), psutil.Process(pid=1038003, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1005229, name='ray::IDLE', status='terminated', started
='16:58:48'), psutil.Process(pid=1004172, name='ray::IDLE', status='terminated', started='16:58:43'), psutil.Process(pid=1004183, name='ray::IDLE', status='terminated', started='16:58:43'), psutil.Process(pid=1037996, name='ray::IDLE', status='
terminated', started='17:06:31'), psutil.Process(pid=1037964, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1005510, name='ray::IDLE', status='terminated', started='16:58:49'), psutil.Process(pid=1004078, name='
ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004066, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1037978, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process
(pid=1004137, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1005177, name='ray::IDLE', status='terminated', started='16:58:48'), psutil.Process(pid=1005039, name='ray::IDLE', status='terminated', started='16:58:
47'), psutil.Process(pid=1038020, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004109, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004195, name='ray::IDLE', status='terminat
ed', started='16:58:44'), psutil.Process(pid=1037880, name='python', status='terminated', started='17:06:31'), psutil.Process(pid=1004176, name='ray::IDLE', status='terminated', started='16:58:43'), psutil.Process(pid=1038033, name='ray::IDLE',
 status='terminated', started='17:06:32'), psutil.Process(pid=1004111, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004167, name='ray::IDLE', status='terminated', started='16:58:43'), psutil.Process(pid=958540
, name='python', status='zombie', started='16:01:41'), psutil.Process(pid=1004266, name='ray::IDLE', status='terminated', started='16:58:46'), psutil.Process(pid=1038123, name='ray::IDLE', status='terminated', started='17:06:34'), psutil.Proces
s(pid=1038057, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004069, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004059, name='ray::IDLE', status='terminated', started='16:58
:40'), psutil.Process(pid=1037971, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1005170, name='ray::IDLE', status='terminated', started='16:58:48'), psutil.Process(pid=1038065, name='ray::IDLE', status='termina
ted', started='17:06:32'), psutil.Process(pid=1038013, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004124, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1038036, name='ray::ID
LE', status='terminated', started='17:06:32'), psutil.Process(pid=1004210, name='ray::IDLE', status='terminated', started='16:58:45'), psutil.Process(pid=1004923, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=10
04584, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=1005133, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=1038026, name='ray::IDLE', status='terminated', started='17:06:32'), p
sutil.Process(pid=1004062, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004031, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1038118, name='ray::IDLE', status='terminated', st
arted='17:06:34'), psutil.Process(pid=1005565, name='ray::IDLE', status='terminated', started='16:58:49'), psutil.Process(pid=1038029, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004087, name='ray::IDLE', sta
tus='terminated', started='16:58:41'), psutil.Process(pid=1004055, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004099, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1037973, n
ame='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004214, name='ray::IDLE', status='terminated', started='16:58:45'), psutil.Process(pid=1004181, name='ray::IDLE', status='terminated', started='16:58:43'), psutil.Pr
ocess(pid=1005377, name='ray::IDLE', status='terminated', started='16:58:48'), psutil.Process(pid=1004153, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1004217, name='ray::IDLE', status='terminated', started='1
6:58:45'), psutil.Process(pid=1004240, name='ray::IDLE', status='terminated', started='16:58:45'), psutil.Process(pid=1038096, name='ray::IDLE', status='terminated', started='17:06:33'), psutil.Process(pid=1038067, name='ray::IDLE', status='ter
minated', started='17:06:32'), psutil.Process(pid=1004252, name='ray::IDLE', status='terminated', started='16:58:45'), psutil.Process(pid=1038284, name='ray::IDLE', status='terminated', started='17:06:39'), psutil.Process(pid=1005368, name='ray
::IDLE', status='terminated', started='16:58:48'), psutil.Process(pid=1004188, name='ray::IDLE', status='terminated', started='16:58:44'), psutil.Process(pid=1038047, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pi
d=1004104, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004127, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004116, name='ray::IDLE', status='terminated', started='16:58:41'
), psutil.Process(pid=1037985, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004926, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=1005389, name='ray::IDLE', status='terminated'
, started='16:58:49'), psutil.Process(pid=1004157, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1003948, name='python', status='terminated', started='16:58:40'), psutil.Process(pid=1035211, name='ray::ProverAct
or', status='terminated', started='16:59:23'), psutil.Process(pid=1038040, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004129, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=10
04119, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1038053, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=958374, name='python', status='zombie', started='16:01:39'), psutil.Pr
ocess(pid=1005106, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=1004089, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004080, name='ray::IDLE', status='terminated', started='1
6:58:40'), psutil.Process(pid=1037992, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004257, name='ray::IDLE', status='terminated', started='16:58:46'), psutil.Process(pid=1004164, name='ray::IDLE', status='ter
minated', started='16:58:42'), psutil.Process(pid=1037974, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1038043, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1005567, name='ray
::IDLE', status='terminated', started='16:58:50'), psutil.Process(pid=1004229, name='ray::IDLE', status='terminated', started='16:58:45'), psutil.Process(pid=1038016, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pi
d=1004171, name='ray::IDLE', status='terminated', started='16:58:43'), psutil.Process(pid=1037963, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1038050, name='ray::IDLE', status='terminated', started='17:06:32'
), psutil.Process(pid=1004042, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004065, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1037717, name='python', status='zombie', start
ed='17:06:30'), psutil.Process(pid=1038069, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1037967, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=958376, name='python', status='zo
mbie', started='16:01:40'), psutil.Process(pid=1005571, name='ray::IDLE', status='terminated', started='16:58:50'), psutil.Process(pid=1038006, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004096, name='ray::I
DLE', status='terminated', started='16:58:41'), psutil.Process(pid=1005038, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=1038062, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1
004196, name='ray::IDLE', status='terminated', started='16:58:44'), psutil.Process(pid=1038074, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004076, name='ray::IDLE', status='terminated', started='16:58:40'),
psutil.Process(pid=1004665, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=1004058, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1037970, name='ray::IDLE', status='terminated', s
tarted='17:06:31'), psutil.Process(pid=1038081, name='ray::IDLE', status='terminated', started='17:06:33'), psutil.Process(pid=1005375, name='ray::IDLE', status='terminated', started='16:58:48'), psutil.Process(pid=1004052, name='ray::IDLE', st
atus='terminated', started='16:58:40'), psutil.Process(pid=1004131, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1038025, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004092,
name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004051, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1005540, name='ray::IDLE', status='terminated', started='16:58:49'), psutil.P
rocess(pid=1005509, name='ray::IDLE', status='terminated', started='16:58:49'), psutil.Process(pid=1005467, name='ray::IDLE', status='terminated', started='16:58:49'), psutil.Process(pid=1004155, name='ray::IDLE', status='terminated', started='
16:58:42'), psutil.Process(pid=1005534, name='ray::IDLE', status='terminated', started='16:58:49'), psutil.Process(pid=1004086, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004098, name='ray::IDLE', status='te
rminated', started='16:58:41'), psutil.Process(pid=1038032, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1005265, name='ray::IDLE', status='terminated', started='16:58:48'), psutil.Process(pid=1005504, name='ra
y::IDLE', status='terminated', started='16:58:49'), psutil.Process(pid=1037981, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004159, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(p
id=1005169, name='ray::IDLE', status='terminated', started='16:58:48'), psutil.Process(pid=1004182, name='ray::IDLE', status='terminated', started='16:58:43'), psutil.Process(pid=1037995, name='ray::IDLE', status='terminated', started='17:06:31
'), psutil.Process(pid=1004216, name='ray::IDLE', status='terminated', started='16:58:45'), psutil.Process(pid=1004140, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1037998, name='ray::IDLE', status='terminated
', started='17:06:32'), psutil.Process(pid=1004122, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1003785, name='python', status='zombie', started='16:58:38'), psutil.Process(pid=1038087, name='ray::IDLE', statu
s='terminated', started='17:06:33'), psutil.Process(pid=1004103, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1038078, name='ray::IDLE', status='terminated', started='17:06:33'), psutil.Process(pid=1004185, nam
e='ray::IDLE', status='terminated', started='16:58:43'), psutil.Process(pid=1005564, name='ray::IDLE', status='terminated', started='16:58:49'), psutil.Process(pid=1005228, name='ray::IDLE', status='terminated', started='16:58:48'), psutil.Proc
ess(pid=1004459, name='ray::IDLE', status='terminated', started='16:58:46'), psutil.Process(pid=1037988, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1004045, name='ray::IDLE', status='terminated', started='16:
58:40'), psutil.Process(pid=1004145, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1004160, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1004095, name='ray::IDLE', status='termi
nated', started='16:58:41'), psutil.Process(pid=1038102, name='ray::IDLE', status='terminated', started='17:06:33'), psutil.Process(pid=1038039, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1037977, name='ray::
IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1038064, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1037999, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=
1004034, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004079, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1037991, name='ray::IDLE', status='terminated', started='17:06:31'),
 psutil.Process(pid=1038012, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004178, name='ray::IDLE', status='terminated', started='16:58:43'), psutil.Process(pid=1004256, name='ray::IDLE', status='terminated',
started='16:58:46'), psutil.Process(pid=1004073, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004038, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004180, name='ray::IDLE', s
tatus='terminated', started='16:58:43'), psutil.Process(pid=1004082, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004138, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1004061,
 name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1005566, name='ray::IDLE', status='terminated', started='16:58:50'), psutil.Process(pid=1005367, name='ray::IDLE', status='terminated', started='16:58:48'), psutil.
Process(pid=1004141, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1038023, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004102, name='ray::IDLE', status='terminated', started=
'16:58:41'), psutil.Process(pid=1038046, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1038015, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004072, name='ray::IDLE', status='t
erminated', started='16:58:40'), psutil.Process(pid=1037984, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1038028, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004041, name='r
ay::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1005542, name='ray::IDLE', status='terminated', started='16:58:49'), psutil.Process(pid=1004054, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(
pid=1037966, name='ray::IDLE', status='terminated', started='17:06:31'), psutil.Process(pid=1038090, name='ray::IDLE', status='terminated', started='17:06:33'), psutil.Process(pid=1004248, name='ray::IDLE', status='terminated', started='16:58:4
5'), psutil.Process(pid=1005073, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=1038066, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004057, name='ray::IDLE', status='terminate
d', started='16:58:40'), psutil.Process(pid=1037882, name='python', status='terminated', started='17:06:31'), psutil.Process(pid=1038160, name='ray::IDLE', status='terminated', started='17:06:36'), psutil.Process(pid=1004886, name='ray::IDLE',
status='terminated', started='16:58:47'), psutil.Process(pid=1005388, name='ray::IDLE', status='terminated', started='16:58:49'), psutil.Process(pid=1004132, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1038056
, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1038024, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1004693, name='ray::IDLE', status='terminated', started='16:58:47'), psutil
.Process(pid=1004050, name='ray::IDLE', status='terminated', started='16:58:40'), psutil.Process(pid=1004190, name='ray::IDLE', status='terminated', started='16:58:44'), psutil.Process(pid=1004495, name='ray::IDLE', status='terminated', started
='16:58:46'), psutil.Process(pid=1004126, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1004213, name='ray::IDLE', status='terminated', started='16:58:45'), psutil.Process(pid=1038136, name='ray::IDLE', status='
terminated', started='17:06:35'), psutil.Process(pid=1038073, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1038008, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1038019, name='
ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1005029, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=1038042, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process
(pid=1038076, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1005493, name='ray::IDLE', status='terminated', started='16:58:49'), psutil.Process(pid=1004083, name='ray::IDLE', status='terminated', started='16:58:
40'), psutil.Process(pid=1005168, name='ray::IDLE', status='terminated', started='16:58:48'), psutil.Process(pid=1004142, name='ray::IDLE', status='terminated', started='16:58:42'), psutil.Process(pid=1004197, name='ray::IDLE', status='terminat
ed', started='16:58:44'), psutil.Process(pid=1004101, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1038002, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1038010, name='ray::IDL
E', status='terminated', started='17:06:32'), psutil.Process(pid=1004113, name='ray::IDLE', status='terminated', started='16:58:41'), psutil.Process(pid=1005132, name='ray::IDLE', status='terminated', started='16:58:47'), psutil.Process(pid=103
8005, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1038049, name='ray::IDLE', status='terminated', started='17:06:32'), psutil.Process(pid=1003528, name='gcs_server', status='zombie', started='16:58:38'), psuti
l.Process(pid=1037459, name='gcs_server', status='zombie', started='17:06:29')] will be forcefully terminated.
You can also use `--force` to forcefully terminate processes or set higher `--grace-period` to wait longer time for proper termination.
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ nvidia-smi
Sun Sep  8 17:08:15 2024
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 550.90.07              Driver Version: 550.90.07      CUDA Version: 12.4     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA A100-SXM4-80GB          On  |   00000000:0F:00.0 Off |                    0 |
| N/A   41C    P0             88W /  400W |   56545MiB /  81920MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   1  NVIDIA A100-SXM4-80GB          On  |   00000000:15:00.0 Off |                    0 |
| N/A   38C    P0             91W /  400W |   58242MiB /  81920MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   2  NVIDIA A100-SXM4-80GB          On  |   00000000:53:00.0 Off |                    0 |
| N/A   50C    P0             91W /  400W |   54366MiB /  81920MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   3  NVIDIA A100-SXM4-80GB          On  |   00000000:D6:00.0 Off |                    0 |
| N/A   37C    P0             84W /  400W |   60520MiB /  81920MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+

+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|    0   N/A  N/A    920433      C   python                                      13518MiB |
|    0   N/A  N/A    920550      C   ...miniconda3/envs/ReProver/bin/python        414MiB |
|    0   N/A  N/A    920551      C   ...miniconda3/envs/ReProver/bin/python        414MiB |
|    0   N/A  N/A    920552      C   ...miniconda3/envs/ReProver/bin/python        414MiB |
|    0   N/A  N/A    956150      C   python                                       2564MiB |
|    0   N/A  N/A   1000979      C   python                                       2564MiB |
|    0   N/A  N/A   1037025      C   python                                       2564MiB |
|    1   N/A  N/A    920550      C   ...miniconda3/envs/ReProver/bin/python      13662MiB |
|    2   N/A  N/A    920551      C   ...miniconda3/envs/ReProver/bin/python      13662MiB |
|    3   N/A  N/A    920552      C   ...miniconda3/envs/ReProver/bin/python      13518MiB |
+-----------------------------------------------------------------------------------------+
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ python ppl_gpus.py
GPU UUID                                      PID  User       Process Name      GPU Memory Usage (MB)    GPU Index  GPU Name
----------------------------------------  -------  ---------  --------------  -----------------------  -----------  ---------------------
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   572274  yingzi_ma  pt_main_thread                    16638            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   916107  yingzi_ma  pt_main_thread                    14910            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   920433  yingzi_ma  pt_main_thread                    13518            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   920550  yingzi_ma  pt_main_thread                      414            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   920552  yingzi_ma  pt_main_thread                      414            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   920551  yingzi_ma  pt_main_thread                      414            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   956150  yingzi_ma  pt_main_thread                     2564            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170  1000979  yingzi_ma  pt_main_thread                     2564            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170  1037025  yingzi_ma  pt_main_thread                     2564            0  NVIDIA A100-SXM4-80GB
GPU-32e0e849-07a3-675d-607a-e4a4aa0e94c3   920550  yingzi_ma  pt_main_thread                    13662            1  NVIDIA A100-SXM4-80GB
GPU-138080ee-7067-8d64-5f32-888dcb1369a1   920551  yingzi_ma  pt_main_thread                    13662            2  NVIDIA A100-SXM4-80GB
GPU-6831d1f1-6c9c-de6b-b4d1-768186dbc285   920552  yingzi_ma  pt_main_thread                    13518            3  NVIDIA A100-SXM4-80GB
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ kill -9 572274 916107 920433 920550 920552
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ python ppl_gpus.py
GPU UUID                                      PID  User       Process Name      GPU Memory Usage (MB)    GPU Index  GPU Name
----------------------------------------  -------  ---------  --------------  -----------------------  -----------  ---------------------
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   572274  yingzi_ma  pt_main_thread                    16638            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   916107  yingzi_ma  pt_main_thread                    14910            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   920433  yingzi_ma  pt_main_thread                    13518            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   920551  yingzi_ma  pt_main_thread                      414            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   956150  yingzi_ma  pt_main_thread                     2564            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170  1000979  yingzi_ma  pt_main_thread                     2564            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170  1037025  yingzi_ma  pt_main_thread                     2564            0  NVIDIA A100-SXM4-80GB
GPU-138080ee-7067-8d64-5f32-888dcb1369a1   920551  yingzi_ma  pt_main_thread                    13662            2  NVIDIA A100-SXM4-80GB
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ kill -9 572274 916107 920433 920551 956150 1000979 1037025 920551
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ python ppl_gpus.py
GPU UUID                                      PID  User       Process Name      GPU Memory Usage (MB)    GPU Index  GPU Name
----------------------------------------  -------  ---------  --------------  -----------------------  -----------  ---------------------
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   572274  yingzi_ma  pt_main_thread                    16638            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   916107  yingzi_ma  pt_main_thread                    14910            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   920433  yingzi_ma  pt_main_thread                    13518            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170  1000979  yingzi_ma  pt_main_thread                     2564            0  NVIDIA A100-SXM4-80GB
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ nvidia-si
Command 'nvidia-si' not found, did you mean:
  command 'nvidia-smi' from deb nvidia-utils-390 (390.157-0ubuntu0.22.04.2)
  command 'nvidia-smi' from deb nvidia-utils-418-server (418.226.00-0ubuntu5~0.22.04.1)
  command 'nvidia-smi' from deb nvidia-utils-450-server (450.248.02-0ubuntu0.22.04.1)
  command 'nvidia-smi' from deb nvidia-utils-470 (470.256.02-0ubuntu0.22.04.1)
  command 'nvidia-smi' from deb nvidia-utils-470-server (470.256.02-0ubuntu0.22.04.1)
  command 'nvidia-smi' from deb nvidia-utils-535 (535.183.01-0ubuntu0.22.04.1)
  command 'nvidia-smi' from deb nvidia-utils-535-server (535.183.01-0ubuntu0.22.04.1)
  command 'nvidia-smi' from deb nvidia-utils-550 (550.90.07-0ubuntu0.22.04.1)
  command 'nvidia-smi' from deb nvidia-utils-550-server (550.90.07-0ubuntu0.22.04.1)
  command 'nvidia-smi' from deb nvidia-utils-510 (510.60.02-0ubuntu1)
  command 'nvidia-smi' from deb nvidia-utils-510-server (510.47.03-0ubuntu3)
  command 'nvidia-smi' from deb nvidia-utils-545 (545.29.06-0ubuntu0.22.04.2)
Try: apt install <deb name>
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ nvidia-smi
Sun Sep  8 17:09:15 2024
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 550.90.07              Driver Version: 550.90.07      CUDA Version: 12.4     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA A100-SXM4-80GB          On  |   00000000:0F:00.0 Off |                    0 |
| N/A   41C    P0             88W /  400W |   48842MiB /  81920MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   1  NVIDIA A100-SXM4-80GB          On  |   00000000:15:00.0 Off |                    0 |
| N/A   38C    P0             91W /  400W |   58242MiB /  81920MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   2  NVIDIA A100-SXM4-80GB          On  |   00000000:53:00.0 Off |                    0 |
| N/A   50C    P0             91W /  400W |   54366MiB /  81920MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   3  NVIDIA A100-SXM4-80GB          On  |   00000000:D6:00.0 Off |                    0 |
| N/A   37C    P0             84W /  400W |   60520MiB /  81920MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+

+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
+-----------------------------------------------------------------------------------------+
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ bash run_code.sh
Script executed from: /data/yingzi_ma/lean_project/ReProver
[2024-09-08 17:09:28,513] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
2024-09-08 17:09:32.338 | INFO     | __main__:main:1182 - Running retrieval baseline
2024-09-08 17:09:32.338 | INFO     | __main__:main:1185 - Configuring LeanDojo...
2024-09-08 17:09:32.341 | INFO     | generate_benchmark_lean4:configure_leandojo:347 - Current working directory: /data/yingzi_ma/lean_project/ReProver
2024-09-08 17:09:32.341 | INFO     | __main__:main:1187 - LeanDojo configured
2024-09-08 17:09:32.341 | INFO     | __main__:main:1192 - Starting the main process
2024-09-08 17:09:32.341 | INFO     | __main__:main:1200 - Loading database from /data/yingzi_ma/lean_project/dynamic_database_retrieval_single_repo_no_ewc_pfr.json
2024-09-08 17:09:46.206 | INFO     | dynamic_database:add_repository:600 - Attempting to add repository: https://github.com/teorth/pfr (commit: fa398a5b853c7e94e3294c45e50c6aee013a2687)
2024-09-08 17:09:46.206 | INFO     | dynamic_database:add_repository:603 - Added new repository: https://github.com/teorth/pfr (commit: fa398a5b853c7e94e3294c45e50c6aee013a2687)
2024-09-08 17:09:51.546 | INFO     | dynamic_database:add_repository:600 - Attempting to add repository: https://github.com/avigad/mathematics_in_lean_source (commit: 5297e0fb051367c48c0a084411853a576389ecf5)
2024-09-08 17:09:51.547 | INFO     | dynamic_database:add_repository:603 - Added new repository: https://github.com/avigad/mathematics_in_lean_source (commit: 5297e0fb051367c48c0a084411853a576389ecf5)
2024-09-08 17:09:51.771 | INFO     | __main__:main:1202 - Loaded database from /data/yingzi_ma/lean_project/dynamic_database_retrieval_single_repo_no_ewc_pfr.json
2024-09-08 17:09:51.771 | INFO     | __main__:main:1209 - Found 15 repositories
2024-09-08 17:09:51.771 | INFO     | __main__:main:1300 - Starting without curriculum learning
2024-09-08 17:09:51.956 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.11.0-rc2
2024-09-08 17:10:07.489 | INFO     | __main__:main:1329 - Finding compatible repositories...
2024-09-08 17:10:07.783 | INFO     | __main__:get_compatible_commit:322 - Latest commit: cfe61bc71b5ea501f89df36c945949a1febf5e75
2024-09-08 17:10:07.783 | INFO     | __main__:get_compatible_commit:325 - Creating LeanGitRepo for https://github.com/avigad/mathematics_in_lean_source
2024-09-08 17:10:07.783 | INFO     | __main__:get_compatible_commit:327 - Getting config for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:10:07.783 | INFO     | __main__:get_compatible_commit:334 - Searching for compatible commit for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:10:07.787 | INFO     | __main__:get_compatible_commit:340 - Already in a Git repository
2024-09-08 17:10:07.788 | INFO     | __main__:get_compatible_commit:350 - Fetching commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:10:09.933 | INFO     | __main__:get_compatible_commit:354 - Fetched commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:10:09.938 | INFO     | __main__:get_compatible_commit:360 - Getting list of commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:10:09.947 | INFO     | __main__:get_compatible_commit:365 - Found 526 commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:10:10.004 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.10.0
2024-09-08 17:10:25.935 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.10.0-rc2
2024-09-08 17:10:41.786 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.8.0-rc2
2024-09-08 17:10:56.769 | INFO     | __main__:get_compatible_commit:372 - Found compatible commit 5297e0fb051367c48c0a084411853a576389ecf5 for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:10:57.079 | INFO     | __main__:get_compatible_commit:322 - Latest commit: cfe61bc71b5ea501f89df36c945949a1febf5e75
2024-09-08 17:10:57.080 | INFO     | __main__:get_compatible_commit:325 - Creating LeanGitRepo for https://github.com/avigad/mathematics_in_lean_source
2024-09-08 17:10:57.080 | INFO     | __main__:get_compatible_commit:327 - Getting config for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:10:57.080 | INFO     | __main__:get_compatible_commit:334 - Searching for compatible commit for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:10:57.083 | INFO     | __main__:get_compatible_commit:340 - Already in a Git repository
2024-09-08 17:10:57.084 | INFO     | __main__:get_compatible_commit:350 - Fetching commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:10:59.067 | INFO     | __main__:get_compatible_commit:354 - Fetched commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:10:59.071 | INFO     | __main__:get_compatible_commit:360 - Getting list of commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:10:59.081 | INFO     | __main__:get_compatible_commit:365 - Found 526 commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:10:59.082 | INFO     | __main__:get_compatible_commit:372 - Found compatible commit 5297e0fb051367c48c0a084411853a576389ecf5 for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:10:59.083 | INFO     | __main__:main:1332 - Finished finding compatible repositories
2024-09-08 17:10:59.084 | INFO     | __main__:main:1350 - length of lean_git_repos: 2
2024-09-08 17:10:59.084 | INFO     | __main__:main:1351 - i: 0
2024-09-08 17:10:59.084 | INFO     | __main__:main:1356 - Main process
2024-09-08 17:10:59.084 | INFO     | __main__:main:1357 - Using lambda = 0.0
2024-09-08 17:10:59.084 | INFO     | __main__:main:1358 - Processing https://github.com/avigad/mathematics_in_lean_source
2024-09-08 17:10:59.084 | INFO     | __main__:main:1381 - Adding repo to repos_for_merged_dataset
2024-09-08 17:10:59.084 | INFO     | __main__:main:1392 - All GPUs
2024-09-08 17:10:59.084 | INFO     | __main__:main:1622 - Starting the prover
2024-09-08 17:10:59.084 | INFO     | prover.proof_search:__init__:407 - Inside __init__
2024-09-08 17:10:59.084 | INFO     | prover.proof_search:__init__:412 - ckpt_path is not None
2024-09-08 17:10:59.084 | INFO     | prover.proof_search:__init__:427 - Using RAG
/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/lightning_fabric/utilities/cloud_io.py:57: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly.
It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `
weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.se
rialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
Lightning automatically upgraded your loaded checkpoint from v0.0.0 to v2.2.4. To apply the upgrade to your files permanently, run `python -m pytorch_lightning.utilities.upgrade_checkpoint ../kaiyuy_leandojo-lean4-retriever-tacgen-byt5-small/mo
del_lightning.ckpt`
2024-09-08 17:10:59.747 | INFO     | generator.model:__init__:124 - Retriever checkpoint path: /data/yingzi_ma/lean_project/checkpoints_PT_full_merge_each_time_ewc/mathlib4_29dcec074de168ac2bf835a77ef68bbe069194c5.ckpt
2024-09-08 17:10:59.747 | INFO     | generator.model:__init__:138 - Loading the retriever from /data/yingzi_ma/lean_project/checkpoints_PT_full_merge_each_time_ewc/mathlib4_29dcec074de168ac2bf835a77ef68bbe069194c5.ckpt
Lightning automatically upgraded your loaded checkpoint from v0.0.0 to v2.2.4. To apply the upgrade to your files permanently, run `python -m pytorch_lightning.utilities.upgrade_checkpoint ../checkpoints_PT_full_merge_each_time_ewc/mathlib4_29d
cec074de168ac2bf835a77ef68bbe069194c5.ckpt`
2024-09-08 17:11:01.747 | INFO     | generator.model:__init__:151 - RetrievalAugmentedGenerator initialized
/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/pytorch_lightning/core/saving.py:184: Found keys that are in the model state dict but not in the checkpoint: ['retriever.encoder.shared.weight', 'retriever.encoder.encoder.em
bed_tokens.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.v.weight', 'retriever.encoder.e
ncoder.block.0.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight', 'retriever.encoder.encoder.block.0.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.0.layer.1.
DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.0.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.0.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.0.layer.1.layer_norm.weight', 'retriever
.encoder.encoder.block.1.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.1.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.1.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.1.layer.0.SelfAtt
ention.o.weight', 'retriever.encoder.encoder.block.1.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.1.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.1.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.
encoder.block.1.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.1.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.k.wei
ght', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.2.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.2.laye
r.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.2.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.2.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.2.layer.1.layer_norm.weight', 'retri
ever.encoder.encoder.block.3.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.3.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.3.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.3.layer.0.Sel
fAttention.o.weight', 'retriever.encoder.encoder.block.3.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.3.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.3.layer.1.DenseReluDense.wi_1.weight', 'retriever.enco
der.encoder.block.3.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.3.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.k
.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.4.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.4.
layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.4.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.4.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.4.layer.1.layer_norm.weight', 'r
etriever.encoder.encoder.block.5.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.5.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.5.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.5.layer.0
.SelfAttention.o.weight', 'retriever.encoder.encoder.block.5.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.5.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.5.layer.1.DenseReluDense.wi_1.weight', 'retriever.
encoder.encoder.block.5.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.5.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttenti
on.k.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.6.layer.0.layer_norm.weight', 'retriever.encoder.encoder.bloc
k.6.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.6.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.6.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.6.layer.1.layer_norm.weight'
, 'retriever.encoder.encoder.block.7.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.7.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.7.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.7.lay
er.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.7.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.7.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.7.layer.1.DenseReluDense.wi_1.weight', 'retrie
ver.encoder.encoder.block.7.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.7.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAtt
ention.k.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.8.layer.0.layer_norm.weight', 'retriever.encoder.encoder.
block.8.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.8.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.8.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.8.layer.1.layer_norm.wei
ght', 'retriever.encoder.encoder.block.9.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.9.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.9.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.9
.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.9.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.9.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.9.layer.1.DenseReluDense.wi_1.weight', 're
triever.encoder.encoder.block.9.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.9.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.10.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.10.layer.0.S
elfAttention.k.weight', 'retriever.encoder.encoder.block.10.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.10.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.10.layer.0.layer_norm.weight', 'retriever.encoder
.encoder.block.10.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.10.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.10.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.10.layer.1.l
ayer_norm.weight', 'retriever.encoder.encoder.block.11.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.11.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.11.layer.0.SelfAttention.v.weight', 'retriever.encoder
.encoder.block.11.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.11.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.11.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.11.layer.1.DenseReluDen
se.wi_1.weight', 'retriever.encoder.encoder.block.11.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.11.layer.1.layer_norm.weight', 'retriever.encoder.encoder.final_layer_norm.weight']
/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/pytorch_lightning/core/saving.py:188: Found keys that are not in the model state dict but in the checkpoint: ['pytorch-lightning_version', 'global_step', 'epoch', 'state_dict
', 'callbacks', 'loops', 'legacy_pytorch-lightning_version', 'hyper_parameters']
2024-09-08 17:11:02.292 | INFO     | prover.proof_search:__init__:451 - Loaded model from /data/yingzi_ma/lean_project/kaiyuy_leandojo-lean4-retriever-tacgen-byt5-small/model_lightning.ckpt
2024-09-08 17:11:02.293 | INFO     | prover.proof_search:__init__:452 - Using retriever: PremiseRetriever(
  (encoder): T5EncoderModel(
    (shared): Embedding(384, 1472)
    (encoder): T5Stack(
      (embed_tokens): Embedding(384, 1472)
      (block): ModuleList(
        (0): T5Block(
          (layer): ModuleList(
            (0): T5LayerSelfAttention(
              (SelfAttention): T5Attention(
                (q): Linear(in_features=1472, out_features=384, bias=False)
                (k): Linear(in_features=1472, out_features=384, bias=False)
                (v): Linear(in_features=1472, out_features=384, bias=False)
                (o): Linear(in_features=384, out_features=1472, bias=False)
                (relative_attention_bias): Embedding(32, 6)
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (1): T5LayerFF(
              (DenseReluDense): T5DenseGatedActDense(
                (wi_0): Linear(in_features=1472, out_features=3584, bias=False)
                (wi_1): Linear(in_features=1472, out_features=3584, bias=False)
                (wo): Linear(in_features=3584, out_features=1472, bias=False)
                (dropout): Dropout(p=0.1, inplace=False)
                (act): NewGELUActivation()
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
        (1-11): 11 x T5Block(
          (layer): ModuleList(
            (0): T5LayerSelfAttention(
              (SelfAttention): T5Attention(
                (q): Linear(in_features=1472, out_features=384, bias=False)
                (k): Linear(in_features=1472, out_features=384, bias=False)
                (v): Linear(in_features=1472, out_features=384, bias=False)
                (o): Linear(in_features=384, out_features=1472, bias=False)
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (1): T5LayerFF(
              (DenseReluDense): T5DenseGatedActDense(
                (wi_0): Linear(in_features=1472, out_features=3584, bias=False)
                (wi_1): Linear(in_features=1472, out_features=3584, bias=False)
                (wo): Linear(in_features=3584, out_features=1472, bias=False)
                (dropout): Dropout(p=0.1, inplace=False)
                (act): NewGELUActivation()
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
      (final_layer_norm): T5LayerNorm()
      (dropout): Dropout(p=0.1, inplace=False)
    )
  )
)
2024-09-08 17:11:02.294 | INFO     | prover.proof_search:__init__:455 - Loading indexed corpus from /data/yingzi_ma/lean_project/datasets_retrieval_single_repo_no_ewc_pfr/merged_with_new_mathematics_in_lean_source_5297e0fb051367c48c0a084411853a
576389ecf5/corpus.jsonl
2024-09-08 17:11:02.294 | INFO     | common:__init__:208 - Building the corpus from /data/yingzi_ma/lean_project/datasets_retrieval_single_repo_no_ewc_pfr/merged_with_new_mathematics_in_lean_source_5297e0fb051367c48c0a084411853a576389ecf5/corpu
s.jsonl
2024-09-08 17:11:11.106 | INFO     | retrieval.model:load_corpus:159 - Embeddings staled load corpus jsonl: True
2024-09-08 17:11:11.106 | INFO     | prover.proof_search:__init__:457 - Loaded indexed corpus from /data/yingzi_ma/lean_project/datasets_retrieval_single_repo_no_ewc_pfr/merged_with_new_mathematics_in_lean_source_5297e0fb051367c48c0a084411853a5
76389ecf5/corpus.jsonl
2024-09-08 17:11:11.106 | INFO     | prover.proof_search:__init__:471 - Launching 4 workers with 4 GPUs.
2024-09-08 17:11:13,769 INFO worker.py:1774 -- Started a local Ray instance. View the dashboard at 127.0.0.1:8265
(pid=1082284) [2024-09-08 17:11:52,040] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
(ProverActor pid=1082284) /data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle
 module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the
 default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by th
e user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimen
tal feature.
(ProverActor pid=1082284)   return torch.load(io.BytesIO(b))
(pid=1082460) [2024-09-08 17:12:03,286] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
(ProverActor pid=1082460) /data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle
 module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the
 default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by th
e user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimen
tal feature.
(ProverActor pid=1082460)   return torch.load(io.BytesIO(b))
(pid=1082646) [2024-09-08 17:12:14,851] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
(ProverActor pid=1082646) /data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle
 module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the
 default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by th
e user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimen
tal feature.
(ProverActor pid=1082646)   return torch.load(io.BytesIO(b))
> /data/yingzi_ma/lean_project/ReProver/main.py(802)prove_sorry_theorems()
    801
--> 802     processed_theorems: Set[Tuple[str, str, Tuple[int, int], Tuple[int, int]]] = set()
    803     all_encountered_theorems: Set[Tuple[str, str, Tuple[int, int], Tuple[int, int]]] = set()

ipdb> (pid=1082821) [2024-09-08 17:12:26,187] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
(ProverActor pid=1082821) /data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle
 module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the
 default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by th
e user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimen
tal feature.
(ProverActor pid=1082821)   return torch.load(io.BytesIO(b))
ipdb> n
> /data/yingzi_ma/lean_project/ReProver/main.py(803)prove_sorry_theorems()
    802     processed_theorems: Set[Tuple[str, str, Tuple[int, int], Tuple[int, int]]] = set()
--> 803     all_encountered_theorems: Set[Tuple[str, str, Tuple[int, int], Tuple[int, int]]] = set()
    804     last_save_time = datetime.datetime.now()

ipdb> n
> /data/yingzi_ma/lean_project/ReProver/main.py(804)prove_sorry_theorems()
    803     all_encountered_theorems: Set[Tuple[str, str, Tuple[int, int], Tuple[int, int]]] = set()
--> 804     last_save_time = datetime.datetime.now()
    805     save_interval = timedelta(minutes=30)

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(805)prove_sorry_theorems()
    804     last_save_time = datetime.datetime.now()
--> 805     save_interval = timedelta(minutes=30)
    806

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(808)prove_sorry_theorems()
    807     # Load previously encountered theorems
--> 808     all_encountered_theorems = load_encountered_theorems(ENCOUNTERED_THEOREMS_FILE)
    809

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(810)prove_sorry_theorems()
    809
--> 810     for repo in repos_to_process:
    811         sorry_theorems = repo.sorry_theorems_unproved

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(811)prove_sorry_theorems()
    810     for repo in repos_to_process:
--> 811         sorry_theorems = repo.sorry_theorems_unproved
    812         repo_url = repo.url

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(812)prove_sorry_theorems()
    811         sorry_theorems = repo.sorry_theorems_unproved
--> 812         repo_url = repo.url
    813         repo_commit = repo.commit

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(813)prove_sorry_theorems()
    812         repo_url = repo.url
--> 813         repo_commit = repo.commit
    814

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(815)prove_sorry_theorems()
    814
--> 815         logger.info(f"Found {len(sorry_theorems)} sorry theorems to prove")
    816

ipdb>
2024-09-08 17:12:55.575 | INFO     | __main__:prove_sorry_theorems:815 - Found 29 sorry theorems to prove
> /data/yingzi_ma/lean_project/ReProver/main.py(817)prove_sorry_theorems()
    816
--> 817         theorem_batch = []
    818         positions_batch = []

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(818)prove_sorry_theorems()
    817         theorem_batch = []
--> 818         positions_batch = []
    819

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(820)prove_sorry_theorems()
    819
--> 820         for theorem in tqdm(sorry_theorems, desc=f"Processing theorems from {repo.name}", unit="theorem"):
    821             # Ignore sorry theorems from the repo's dependencies

ipdb>
Processing theorems from avigad/mathematics_in_lean_source:   0%|                                                                                                                                                       | 0/29 [00:00<?, ?theorem/s]
> /data/yingzi_ma/lean_project/ReProver/main.py(822)prove_sorry_theorems()
    821             # Ignore sorry theorems from the repo's dependencies
--> 822             if theorem.url != repo_url or theorem.commit != repo_commit:
    823                 continue

ipdb> theorem
Theorem(full_name='MyRing.neg_neg', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(305, 1), end=(306, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0
a084411853a576389ecf5', theorem_statement='theorem neg_neg (a : R) : - -a = a :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='R : Type u_1\ninst✝ : Ring R\na : R\n⊢ - -a = a', state_after='no g
oals')], difficulty_rating=None)
ipdb> n
> /data/yingzi_ma/lean_project/ReProver/main.py(825)prove_sorry_theorems()
    824
--> 825             theorem_id = theorem_identifier(theorem)
    826

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(827)prove_sorry_theorems()
    826
--> 827             if theorem_id in all_encountered_theorems:
    828                 logger.info(f"Skipping already encountered theorem: {theorem.full_name}")

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(831)prove_sorry_theorems()
    830
--> 831             all_encountered_theorems.add(theorem_id)
    832             if theorem_id in processed_theorems:

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(832)prove_sorry_theorems()
    831             all_encountered_theorems.add(theorem_id)
--> 832             if theorem_id in processed_theorems:
    833                 logger.info(f"Skipping already processed theorem: {theorem.full_name}")

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(836)prove_sorry_theorems()
    835
--> 836             processed_theorems.add(theorem_id)
    837

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(838)prove_sorry_theorems()
    837
--> 838             logger.info(f"Searching for proof for {theorem.full_name}")
    839             logger.info(f"Position: {theorem.start}")

ipdb>
2024-09-08 17:13:12.991 | INFO     | __main__:prove_sorry_theorems:838 - Searching for proof for MyRing.neg_neg
> /data/yingzi_ma/lean_project/ReProver/main.py(839)prove_sorry_theorems()
    838             logger.info(f"Searching for proof for {theorem.full_name}")
--> 839             logger.info(f"Position: {theorem.start}")
    840

ipdb>
2024-09-08 17:13:13.409 | INFO     | __main__:prove_sorry_theorems:839 - Position: (305, 1)
> /data/yingzi_ma/lean_project/ReProver/main.py(842)prove_sorry_theorems()
    841             # Convert our Theorem to LeanDojo Theorem
--> 842             lean_dojo_theorem = LeanDojoTheorem(
    843                 repo=LeanGitRepo(repo_url, repo_commit),

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(843)prove_sorry_theorems()
    842             lean_dojo_theorem = LeanDojoTheorem(
--> 843                 repo=LeanGitRepo(repo_url, repo_commit),
    844                 file_path=theorem.file_path,

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(844)prove_sorry_theorems()
    843                 repo=LeanGitRepo(repo_url, repo_commit),
--> 844                 file_path=theorem.file_path,
    845                 full_name=theorem.full_name

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(845)prove_sorry_theorems()
    844                 file_path=theorem.file_path,
--> 845                 full_name=theorem.full_name
    846             )

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(842)prove_sorry_theorems()
    841             # Convert our Theorem to LeanDojo Theorem
--> 842             lean_dojo_theorem = LeanDojoTheorem(
    843                 repo=LeanGitRepo(repo_url, repo_commit),

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(848)prove_sorry_theorems()
    847
--> 848             theorem_batch.append((theorem, lean_dojo_theorem))
    849             positions_batch.append(Pos(*theorem.start))

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(849)prove_sorry_theorems()
    848             theorem_batch.append((theorem, lean_dojo_theorem))
--> 849             positions_batch.append(Pos(*theorem.start))
    850

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(851)prove_sorry_theorems()
    850
--> 851             if len(theorem_batch) == batch_size:
    852                 process_theorem_batch(theorem_batch, positions_batch, repo, db, prover, dynamic_database_json_path)

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(856)prove_sorry_theorems()
    855
--> 856             current_time = datetime.datetime.now()
    857             if current_time - last_save_time >= save_interval:

ipdb> b 852
Breakpoint 1 at /data/yingzi_ma/lean_project/ReProver/main.py:852
ipdb> c
Processing theorems from avigad/mathematics_in_lean_source:   3%|████▉                                                                                                                                          | 1/29 [00:24<11:23, 24.42s/theorem]
2024-09-08 17:13:21.699 | INFO     | __main__:prove_sorry_theorems:838 - Searching for proof for Cantor
2024-09-08 17:13:21.700 | INFO     | __main__:prove_sorry_theorems:839 - Position: (673, 1)
2024-09-08 17:13:21.701 | INFO     | __main__:prove_sorry_theorems:838 - Searching for proof for MyGroup.mul_right_inv
2024-09-08 17:13:21.701 | INFO     | __main__:prove_sorry_theorems:839 - Position: (468, 1)
2024-09-08 17:13:21.702 | INFO     | __main__:prove_sorry_theorems:838 - Searching for proof for C03S06.aux
2024-09-08 17:13:21.703 | INFO     | __main__:prove_sorry_theorems:839 - Position: (275, 1)
2024-09-08 17:13:21.704 | INFO     | __main__:prove_sorry_theorems:838 - Searching for proof for cauchySeq_of_le_geometric_two'
2024-09-08 17:13:21.704 | INFO     | __main__:prove_sorry_theorems:839 - Position: (423, 1)
2024-09-08 17:13:21.705 | INFO     | __main__:prove_sorry_theorems:838 - Searching for proof for C03S05.MyAbs.lt_abs
2024-09-08 17:13:21.706 | INFO     | __main__:prove_sorry_theorems:839 - Position: (193, 1)
2024-09-08 17:13:21.707 | INFO     | __main__:prove_sorry_theorems:838 - Searching for proof for MyRing.zero_mul
2024-09-08 17:13:21.708 | INFO     | __main__:prove_sorry_theorems:839 - Position: (279, 1)
2024-09-08 17:13:21.709 | INFO     | __main__:prove_sorry_theorems:838 - Searching for proof for C03S01.my_lemma3
2024-09-08 17:13:21.709 | INFO     | __main__:prove_sorry_theorems:839 - Position: (99, 1)
2024-09-08 17:13:21.710 | INFO     | __main__:prove_sorry_theorems:838 - Searching for proof for MyRing.two_mul
2024-09-08 17:13:21.711 | INFO     | __main__:prove_sorry_theorems:839 - Position: (407, 1)
2024-09-08 17:13:21.712 | INFO     | __main__:prove_sorry_theorems:838 - Searching for proof for C03S05.MyAbs.abs_add
2024-09-08 17:13:21.713 | INFO     | __main__:prove_sorry_theorems:839 - Position: (163, 1)
> /data/yingzi_ma/lean_project/ReProver/main.py(852)prove_sorry_theorems()
    851             if len(theorem_batch) == batch_size:
1-> 852                 process_theorem_batch(theorem_batch, positions_batch, repo, db, prover, dynamic_database_json_path)
    853                 theorem_batch = []

ipdb> theorem_batch
[(Theorem(full_name='MyRing.neg_neg', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(305, 1), end=(306, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48
c0a084411853a576389ecf5', theorem_statement='theorem neg_neg (a : R) : - -a = a :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='R : Type u_1\ninst✝ : Ring R\na : R\n⊢ - -a = a', state_after='no
 goals')], difficulty_rating=None), Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'), file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic
_Structures.lean'), full_name='MyRing.neg_neg')), (Theorem(full_name='Cantor', file_path=PosixPath('MIL/C04_Sets_and_Functions/S02_Functions.lean'), start=(673, 1), end=(685, 16), url='https://github.com/avigad/mathematics_in_lean_source', comm
it='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem Cantor : ∀ f : α → Set α, ¬Surjective f :=', traced_tactics=[AnnotatedTactic(tactic='intro f surjf', annotated_tactic=('intro f surjf', []), state_before='α✝ : Type u_1\n
β : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh : ∃ x, P x\nα : Type u_3\n⊢ ∀ (f : α → Set α), ¬Surjective f', state_after='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf
: Surjective f\n⊢ False'), AnnotatedTactic(tactic='let S := { i | i ∉ f i }', annotated_tactic=('let S := { i | i ∉ f i }', []), state_before='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh : ∃ x, P x\nα : Type u_3\nf : α →
 Set α\nsurjf : Surjective f\n⊢ False', state_after='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\n⊢ False'), AnnotatedTactic(tacti
c='rcases surjf S with ⟨j, h⟩', annotated_tactic=('rcases surjf S with ⟨j, h⟩', []), state_before='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {
i | i ∉ f i}\n⊢ False', state_after='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\n⊢ False'), Anno
tatedTactic(tactic="have h₁ : j ∉ f j := by\n  intro h'\n  have : j ∉ f j := by rwa [h] at h'\n  contradiction", annotated_tactic=("have h₁ : j ∉ f j := by\n    intro h'\n    have : j ∉ f j := by rwa [h] at h'\n    contradiction", []), state_be
fore='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\n⊢ False', state_after='case intro\nα✝ : Type u
_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\n⊢ False'), AnnotatedTactic(tactic='have h₂ : j ∈ S', annotate
d_tactic=('have h₂ : j ∈ S', []), state_before='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ :
 j ∉ f j\n⊢ False', state_after='case h₂\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\n⊢ j ∈ S\
n\ncase intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ False'), AnnotatedTac
tic(tactic='sorry', annotated_tactic=('sorry', []), state_before='case h₂\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh
: f j = S\nh₁ : j ∉ f j\n⊢ j ∈ S\n\ncase intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂
 : j ∈ S\n⊢ False', state_after='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ :
j ∈ S\n⊢ False'), AnnotatedTactic(tactic='have h₃ : j ∉ S', annotated_tactic=('have h₃ : j ∉ S', []), state_before='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf
: Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ False', state_after='case h₃\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surj
ective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ j ∉ S\n\ncase intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : S
et α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\nh₃ : j ∉ S\n⊢ False'), AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='case h₃\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\
nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ j ∉ S\n\ncase intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\
nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\nh₃ : j ∉ S\n⊢ False', state_after='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ :
∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\nh₃ : j ∉ S\n⊢ False'), AnnotatedTactic(tactic='contradiction', annotated_tactic=('contradiction', []), state_
before='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\nh₃ : j ∉ S\n⊢ Fals
e', state_after='no goals'), AnnotatedTactic(tactic="intro h'", annotated_tactic=("intro h'", []), state_before='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\
nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\n⊢ j ∉ f j', state_after="α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh :
 f j = S\nh' : j ∈ f j\n⊢ False"), AnnotatedTactic(tactic="have : j ∉ f j := by rwa [h] at h'", annotated_tactic=("have : j ∉ f j := by rwa [h] at h'", []), state_before="α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃
x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh' : j ∈ f j\n⊢ False", state_after="α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α
 → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh' : j ∈ f j\nthis : j ∉ f j\n⊢ False"), AnnotatedTactic(tactic='contradiction', annotated_tactic=('contradiction', []), state_before="α✝ : Type u_1\nβ : Type u_2\n
inst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh' : j ∈ f j\nthis : j ∉ f j\n⊢ False", state_after='no goals'), AnnotatedTactic(tactic="rwa
[h] at h'", annotated_tactic=("rwa [h] at h'", []), state_before="α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S
\nh' : j ∈ f j\n⊢ j ∉ f j", state_after='no goals')], difficulty_rating=None), Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'), file_path=PosixPath('MIL/C04
_Sets_and_Functions/S02_Functions.lean'), full_name='Cantor')), (Theorem(full_name='MyGroup.mul_right_inv', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(468, 1), end=(469, 8), url='https://gi
thub.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem mul_right_inv (a : G) : a * a⁻¹ = 1 :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []),
state_before='G : Type u_1\ninst✝ : Group G\na : G\n⊢ a * a⁻¹ = 1', state_after='no goals')], difficulty_rating=None), Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a57
6389ecf5'), file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), full_name='MyGroup.mul_right_inv')), (Theorem(full_name='C03S06.aux', file_path=PosixPath('MIL/C03_Logic/S06_Sequences_and_Convergence.lean')
, start=(275, 1), end=(283, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem aux {s t : ℕ → ℝ} {a : ℝ} (cs : ConvergesTo s a) (ct : ConvergesTo t 0) :\
n    ConvergesTo (fun n ↦ s n * t n) 0 :=', traced_tactics=[AnnotatedTactic(tactic='intro ε εpos', annotated_tactic=('intro ε εpos', []), state_before='s t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\n⊢ ConvergesTo (fun n => s n
* t n) 0', state_after='s t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\n⊢ ∃ N, ∀ n ≥ N, |(fun n => s n * t n) n - 0| < ε'), AnnotatedTactic(tactic='dsimp', annotated_tactic=('dsimp', []), state_before='s t :
 ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\n⊢ ∃ N, ∀ n ≥ N, |(fun n => s n * t n) n - 0| < ε', state_after='s t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\n⊢ ∃ N, ∀ n ≥ N,
 |s n * t n - 0| < ε'), AnnotatedTactic(tactic='rcases exists_abs_le_of_convergesTo cs with ⟨N₀, B, h₀⟩', annotated_tactic=('rcases <a>exists_abs_le_of_convergesTo</a> cs with ⟨N₀, B, h₀⟩', [Annotation(full_name='C03S06.exists_abs_le_of_converg
esTo', def_path='./MIL/C03_Logic/S06_Sequences_and_Convergence.lean', def_pos=(239, 9), def_end_pos=(239, 37))]), state_before='s t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0|
 < ε', state_after='case intro.intro\ns t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB : ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤ n → |s n| < B\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε'), AnnotatedTactic(tactic='have Bp
os : 0 < B := lt_of_le_of_lt (abs_nonneg _) (h₀ N₀ (le_refl _))', annotated_tactic=('have Bpos : 0 < B := <a>lt_of_le_of_lt</a> (<a>abs_nonneg</a> _) (h₀ N₀ (<a>le_refl</a> _))', [Annotation(full_name='lt_of_le_of_lt', def_path='./.lake/package
s/mathlib/Mathlib/Init/Order/Defs.lean', def_pos=(122, 9), def_end_pos=(122, 23)), Annotation(full_name='abs_nonneg', def_path='./.lake/packages/mathlib/Mathlib/Algebra/Order/Group/Abs.lean', def_pos=(122, 30), def_end_pos=(122, 40)), Annotatio
n(full_name='le_refl', def_path='./.lake/packages/mathlib/Mathlib/Init/Order/Defs.lean', def_pos=(45, 9), def_end_pos=(45, 16))]), state_before='case intro.intro\ns t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε >
 0\nN₀ : ℕ\nB : ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤ n → |s n| < B\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε', state_after='case intro.intro\ns t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB : ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤
 n → |s n| < B\nBpos : 0 < B\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε'), AnnotatedTactic(tactic='have pos₀ : ε / B > 0 := div_pos εpos Bpos', annotated_tactic=('have pos₀ : ε / B > 0 := <a>div_pos</a> εpos Bpos', [Annotation(full_name='div_pos', de
f_path='./.lake/packages/mathlib/Mathlib/Algebra/Order/Field/Defs.lean', def_pos=(79, 7), def_end_pos=(79, 14))]), state_before='case intro.intro\ns t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB :
ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤ n → |s n| < B\nBpos : 0 < B\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε', state_after='case intro.intro\ns t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB : ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤ n
 → |s n| < B\nBpos : 0 < B\npos₀ : ε / B > 0\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε'), AnnotatedTactic(tactic='rcases ct _ pos₀ with ⟨N₁, h₁⟩', annotated_tactic=('rcases ct _ pos₀ with ⟨N₁, h₁⟩', []), state_before='case intro.intro\ns t : ℕ → ℝ\n
a : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB : ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤ n → |s n| < B\nBpos : 0 < B\npos₀ : ε / B > 0\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε', state_after='case intro.intro.intro\ns t : ℕ → ℝ\na
 : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB : ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤ n → |s n| < B\nBpos : 0 < B\npos₀ : ε / B > 0\nN₁ : ℕ\nh₁ : ∀ n ≥ N₁, |t n - 0| < ε / B\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε'), Annotated
Tactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='case intro.intro.intro\ns t : ℕ → ℝ\na : ℝ\ncs : ConvergesTo s a\nct : ConvergesTo t 0\nε : ℝ\nεpos : ε > 0\nN₀ : ℕ\nB : ℝ\nh₀ : ∀ (n : ℕ), N₀ ≤ n → |s n| < B\nBpos : 0 < B\np
os₀ : ε / B > 0\nN₁ : ℕ\nh₁ : ∀ n ≥ N₁, |t n - 0| < ε / B\n⊢ ∃ N, ∀ n ≥ N, |s n * t n - 0| < ε', state_after='no goals')], difficulty_rating=None), Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='529
7e0fb051367c48c0a084411853a576389ecf5'), file_path=PosixPath('MIL/C03_Logic/S06_Sequences_and_Convergence.lean'), full_name='C03S06.aux')), (Theorem(full_name="cauchySeq_of_le_geometric_two'", file_path=PosixPath('MIL/C09_Topology/S02_Metric_Sp
aces.lean'), start=(423, 1), end=(437, 19), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement="theorem cauchySeq_of_le_geometric_two' {u : ℕ → X}\n    (hu : ∀ n : ℕ,
 dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n) : CauchySeq u :=", traced_tactics=[AnnotatedTactic(tactic="rw [Metric.cauchySeq_iff']", annotated_tactic=("rw [<a>Metric.cauchySeq_iff'</a>]", [Annotation(full_name="Metric.cauchySeq_iff'", def_path='./.la
ke/packages/mathlib/Mathlib/Topology/MetricSpace/Cauchy.lean', def_pos=(63, 9), def_end_pos=(63, 30))]), state_before='X : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\n⊢ Cau
chySeq u', state_after='X : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\n⊢ ∀ ε > 0, ∃ N, ∀ n ≥ N, dist (u n) (u N) < ε'), AnnotatedTactic(tactic='intro ε ε_pos', annotated_t
actic=('intro ε ε_pos', []), state_before='X : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\n⊢ ∀ ε > 0, ∃ N, ∀ n ≥ N, dist (u n) (u N) < ε', state_after='X : Type u_1\ninst✝
: MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\n⊢ ∃ N, ∀ n ≥ N, dist (u n) (u N) < ε'), AnnotatedTactic(tactic='obtain ⟨N, hN⟩ : ∃ N : ℕ, 1 / 2 ^ N * 2 < ε := by sorry',
annotated_tactic=('obtain ⟨N, hN⟩ : ∃ N : ℕ, 1 / 2 ^ N * 2 < ε := by sorry', []), state_before='X : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\n⊢ ∃ N,
 ∀ n ≥ N, dist (u n) (u N) < ε', state_after='case intro\nX : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\nN : ℕ\nhN : 1 / 2 ^ N * 2 < ε\n⊢ ∃ N, ∀ n ≥
N, dist (u n) (u N) < ε'), AnnotatedTactic(tactic='use N', annotated_tactic=('use N', []), state_before='case intro\nX : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\n
ε_pos : ε > 0\nN : ℕ\nhN : 1 / 2 ^ N * 2 < ε\n⊢ ∃ N, ∀ n ≥ N, dist (u n) (u N) < ε', state_after='case h\nX : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε >
 0\nN : ℕ\nhN : 1 / 2 ^ N * 2 < ε\n⊢ ∀ n ≥ N, dist (u n) (u N) < ε'), AnnotatedTactic(tactic='intro n hn', annotated_tactic=('intro n hn', []), state_before='case h\nX : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n :
ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\nN : ℕ\nhN : 1 / 2 ^ N * 2 < ε\n⊢ ∀ n ≥ N, dist (u n) (u N) < ε', state_after='case h\nX : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (
u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\nN : ℕ\nhN : 1 / 2 ^ N * 2 < ε\nn : ℕ\nhn : n ≥ N\n⊢ dist (u n) (u N) < ε'), AnnotatedTactic(tactic='obtain ⟨k, rfl : n = N + k⟩ := le_iff_exists_add.mp hn', annotated_tactic=('obtain ⟨k, rfl : n =
 N + k⟩ := le_iff_exists_add.mp hn', []), state_before='case h\nX : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\nN : ℕ\nhN : 1 / 2 ^ N * 2 < ε\nn : ℕ\n
hn : n ≥ N\n⊢ dist (u n) (u N) < ε', state_after='case h.intro\nX : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\nN : ℕ\nhN : 1 / 2 ^ N * 2 < ε\nk : ℕ\n
hn : N + k ≥ N\n⊢ dist (u (N + k)) (u N) < ε'), AnnotatedTactic(tactic='calc\n  dist (u (N + k)) (u N) = dist (u (N + 0)) (u (N + k)) := sorry\n  _ ≤ ∑ i in range k, dist (u (N + i)) (u (N + (i + 1))) := sorry\n  _ ≤ ∑ i in range k, (1 / 2 : ℝ)
 ^ (N + i) := sorry\n  _ = 1 / 2 ^ N * ∑ i in range k, (1 / 2 : ℝ) ^ i := sorry\n  _ ≤ 1 / 2 ^ N * 2 := sorry\n  _ < ε := sorry', annotated_tactic=('calc\n    <a>dist</a> (u (N + k)) (u N) = <a>dist</a> (u (N + 0)) (u (N + k)) := sorry\n    _ ≤
 ∑ i in <a>range</a> k, <a>dist</a> (u (N + i)) (u (N + (i + 1))) := sorry\n    _ ≤ ∑ i in <a>range</a> k, (1 / 2 : ℝ) ^ (N + i) := sorry\n    _ = 1 / 2 ^ N * ∑ i in <a>range</a> k, (1 / 2 : ℝ) ^ i := sorry\n    _ ≤ 1 / 2 ^ N * 2 := sorry\n
_ < ε := sorry', [Annotation(full_name='Dist.dist', def_path='./.lake/packages/mathlib/Mathlib/Topology/MetricSpace/PseudoMetric.lean', def_pos=(86, 3), def_end_pos=(86, 7)), Annotation(full_name='Dist.dist', def_path='./.lake/packages/mathlib/
Mathlib/Topology/MetricSpace/PseudoMetric.lean', def_pos=(86, 3), def_end_pos=(86, 7)), Annotation(full_name='Finset.range', def_path='./.lake/packages/mathlib/Mathlib/Data/Finset/Basic.lean', def_pos=(2929, 5), def_end_pos=(2929, 10)), Annotat
ion(full_name='Dist.dist', def_path='./.lake/packages/mathlib/Mathlib/Topology/MetricSpace/PseudoMetric.lean', def_pos=(86, 3), def_end_pos=(86, 7)), Annotation(full_name='Finset.range', def_path='./.lake/packages/mathlib/Mathlib/Data/Finset/Ba
sic.lean', def_pos=(2929, 5), def_end_pos=(2929, 10)), Annotation(full_name='Finset.range', def_path='./.lake/packages/mathlib/Mathlib/Data/Finset/Basic.lean', def_pos=(2929, 5), def_end_pos=(2929, 10))]), state_before='case h.intro\nX : Type u
_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\nN : ℕ\nhN : 1 / 2 ^ N * 2 < ε\nk : ℕ\nhn : N + k ≥ N\n⊢ dist (u (N + k)) (u N) < ε', state_after='no goals'), An
notatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='X : Type u_1\ninst✝ : MetricSpace X\na b c : X\nr : ℝ\nu : ℕ → X\nhu : ∀ (n : ℕ), dist (u n) (u (n + 1)) ≤ (1 / 2) ^ n\nε : ℝ\nε_pos : ε > 0\n⊢ ∃ N, 1 / 2 ^ N * 2 < ε',
 state_after='no goals')], difficulty_rating=None), Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'), file_path=PosixPath('MIL/C09_Topology/S02_Metric_Spaces
.lean'), full_name="cauchySeq_of_le_geometric_two'")), (Theorem(full_name='C03S05.MyAbs.lt_abs', file_path=PosixPath('MIL/C03_Logic/S05_Disjunction.lean'), start=(193, 1), end=(194, 8), url='https://github.com/avigad/mathematics_in_lean_source'
, commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem lt_abs : x < |y| ↔ x < y ∨ x < -y :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='x y : ℝ\n⊢ x < |y| ↔ x < y ∨ x
< -y', state_after='no goals')], difficulty_rating=None), Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'), file_path=PosixPath('MIL/C03_Logic/S05_Disjunctio
n.lean'), full_name='C03S05.MyAbs.lt_abs')), (Theorem(full_name='MyRing.zero_mul', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(279, 1), end=(280, 8), url='https://github.com/avigad/mathemati
cs_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem zero_mul (a : R) : 0 * a = 0 :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='R : Type u_1\ninst
✝ : Ring R\na : R\n⊢ 0 * a = 0', state_after='no goals')], difficulty_rating=None), Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'), file_path=PosixPath('MI
L/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), full_name='MyRing.zero_mul')), (Theorem(full_name='C03S01.my_lemma3', file_path=PosixPath('MIL/C03_Logic/S01_Implication_and_the_Universal_Quantifier.lean'), start=(99, 1), end
=(102, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem my_lemma3 :\n    ∀ {x y ε : ℝ}, 0 < ε → ε ≤ 1 → |x| < ε → |y| < ε → |x * y| < ε :=', traced_tac
tics=[AnnotatedTactic(tactic='intro x y ε epos ele1 xlt ylt', annotated_tactic=('intro x y ε epos ele1 xlt ylt', []), state_before='⊢ ∀ {x y ε : ℝ}, 0 < ε → ε ≤ 1 → |x| < ε → |y| < ε → |x * y| < ε', state_after='x y ε : ℝ\nepos : 0 < ε\nele1 :
ε ≤ 1\nxlt : |x| < ε\nylt : |y| < ε\n⊢ |x * y| < ε'), AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='x y ε : ℝ\nepos : 0 < ε\nele1 : ε ≤ 1\nxlt : |x| < ε\nylt : |y| < ε\n⊢ |x * y| < ε', state_after='no goals')], d
ifficulty_rating=None), Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'), file_path=PosixPath('MIL/C03_Logic/S01_Implication_and_the_Universal_Quantifier.lea
n'), full_name='C03S01.my_lemma3')), (Theorem(full_name='MyRing.two_mul', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(407, 1), end=(408, 8), url='https://github.com/avigad/mathematics_in_lea
n_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem two_mul (a : R) : 2 * a = a + a :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='R : Type u_1\ninst✝ : Ri
ng R\na : R\n⊢ 2 * a = a + a', state_after='no goals')], difficulty_rating=None), Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'), file_path=PosixPath('MIL/
C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), full_name='MyRing.two_mul')), (Theorem(full_name='C03S05.MyAbs.abs_add', file_path=PosixPath('MIL/C03_Logic/S05_Disjunction.lean'), start=(163, 1), end=(164, 8), url='https://git
hub.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', theorem_statement='theorem abs_add (x y : ℝ) : |x + y| ≤ |x| + |y| :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []
), state_before='x✝ y✝ x y : ℝ\n⊢ |x + y| ≤ |x| + |y|', state_after='no goals')], difficulty_rating=None), Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'),
file_path=PosixPath('MIL/C03_Logic/S05_Disjunction.lean'), full_name='C03S05.MyAbs.abs_add'))]
ipdb> theorem_batch[1
]
(Theorem(full_name='Cantor', file_path=PosixPath('MIL/C04_Sets_and_Functions/S02_Functions.lean'), start=(673, 1), end=(685, 16), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5', the
orem_statement='theorem Cantor : ∀ f : α → Set α, ¬Surjective f :=', traced_tactics=[AnnotatedTactic(tactic='intro f surjf', annotated_tactic=('intro f surjf', []), state_before='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\
nh : ∃ x, P x\nα : Type u_3\n⊢ ∀ (f : α → Set α), ¬Surjective f', state_after='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\n⊢ False'), AnnotatedTactic(tactic=
'let S := { i | i ∉ f i }', annotated_tactic=('let S := { i | i ∉ f i }', []), state_before='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\n⊢ False', state_afte
r='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\n⊢ False'), AnnotatedTactic(tactic='rcases surjf S with ⟨j, h⟩', annotated_tactic=(
'rcases surjf S with ⟨j, h⟩', []), state_before='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\n⊢ False', state_after='case intro\nα
✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\n⊢ False'), AnnotatedTactic(tactic="have h₁ : j ∉ f j := by\n  int
ro h'\n  have : j ∉ f j := by rwa [h] at h'\n  contradiction", annotated_tactic=("have h₁ : j ∉ f j := by\n    intro h'\n    have : j ∉ f j := by rwa [h] at h'\n    contradiction", []), state_before='case intro\nα✝ : Type u_1\nβ : Type u_2\nins
t✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\n⊢ False', state_after='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → P
rop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\n⊢ False'), AnnotatedTactic(tactic='have h₂ : j ∈ S', annotated_tactic=('have h₂ : j ∈ S', []), state_before='ca
se intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\n⊢ False', state_after='case h₂\nα✝ : Typ
e u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\n⊢ j ∈ S\n\ncase intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝
: Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ False'), AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', [])
, state_before='case h₂\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\n⊢ j ∈ S\n\ncase intro\nα✝
 : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ False', state_after='case intro\nα✝ :
Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ False'), AnnotatedTactic(tactic='have h₃
: j ∉ S', annotated_tactic=('have h₃ : j ∉ S', []), state_before='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\
nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ False', state_after='case h₃\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f
 j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ j ∉ S\n\ncase intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j
∉ f j\nh₂ : j ∈ S\nh₃ : j ∉ S\n⊢ False'), AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='case h₃\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf
 : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\n⊢ j ∉ S\n\ncase intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f
\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\nh₃ : j ∉ S\n⊢ False', state_after='case intro\nα✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Sur
jective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\nh₃ : j ∉ S\n⊢ False'), AnnotatedTactic(tactic='contradiction', annotated_tactic=('contradiction', []), state_before='case intro\nα✝ : Type u_1\nβ : Type u_2\ni
nst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh₁ : j ∉ f j\nh₂ : j ∈ S\nh₃ : j ∉ S\n⊢ False', state_after='no goals'), AnnotatedTactic(tacti
c="intro h'", annotated_tactic=("intro h'", []), state_before='α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\n⊢
 j ∉ f j', state_after="α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh' : j ∈ f j\n⊢ False"), AnnotatedTactic
(tactic="have : j ∉ f j := by rwa [h] at h'", annotated_tactic=("have : j ∉ f j := by rwa [h] at h'", []), state_before="α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surje
ctive f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh' : j ∈ f j\n⊢ False", state_after="α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i |
i ∉ f i}\nj : α\nh : f j = S\nh' : j ∈ f j\nthis : j ∉ f j\n⊢ False"), AnnotatedTactic(tactic='contradiction', annotated_tactic=('contradiction', []), state_before="α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x
\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh' : j ∈ f j\nthis : j ∉ f j\n⊢ False", state_after='no goals'), AnnotatedTactic(tactic="rwa [h] at h'", annotated_tactic=("rwa [h] at h'", [])
, state_before="α✝ : Type u_1\nβ : Type u_2\ninst✝ : Inhabited α✝\nP : α✝ → Prop\nh✝ : ∃ x, P x\nα : Type u_3\nf : α → Set α\nsurjf : Surjective f\nS : Set α := {i | i ∉ f i}\nj : α\nh : f j = S\nh' : j ∈ f j\n⊢ j ∉ f j", state_after='no goals'
)], difficulty_rating=None), Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'), file_path=PosixPath('MIL/C04_Sets_and_Functions/S02_Functions.lean'), full_nam
e='Cantor'))
ipdb> positions_batch[1]
(673, 1)
ipdb> s
--Call--
> /data/yingzi_ma/lean_project/ReProver/main.py(740)process_theorem_batch()
    739
--> 740 def process_theorem_batch(theorem_batch, positions_batch, repo, db, prover, dynamic_database_json_path):
    741     lean_dojo_theorems = [t[1] for t in theorem_batch]

ipdb> n
> /data/yingzi_ma/lean_project/ReProver/main.py(741)process_theorem_batch()
    740 def process_theorem_batch(theorem_batch, positions_batch, repo, db, prover, dynamic_database_json_path):
--> 741     lean_dojo_theorems = [t[1] for t in theorem_batch]
    742     results = prover.search_unordered(LeanGitRepo(repo.url, repo.commit), lean_dojo_theorems, positions_batch)


[43]+  Stopped                 bash run_code.sh
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ bash run_code.sh
Script executed from: /data/yingzi_ma/lean_project/ReProver
[2024-09-08 17:14:35,440] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
2024-09-08 17:14:39.264 | INFO     | __main__:main:1183 - Running retrieval baseline
2024-09-08 17:14:39.264 | INFO     | __main__:main:1186 - Configuring LeanDojo...
2024-09-08 17:14:39.267 | INFO     | generate_benchmark_lean4:configure_leandojo:347 - Current working directory: /data/yingzi_ma/lean_project/ReProver
2024-09-08 17:14:39.267 | INFO     | __main__:main:1188 - LeanDojo configured
2024-09-08 17:14:39.267 | INFO     | __main__:main:1193 - Starting the main process
2024-09-08 17:14:39.267 | INFO     | __main__:main:1201 - Loading database from /data/yingzi_ma/lean_project/dynamic_database_retrieval_single_repo_no_ewc_pfr.json
2024-09-08 17:14:53.861 | INFO     | dynamic_database:add_repository:600 - Attempting to add repository: https://github.com/teorth/pfr (commit: fa398a5b853c7e94e3294c45e50c6aee013a2687)
2024-09-08 17:14:53.861 | INFO     | dynamic_database:add_repository:603 - Added new repository: https://github.com/teorth/pfr (commit: fa398a5b853c7e94e3294c45e50c6aee013a2687)
2024-09-08 17:14:59.548 | INFO     | dynamic_database:add_repository:600 - Attempting to add repository: https://github.com/avigad/mathematics_in_lean_source (commit: 5297e0fb051367c48c0a084411853a576389ecf5)
2024-09-08 17:14:59.548 | INFO     | dynamic_database:add_repository:603 - Added new repository: https://github.com/avigad/mathematics_in_lean_source (commit: 5297e0fb051367c48c0a084411853a576389ecf5)
2024-09-08 17:14:59.789 | INFO     | __main__:main:1203 - Loaded database from /data/yingzi_ma/lean_project/dynamic_database_retrieval_single_repo_no_ewc_pfr.json
2024-09-08 17:14:59.789 | INFO     | __main__:main:1210 - Found 15 repositories
2024-09-08 17:14:59.789 | INFO     | __main__:main:1301 - Starting without curriculum learning
2024-09-08 17:15:00.122 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.11.0-rc2
2024-09-08 17:15:15.306 | INFO     | __main__:main:1330 - Finding compatible repositories...
2024-09-08 17:15:15.608 | INFO     | __main__:get_compatible_commit:322 - Latest commit: cfe61bc71b5ea501f89df36c945949a1febf5e75
2024-09-08 17:15:15.609 | INFO     | __main__:get_compatible_commit:325 - Creating LeanGitRepo for https://github.com/avigad/mathematics_in_lean_source
2024-09-08 17:15:15.609 | INFO     | __main__:get_compatible_commit:327 - Getting config for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:15:15.609 | INFO     | __main__:get_compatible_commit:334 - Searching for compatible commit for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:15:15.612 | INFO     | __main__:get_compatible_commit:340 - Already in a Git repository
2024-09-08 17:15:15.613 | INFO     | __main__:get_compatible_commit:350 - Fetching commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:15:17.554 | INFO     | __main__:get_compatible_commit:354 - Fetched commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:15:17.558 | INFO     | __main__:get_compatible_commit:360 - Getting list of commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:15:17.568 | INFO     | __main__:get_compatible_commit:365 - Found 526 commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:15:17.966 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.10.0
2024-09-08 17:15:34.359 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.10.0-rc2
2024-09-08 17:15:53.161 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.8.0-rc2
2024-09-08 17:16:08.094 | INFO     | __main__:get_compatible_commit:372 - Found compatible commit 5297e0fb051367c48c0a084411853a576389ecf5 for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:16:08.382 | INFO     | __main__:get_compatible_commit:322 - Latest commit: cfe61bc71b5ea501f89df36c945949a1febf5e75
2024-09-08 17:16:08.382 | INFO     | __main__:get_compatible_commit:325 - Creating LeanGitRepo for https://github.com/avigad/mathematics_in_lean_source
2024-09-08 17:16:08.383 | INFO     | __main__:get_compatible_commit:327 - Getting config for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:16:08.383 | INFO     | __main__:get_compatible_commit:334 - Searching for compatible commit for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:16:08.386 | INFO     | __main__:get_compatible_commit:340 - Already in a Git repository
2024-09-08 17:16:08.387 | INFO     | __main__:get_compatible_commit:350 - Fetching commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:16:10.356 | INFO     | __main__:get_compatible_commit:354 - Fetched commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:16:10.361 | INFO     | __main__:get_compatible_commit:360 - Getting list of commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:16:10.371 | INFO     | __main__:get_compatible_commit:365 - Found 526 commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:16:10.371 | INFO     | __main__:get_compatible_commit:372 - Found compatible commit 5297e0fb051367c48c0a084411853a576389ecf5 for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:16:10.373 | INFO     | __main__:main:1333 - Finished finding compatible repositories
2024-09-08 17:16:10.373 | INFO     | __main__:main:1351 - length of lean_git_repos: 2
2024-09-08 17:16:10.373 | INFO     | __main__:main:1352 - i: 0
2024-09-08 17:16:10.373 | INFO     | __main__:main:1357 - Main process
2024-09-08 17:16:10.373 | INFO     | __main__:main:1358 - Using lambda = 0.0
2024-09-08 17:16:10.374 | INFO     | __main__:main:1359 - Processing https://github.com/avigad/mathematics_in_lean_source
2024-09-08 17:16:10.374 | INFO     | __main__:main:1382 - Adding repo to repos_for_merged_dataset
2024-09-08 17:16:10.374 | INFO     | __main__:main:1393 - All GPUs
2024-09-08 17:16:10.374 | INFO     | __main__:main:1622 - Starting the prover
2024-09-08 17:16:10.374 | INFO     | prover.proof_search:__init__:407 - Inside __init__
2024-09-08 17:16:10.374 | INFO     | prover.proof_search:__init__:412 - ckpt_path is not None
2024-09-08 17:16:10.374 | INFO     | prover.proof_search:__init__:427 - Using RAG
/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/lightning_fabric/utilities/cloud_io.py:57: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly.
It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `
weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.se
rialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
Lightning automatically upgraded your loaded checkpoint from v0.0.0 to v2.2.4. To apply the upgrade to your files permanently, run `python -m pytorch_lightning.utilities.upgrade_checkpoint ../kaiyuy_leandojo-lean4-retriever-tacgen-byt5-small/mo
del_lightning.ckpt`
2024-09-08 17:16:11.044 | INFO     | generator.model:__init__:124 - Retriever checkpoint path: /data/yingzi_ma/lean_project/checkpoints_PT_full_merge_each_time_ewc/mathlib4_29dcec074de168ac2bf835a77ef68bbe069194c5.ckpt
2024-09-08 17:16:11.044 | INFO     | generator.model:__init__:138 - Loading the retriever from /data/yingzi_ma/lean_project/checkpoints_PT_full_merge_each_time_ewc/mathlib4_29dcec074de168ac2bf835a77ef68bbe069194c5.ckpt
Lightning automatically upgraded your loaded checkpoint from v0.0.0 to v2.2.4. To apply the upgrade to your files permanently, run `python -m pytorch_lightning.utilities.upgrade_checkpoint ../checkpoints_PT_full_merge_each_time_ewc/mathlib4_29d
cec074de168ac2bf835a77ef68bbe069194c5.ckpt`
2024-09-08 17:16:12.823 | INFO     | generator.model:__init__:151 - RetrievalAugmentedGenerator initialized
/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/pytorch_lightning/core/saving.py:184: Found keys that are in the model state dict but not in the checkpoint: ['retriever.encoder.shared.weight', 'retriever.encoder.encoder.em
bed_tokens.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.v.weight', 'retriever.encoder.e
ncoder.block.0.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight', 'retriever.encoder.encoder.block.0.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.0.layer.1.
DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.0.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.0.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.0.layer.1.layer_norm.weight', 'retriever
.encoder.encoder.block.1.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.1.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.1.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.1.layer.0.SelfAtt
ention.o.weight', 'retriever.encoder.encoder.block.1.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.1.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.1.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.
encoder.block.1.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.1.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.k.wei
ght', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.2.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.2.laye
r.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.2.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.2.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.2.layer.1.layer_norm.weight', 'retri
ever.encoder.encoder.block.3.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.3.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.3.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.3.layer.0.Sel
fAttention.o.weight', 'retriever.encoder.encoder.block.3.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.3.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.3.layer.1.DenseReluDense.wi_1.weight', 'retriever.enco
der.encoder.block.3.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.3.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.k
.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.4.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.4.
layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.4.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.4.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.4.layer.1.layer_norm.weight', 'r
etriever.encoder.encoder.block.5.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.5.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.5.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.5.layer.0
.SelfAttention.o.weight', 'retriever.encoder.encoder.block.5.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.5.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.5.layer.1.DenseReluDense.wi_1.weight', 'retriever.
encoder.encoder.block.5.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.5.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttenti
on.k.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.6.layer.0.layer_norm.weight', 'retriever.encoder.encoder.bloc
k.6.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.6.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.6.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.6.layer.1.layer_norm.weight'
, 'retriever.encoder.encoder.block.7.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.7.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.7.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.7.lay
er.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.7.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.7.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.7.layer.1.DenseReluDense.wi_1.weight', 'retrie
ver.encoder.encoder.block.7.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.7.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAtt
ention.k.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.8.layer.0.layer_norm.weight', 'retriever.encoder.encoder.
block.8.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.8.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.8.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.8.layer.1.layer_norm.wei
ght', 'retriever.encoder.encoder.block.9.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.9.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.9.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.9
.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.9.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.9.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.9.layer.1.DenseReluDense.wi_1.weight', 're
triever.encoder.encoder.block.9.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.9.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.10.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.10.layer.0.S
elfAttention.k.weight', 'retriever.encoder.encoder.block.10.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.10.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.10.layer.0.layer_norm.weight', 'retriever.encoder
.encoder.block.10.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.10.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.10.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.10.layer.1.l
ayer_norm.weight', 'retriever.encoder.encoder.block.11.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.11.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.11.layer.0.SelfAttention.v.weight', 'retriever.encoder
.encoder.block.11.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.11.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.11.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.11.layer.1.DenseReluDen
se.wi_1.weight', 'retriever.encoder.encoder.block.11.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.11.layer.1.layer_norm.weight', 'retriever.encoder.encoder.final_layer_norm.weight']
/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/pytorch_lightning/core/saving.py:188: Found keys that are not in the model state dict but in the checkpoint: ['pytorch-lightning_version', 'global_step', 'epoch', 'state_dict
', 'callbacks', 'loops', 'legacy_pytorch-lightning_version', 'hyper_parameters']
2024-09-08 17:16:13.353 | INFO     | prover.proof_search:__init__:451 - Loaded model from /data/yingzi_ma/lean_project/kaiyuy_leandojo-lean4-retriever-tacgen-byt5-small/model_lightning.ckpt
2024-09-08 17:16:13.354 | INFO     | prover.proof_search:__init__:452 - Using retriever: PremiseRetriever(
  (encoder): T5EncoderModel(
    (shared): Embedding(384, 1472)
    (encoder): T5Stack(
      (embed_tokens): Embedding(384, 1472)
      (block): ModuleList(
        (0): T5Block(
          (layer): ModuleList(
            (0): T5LayerSelfAttention(
              (SelfAttention): T5Attention(
                (q): Linear(in_features=1472, out_features=384, bias=False)
                (k): Linear(in_features=1472, out_features=384, bias=False)
                (v): Linear(in_features=1472, out_features=384, bias=False)
                (o): Linear(in_features=384, out_features=1472, bias=False)
                (relative_attention_bias): Embedding(32, 6)
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (1): T5LayerFF(
              (DenseReluDense): T5DenseGatedActDense(
                (wi_0): Linear(in_features=1472, out_features=3584, bias=False)
                (wi_1): Linear(in_features=1472, out_features=3584, bias=False)
                (wo): Linear(in_features=3584, out_features=1472, bias=False)
                (dropout): Dropout(p=0.1, inplace=False)
                (act): NewGELUActivation()
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
        (1-11): 11 x T5Block(
          (layer): ModuleList(
            (0): T5LayerSelfAttention(
              (SelfAttention): T5Attention(
                (q): Linear(in_features=1472, out_features=384, bias=False)
                (k): Linear(in_features=1472, out_features=384, bias=False)
                (v): Linear(in_features=1472, out_features=384, bias=False)
                (o): Linear(in_features=384, out_features=1472, bias=False)
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (1): T5LayerFF(
              (DenseReluDense): T5DenseGatedActDense(
                (wi_0): Linear(in_features=1472, out_features=3584, bias=False)
                (wi_1): Linear(in_features=1472, out_features=3584, bias=False)
                (wo): Linear(in_features=3584, out_features=1472, bias=False)
                (dropout): Dropout(p=0.1, inplace=False)
                (act): NewGELUActivation()
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
      (final_layer_norm): T5LayerNorm()
      (dropout): Dropout(p=0.1, inplace=False)
    )
  )
)
2024-09-08 17:16:13.354 | INFO     | prover.proof_search:__init__:455 - Loading indexed corpus from /data/yingzi_ma/lean_project/datasets_retrieval_single_repo_no_ewc_pfr/merged_with_new_mathematics_in_lean_source_5297e0fb051367c48c0a084411853a
576389ecf5/corpus.jsonl
2024-09-08 17:16:13.354 | INFO     | common:__init__:208 - Building the corpus from /data/yingzi_ma/lean_project/datasets_retrieval_single_repo_no_ewc_pfr/merged_with_new_mathematics_in_lean_source_5297e0fb051367c48c0a084411853a576389ecf5/corpu
s.jsonl
2024-09-08 17:16:22.444 | INFO     | retrieval.model:load_corpus:159 - Embeddings staled load corpus jsonl: True
2024-09-08 17:16:22.444 | INFO     | prover.proof_search:__init__:457 - Loaded indexed corpus from /data/yingzi_ma/lean_project/datasets_retrieval_single_repo_no_ewc_pfr/merged_with_new_mathematics_in_lean_source_5297e0fb051367c48c0a084411853a5
76389ecf5/corpus.jsonl
2024-09-08 17:16:22.444 | INFO     | prover.proof_search:__init__:471 - Launching 4 workers with 4 GPUs.
2024-09-08 17:16:24,999 INFO worker.py:1774 -- Started a local Ray instance. View the dashboard at 127.0.0.1:8266
^Z
[44]+  Stopped                 bash run_code.sh
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ ray stop
Could not terminate `/usr/bin/python3 /usr/local/bin/user_traffic_monitor.py` due to (pid=283579, name='python3')
Stopped only 0 out of 401 Ray processes within the grace period 16 seconds. Set `-v` to see more details. Remaining processes [psutil.Process(pid=1051198, name='raylet', status='zombie', started='17:11:12'), psutil.Process(pid=1084123, name='ra
ylet', status='zombie', started='17:16:24'), psutil.Process(pid=1084374, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084428, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1084
342, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051404, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1052130, name='ray::IDLE', status='terminated', started='17:11:18'), psu
til.Process(pid=1051461, name='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1051548, name='ray::IDLE', status='terminated', started='17:11:16'), psutil.Process(pid=1084433, name='ray::IDLE', status='terminated', star
ted='17:16:26'), psutil.Process(pid=1051445, name='ray::IDLE', status='terminated', started='17:11:14'), psutil.Process(pid=1051387, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1052972, name='ray::IDLE', statu
s='terminated', started='17:11:19'), psutil.Process(pid=1084420, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1051397, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084349, nam
e='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051468, name='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1052116, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Proc
ess(pid=1051471, name='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1084423, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1052965, name='ray::IDLE', status='terminated', started='17:
11:19'), psutil.Process(pid=1053023, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1051272, name='python', status='terminated', started='17:11:13'), psutil.Process(pid=1052205, name='ray::IDLE', status='terminat
ed', started='17:11:18'), psutil.Process(pid=1051383, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051415, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084541, name='ray::IDL
E', status='terminated', started='17:16:30'), psutil.Process(pid=1052100, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084395, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=108
4406, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1051436, name='ray::IDLE', status='terminated', started='17:11:14'), psutil.Process(pid=1051556, name='ray::IDLE', status='terminated', started='17:11:17'), ps
util.Process(pid=1084409, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1052126, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084368, name='ray::IDLE', status='terminated', sta
rted='17:16:24'), psutil.Process(pid=1051376, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051425, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051457, name='ray::IDLE', stat
us='terminated', started='17:11:15'), psutil.Process(pid=1052119, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084306, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051390, na
me='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084384, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084320, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Pro
cess(pid=1084549, name='ray::IDLE', status='terminated', started='17:16:30'), psutil.Process(pid=1051427, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1052198, name='ray::IDLE', status='terminated', started='17
:11:18'), psutil.Process(pid=1052122, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1052133, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084417, name='ray::IDLE', status='term
inated', started='17:16:25'), psutil.Process(pid=1052189, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084377, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051407, name='ray:
:IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1053020, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1084356, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid
=1052515, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1084313, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084281, name='ray::IDLE', status='terminated', started='17:16:24')
, psutil.Process(pid=1052975, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1051421, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084338, name='ray::IDLE', status='terminated',
 started='17:16:24'), psutil.Process(pid=1052136, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084544, name='ray::IDLE', status='terminated', started='17:16:30'), psutil.Process(pid=1051400, name='ray::IDLE',
status='terminated', started='17:11:13'), psutil.Process(pid=1051442, name='ray::IDLE', status='terminated', started='17:11:14'), psutil.Process(pid=1084284, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084556
, name='ray::IDLE', status='terminated', started='17:16:31'), psutil.Process(pid=1053001, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1084451, name='ray::IDLE', status='terminated', started='17:16:27'), psutil
.Process(pid=1084363, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1052129, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084288, name='ray::IDLE', status='terminated', started
='17:16:24'), psutil.Process(pid=1052720, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1084345, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084390, name='ray::IDLE', status='
terminated', started='17:16:24'), psutil.Process(pid=1052264, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084405, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1051109, name='
python', status='zombie', started='17:11:11'), psutil.Process(pid=1051450, name='ray::IDLE', status='terminated', started='17:11:14'), psutil.Process(pid=1084291, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=10
51419, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051365, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1053019, name='ray::IDLE', status='terminated', started='17:11:19'), p
sutil.Process(pid=1084371, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051379, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084545, name='ray::IDLE', status='terminated', st
arted='17:16:30'), psutil.Process(pid=1051460, name='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1051452, name='ray::IDLE', status='terminated', started='17:11:14'), psutil.Process(pid=1084401, name='ray::IDLE', sta
tus='terminated', started='17:16:25'), psutil.Process(pid=1053022, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1052968, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1052496, n
ame='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1084341, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051414, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Pr
ocess(pid=1051393, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051372, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051354, name='ray::IDLE', status='terminated', started='1
7:11:13'), psutil.Process(pid=1052061, name='ray::IDLE', status='terminated', started='17:11:17'), psutil.Process(pid=1084302, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084316, name='ray::IDLE', status='ter
minated', started='17:16:24'), psutil.Process(pid=1051456, name='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1082284, name='ray::ProverActor', status='terminated', started='17:11:44'), psutil.Process(pid=1052106, na
me='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084432, name='ray::IDLE', status='terminated', started='17:16:26'), psutil.Process(pid=1052261, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Pro
cess(pid=1053016, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1084309, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1052349, name='ray::IDLE', status='terminated', started='17
:11:18'), psutil.Process(pid=1051416, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1053004, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1051396, name='ray::IDLE', status='term
inated', started='17:11:13'), psutil.Process(pid=1052132, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1051474, name='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1051463, name='ray:
:IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1053015, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1052235, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid
=1084367, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051386, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084380, name='ray::IDLE', status='terminated', started='17:16:24')
, psutil.Process(pid=1051410, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084359, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084533, name='ray::IDLE', status='terminated',
 started='17:16:30'), psutil.Process(pid=1051433, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1052115, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1051413, name='ray::IDLE',
status='terminated', started='17:11:13'), psutil.Process(pid=1052204, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1052118, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084305
, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051444, name='ray::IDLE', status='terminated', started='17:11:14'), psutil.Process(pid=1084200, name='python', status='zombie', started='17:16:24'), psutil.Proces
s(pid=1084287, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051361, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1052719, name='ray::IDLE', status='terminated', started='17:11
:19'), psutil.Process(pid=1084594, name='ray::IDLE', status='terminated', started='17:16:32'), psutil.Process(pid=1052405, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1052099, name='ray::IDLE', status='termina
ted', started='17:11:18'), psutil.Process(pid=1051375, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1052296, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084492, name='ray::ID
LE', status='terminated', started='17:16:29'), psutil.Process(pid=1084355, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084323, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=10
51418, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051558, name='ray::IDLE', status='terminated', started='17:11:17'), psutil.Process(pid=1084411, name='ray::IDLE', status='terminated', started='17:16:25'), p
sutil.Process(pid=1053018, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1052112, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1082460, name='ray::ProverActor', status='terminat
ed', started='17:11:54'), psutil.Process(pid=1084337, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051368, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084383, name='ray::IDL
E', status='terminated', started='17:16:24'), psutil.Process(pid=1084495, name='ray::IDLE', status='terminated', started='17:16:29'), psutil.Process(pid=1052194, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=108
4424, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1051357, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051455, name='ray::IDLE', status='terminated', started='17:11:14'), ps
util.Process(pid=1084450, name='ray::IDLE', status='terminated', started='17:16:27'), psutil.Process(pid=1051424, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051392, name='ray::IDLE', status='terminated', sta
rted='17:11:13'), psutil.Process(pid=1051403, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051371, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051274, name='python', status=
'terminated', started='17:11:13'), psutil.Process(pid=1051483, name='ray::IDLE', status='terminated', started='17:11:16'), psutil.Process(pid=1084312, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084414, name=
'ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1051429, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084427, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Proces
s(pid=1052135, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1052960, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1051467, name='ray::IDLE', status='terminated', started='17:11
:15'), psutil.Process(pid=1084581, name='ray::IDLE', status='terminated', started='17:16:31'), psutil.Process(pid=1052634, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1051364, name='ray::IDLE', status='termina
ted', started='17:11:13'), psutil.Process(pid=1052064, name='ray::IDLE', status='terminated', started='17:11:17'), psutil.Process(pid=1052188, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084315, name='ray::ID
LE', status='terminated', started='17:16:24'), psutil.Process(pid=1051389, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1052125, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=10
51459, name='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1084404, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1053011, name='ray::IDLE', status='terminated', started='17:11:19'), p
sutil.Process(pid=1084416, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1051435, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1052970, name='ray::IDLE', status='terminated', st
arted='17:11:19'), psutil.Process(pid=1053003, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1051382, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084376, name='ray::IDLE', sta
tus='terminated', started='17:16:24'), psutil.Process(pid=1051406, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084290, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051473, n
ame='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1084285, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1052067, name='ray::IDLE', status='terminated', started='17:11:17'), psutil.Pr
ocess(pid=1084279, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084301, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051385, name='ray::IDLE', status='terminated', started='1
7:11:13'), psutil.Process(pid=1084344, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051539, name='ray::IDLE', status='terminated', started='17:11:16'), psutil.Process(pid=1084452, name='ray::IDLE', status='ter
minated', started='17:16:27'), psutil.Process(pid=1084379, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051409, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084326, name='ray
::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084283, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1052540, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pi
d=1052967, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1051449, name='ray::IDLE', status='terminated', started='17:11:14'), psutil.Process(pid=1052128, name='ray::IDLE', status='terminated', started='17:11:18'
), psutil.Process(pid=1051549, name='ray::IDLE', status='terminated', started='17:11:17'), psutil.Process(pid=1051453, name='ray::IDLE', status='terminated', started='17:11:14'), psutil.Process(pid=1051378, name='ray::IDLE', status='terminated'
, started='17:11:13'), psutil.Process(pid=1052197, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1051544, name='ray::IDLE', status='terminated', started='17:11:16'), psutil.Process(pid=1053026, name='ray::IDLE',
 status='terminated', started='17:11:19'), psutil.Process(pid=1051360, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1052443, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=105216
3, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1052131, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084333, name='ray::IDLE', status='terminated', started='17:16:24'), psuti
l.Process(pid=1084407, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1084397, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1084430, name='ray::IDLE', status='terminated', starte
d='17:16:25'), psutil.Process(pid=1084322, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051559, name='ray::IDLE', status='terminated', started='17:11:17'), psutil.Process(pid=1052514, name='ray::IDLE', status=
'terminated', started='17:11:19'), psutil.Process(pid=1052930, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1052963, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1051550, name=
'ray::IDLE', status='terminated', started='17:11:17'), psutil.Process(pid=1051399, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051367, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Proces
s(pid=1084196, name='python', status='terminated', started='17:16:24'), psutil.Process(pid=1084490, name='ray::IDLE', status='terminated', started='17:16:29'), psutil.Process(pid=1052191, name='ray::IDLE', status='terminated', started='17:11:18
'), psutil.Process(pid=1051412, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1052203, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1052348, name='ray::IDLE', status='terminated
', started='17:11:18'), psutil.Process(pid=1052076, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1051462, name='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1051454, name='ray::IDLE'
, status='terminated', started='17:11:14'), psutil.Process(pid=1051423, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084471, name='ray::IDLE', status='terminated', started='17:16:27'), psutil.Process(pid=10514
02, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084373, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1053024, name='ray::IDLE', status='terminated', started='17:11:19'), psut
il.Process(pid=1053014, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1052404, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084311, name='ray::IDLE', status='terminated', start
ed='17:16:24'), psutil.Process(pid=1084498, name='ray::IDLE', status='terminated', started='17:16:29'), psutil.Process(pid=1084366, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1052121, name='ray::IDLE', status
='terminated', started='17:11:18'), psutil.Process(pid=1052263, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1051465, name='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1051476, name
='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1084580, name='ray::IDLE', status='terminated', started='17:16:31'), psutil.Process(pid=1052114, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Proce
ss(pid=1051437, name='ray::IDLE', status='terminated', started='17:11:14'), psutil.Process(pid=1051395, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084304, name='ray::IDLE', status='terminated', started='17:1
6:24'), psutil.Process(pid=1051420, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1052124, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1051388, name='ray::IDLE', status='termin
ated', started='17:11:13'), psutil.Process(pid=1084448, name='ray::IDLE', status='terminated', started='17:16:26'), psutil.Process(pid=1084382, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084419, name='ray::I
DLE', status='terminated', started='17:16:25'), psutil.Process(pid=1084361, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1052105, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1
084286, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084592, name='ray::IDLE', status='terminated', started='17:16:32'), psutil.Process(pid=1052572, name='ray::IDLE', status='terminated', started='17:11:19'),
psutil.Process(pid=1052575, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1051381, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051446, name='ray::IDLE', status='terminated', s
tarted='17:11:14'), psutil.Process(pid=1051480, name='ray::IDLE', status='terminated', started='17:11:16'), psutil.Process(pid=1052069, name='ray::IDLE', status='terminated', started='17:11:17'), psutil.Process(pid=1084297, name='ray::IDLE', st
atus='terminated', started='17:16:24'), psutil.Process(pid=1051417, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084444, name='ray::IDLE', status='terminated', started='17:16:26'), psutil.Process(pid=1052652,
name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1051448, name='ray::IDLE', status='terminated', started='17:11:14'), psutil.Process(pid=1051374, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.P
rocess(pid=1051439, name='ray::IDLE', status='terminated', started='17:11:14'), psutil.Process(pid=1084584, name='ray::IDLE', status='terminated', started='17:16:31'), psutil.Process(pid=1084282, name='ray::IDLE', status='terminated', started='
17:16:24'), psutil.Process(pid=1051356, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084036, name='python', status='zombie', started='17:16:23'), psutil.Process(pid=1052138, name='ray::IDLE', status='terminate
d', started='17:11:18'), psutil.Process(pid=1051370, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084410, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1084552, name='ray::IDLE
', status='terminated', started='17:16:31'), psutil.Process(pid=1084403, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1084350, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084
318, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1052442, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1052117, name='ray::IDLE', status='terminated', started='17:11:18'), psu
til.Process(pid=1084375, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1052162, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1051405, name='ray::IDLE', status='terminated', star
ted='17:11:13'), psutil.Process(pid=1084332, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051363, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1052111, name='ray::IDLE', statu
s='terminated', started='17:11:18'), psutil.Process(pid=1084396, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1084388, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051458, nam
e='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1052973, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1053006, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Proc
ess(pid=1052491, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1084325, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084531, name='ray::IDLE', status='terminated', started='17:
16:30'), psutil.Process(pid=1052134, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1052582, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1051366, name='ray::IDLE', status='termi
nated', started='17:11:13'), psutil.Process(pid=1051432, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051431, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051466, name='ray::
IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1051434, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051391, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=
1084307, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1052127, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1052193, name='ray::IDLE', status='terminated', started='17:11:18'),
 psutil.Process(pid=1084037, name='python', status='zombie', started='17:16:23'), psutil.Process(pid=1052063, name='ray::IDLE', status='terminated', started='17:11:17'), psutil.Process(pid=1084369, name='ray::IDLE', status='terminated', started
='17:16:24'), psutil.Process(pid=1052066, name='ray::IDLE', status='terminated', started='17:11:17'), psutil.Process(pid=1053025, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1051359, name='ray::IDLE', status='
terminated', started='17:11:13'), psutil.Process(pid=1052959, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1052259, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1052718, name='
ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1084278, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084300, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process
(pid=1053007, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1052120, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084378, name='ray::IDLE', status='terminated', started='17:16:
24'), psutil.Process(pid=1051408, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084357, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051464, name='ray::IDLE', status='terminat
ed', started='17:11:15'), psutil.Process(pid=1051475, name='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1082646, name='ray::ProverActor', status='terminated', started='17:12:06'), psutil.Process(pid=1051482, name='r
ay::IDLE', status='terminated', started='17:11:16'), psutil.Process(pid=1084289, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1052513, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(
pid=1051108, name='python', status='zombie', started='17:11:11'), psutil.Process(pid=1051276, name='python', status='zombie', started='17:11:13'), psutil.Process(pid=1051428, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Pr
ocess(pid=1084346, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084303, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051398, name='ray::IDLE', status='terminated', started='1
7:11:13'), psutil.Process(pid=1051377, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051469, name='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1051472, name='ray::IDLE', status='ter
minated', started='17:11:15'), psutil.Process(pid=1084413, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1052539, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1084339, name='ray
::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084296, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1052068, name='ray::IDLE', status='terminated', started='17:11:17'), psutil.Process(pi
d=1084353, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1084497, name='ray::IDLE', status='terminated', started='17:16:29'), psutil.Process(pid=1052929, name='ray::IDLE', status='terminated', started='17:11:19'
), psutil.Process(pid=1082821, name='ray::ProverActor', status='terminated', started='17:12:17'), psutil.Process(pid=1052295, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1051447, name='ray::IDLE', status='term
inated', started='17:11:14'), psutil.Process(pid=1052190, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1051373, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1053027, name='ray:
:IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1051557, name='ray::IDLE', status='terminated', started='17:11:17'), psutil.Process(pid=1084399, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid
=1084314, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1053021, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1052495, name='ray::IDLE', status='terminated', started='17:11:19')
, psutil.Process(pid=1052976, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1051355, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1052103, name='ray::IDLE', status='terminated',
 started='17:11:18'), psutil.Process(pid=1084470, name='ray::IDLE', status='terminated', started='17:16:27'), psutil.Process(pid=1051543, name='ray::IDLE', status='terminated', started='17:11:16'), psutil.Process(pid=1084328, name='ray::IDLE',
status='terminated', started='17:16:24'), psutil.Process(pid=1052137, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1051440, name='ray::IDLE', status='terminated', started='17:11:14'), psutil.Process(pid=1051443
, name='ray::IDLE', status='terminated', started='17:11:14'), psutil.Process(pid=1051411, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1053002, name='ray::IDLE', status='terminated', started='17:11:19'), psutil
.Process(pid=1051394, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051362, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084443, name='ray::IDLE', status='terminated', started
='17:16:26'), psutil.Process(pid=1052962, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1052123, name='ray::IDLE', status='terminated', started='17:11:18'), psutil.Process(pid=1084418, name='ray::IDLE', status='
terminated', started='17:16:25'), psutil.Process(pid=1084310, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1051430, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051441, name='
ray::IDLE', status='terminated', started='17:11:14'), psutil.Process(pid=1051422, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1084438, name='ray::IDLE', status='terminated', started='17:16:26'), psutil.Process
(pid=1084198, name='python', status='terminated', started='17:16:24'), psutil.Process(pid=1051401, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051479, name='ray::IDLE', status='terminated', started='17:11:16'
), psutil.Process(pid=1051380, name='ray::IDLE', status='terminated', started='17:11:13'), psutil.Process(pid=1051470, name='ray::IDLE', status='terminated', started='17:11:15'), psutil.Process(pid=1052107, name='ray::IDLE', status='terminated'
, started='17:11:18'), psutil.Process(pid=1052065, name='ray::IDLE', status='terminated', started='17:11:17'), psutil.Process(pid=1084402, name='ray::IDLE', status='terminated', started='17:16:25'), psutil.Process(pid=1084360, name='ray::IDLE',
 status='terminated', started='17:16:24'), psutil.Process(pid=1084317, name='ray::IDLE', status='terminated', started='17:16:24'), psutil.Process(pid=1052574, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=105295
8, name='ray::IDLE', status='terminated', started='17:11:19'), psutil.Process(pid=1083779, name='gcs_server', status='zombie', started='17:16:22'), psutil.Process(pid=1050852, name='gcs_server', status='zombie', started='17:11:11')] will be for
cefully terminated.
You can also use `--force` to forcefully terminate processes or set higher `--grace-period` to wait longer time for proper termination.
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ python ppl_gpus.py
GPU UUID                                      PID  User       Process Name      GPU Memory Usage (MB)    GPU Index  GPU Name
----------------------------------------  -------  ---------  --------------  -----------------------  -----------  ---------------------
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   572274  yingzi_ma  pt_main_thread                    16638            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   916107  yingzi_ma  pt_main_thread                    14910            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170   920433  yingzi_ma  pt_main_thread                    13518            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170  1050429  yingzi_ma  pt_main_thread                     2564            0  NVIDIA A100-SXM4-80GB
GPU-50e0b950-9b98-73ac-0c65-7c1290f87170  1083361  yingzi_ma  pt_main_thread                     2564            0  NVIDIA A100-SXM4-80GB
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ kill -9 572274 916107 920433 1050429 1083361
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ bash run_code.sh
Script executed from: /data/yingzi_ma/lean_project/ReProver
[2024-09-08 17:17:41,999] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
2024-09-08 17:17:45.805 | INFO     | __main__:main:1183 - Running retrieval baseline
2024-09-08 17:17:45.805 | INFO     | __main__:main:1186 - Configuring LeanDojo...
2024-09-08 17:17:45.808 | INFO     | generate_benchmark_lean4:configure_leandojo:347 - Current working directory: /data/yingzi_ma/lean_project/ReProver
2024-09-08 17:17:45.808 | INFO     | __main__:main:1188 - LeanDojo configured
2024-09-08 17:17:45.808 | INFO     | __main__:main:1193 - Starting the main process
2024-09-08 17:17:45.809 | INFO     | __main__:main:1201 - Loading database from /data/yingzi_ma/lean_project/dynamic_database_retrieval_single_repo_no_ewc_pfr.json
2024-09-08 17:17:59.643 | INFO     | dynamic_database:add_repository:600 - Attempting to add repository: https://github.com/teorth/pfr (commit: fa398a5b853c7e94e3294c45e50c6aee013a2687)
2024-09-08 17:17:59.643 | INFO     | dynamic_database:add_repository:603 - Added new repository: https://github.com/teorth/pfr (commit: fa398a5b853c7e94e3294c45e50c6aee013a2687)
2024-09-08 17:18:04.867 | INFO     | dynamic_database:add_repository:600 - Attempting to add repository: https://github.com/avigad/mathematics_in_lean_source (commit: 5297e0fb051367c48c0a084411853a576389ecf5)
2024-09-08 17:18:04.868 | INFO     | dynamic_database:add_repository:603 - Added new repository: https://github.com/avigad/mathematics_in_lean_source (commit: 5297e0fb051367c48c0a084411853a576389ecf5)
2024-09-08 17:18:05.094 | INFO     | __main__:main:1203 - Loaded database from /data/yingzi_ma/lean_project/dynamic_database_retrieval_single_repo_no_ewc_pfr.json
2024-09-08 17:18:05.094 | INFO     | __main__:main:1210 - Found 15 repositories
2024-09-08 17:18:05.094 | INFO     | __main__:main:1301 - Starting without curriculum learning
2024-09-08 17:18:05.346 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.11.0-rc2
2024-09-08 17:18:20.850 | INFO     | __main__:main:1330 - Finding compatible repositories...
2024-09-08 17:18:21.161 | INFO     | __main__:get_compatible_commit:322 - Latest commit: cfe61bc71b5ea501f89df36c945949a1febf5e75
2024-09-08 17:18:21.161 | INFO     | __main__:get_compatible_commit:325 - Creating LeanGitRepo for https://github.com/avigad/mathematics_in_lean_source
2024-09-08 17:18:21.161 | INFO     | __main__:get_compatible_commit:327 - Getting config for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:18:21.161 | INFO     | __main__:get_compatible_commit:334 - Searching for compatible commit for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:18:21.164 | INFO     | __main__:get_compatible_commit:340 - Already in a Git repository
2024-09-08 17:18:21.166 | INFO     | __main__:get_compatible_commit:350 - Fetching commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:18:23.141 | INFO     | __main__:get_compatible_commit:354 - Fetched commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:18:23.145 | INFO     | __main__:get_compatible_commit:360 - Getting list of commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:18:23.155 | INFO     | __main__:get_compatible_commit:365 - Found 526 commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:18:23.210 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.10.0
2024-09-08 17:18:38.405 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.10.0-rc2
2024-09-08 17:18:54.207 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:90 - Querying the commit hash for lean4 v4.8.0-rc2
2024-09-08 17:19:09.198 | INFO     | __main__:get_compatible_commit:372 - Found compatible commit 5297e0fb051367c48c0a084411853a576389ecf5 for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:19:09.523 | INFO     | __main__:get_compatible_commit:322 - Latest commit: cfe61bc71b5ea501f89df36c945949a1febf5e75
2024-09-08 17:19:09.524 | INFO     | __main__:get_compatible_commit:325 - Creating LeanGitRepo for https://github.com/avigad/mathematics_in_lean_source
2024-09-08 17:19:09.524 | INFO     | __main__:get_compatible_commit:327 - Getting config for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:19:09.524 | INFO     | __main__:get_compatible_commit:334 - Searching for compatible commit for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:19:09.527 | INFO     | __main__:get_compatible_commit:340 - Already in a Git repository
2024-09-08 17:19:09.528 | INFO     | __main__:get_compatible_commit:350 - Fetching commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:19:11.452 | INFO     | __main__:get_compatible_commit:354 - Fetched commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:19:11.456 | INFO     | __main__:get_compatible_commit:360 - Getting list of commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:19:11.466 | INFO     | __main__:get_compatible_commit:365 - Found 526 commits for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:19:11.467 | INFO     | __main__:get_compatible_commit:372 - Found compatible commit 5297e0fb051367c48c0a084411853a576389ecf5 for https://github.com/avigad/mathematics_in_lean_source.git
2024-09-08 17:19:11.472 | INFO     | __main__:main:1333 - Finished finding compatible repositories
2024-09-08 17:19:11.472 | INFO     | __main__:main:1351 - length of lean_git_repos: 2
2024-09-08 17:19:11.472 | INFO     | __main__:main:1352 - i: 0
2024-09-08 17:19:11.472 | INFO     | __main__:main:1357 - Main process
2024-09-08 17:19:11.472 | INFO     | __main__:main:1358 - Using lambda = 0.0
2024-09-08 17:19:11.472 | INFO     | __main__:main:1359 - Processing https://github.com/avigad/mathematics_in_lean_source
2024-09-08 17:19:11.473 | INFO     | __main__:main:1382 - Adding repo to repos_for_merged_dataset
2024-09-08 17:19:11.473 | INFO     | __main__:main:1393 - All GPUs
2024-09-08 17:19:11.473 | INFO     | __main__:main:1622 - Starting the prover
2024-09-08 17:19:11.473 | INFO     | prover.proof_search:__init__:407 - Inside __init__
2024-09-08 17:19:11.473 | INFO     | prover.proof_search:__init__:412 - ckpt_path is not None
2024-09-08 17:19:11.473 | INFO     | prover.proof_search:__init__:427 - Using RAG
/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/lightning_fabric/utilities/cloud_io.py:57: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly.
It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `
weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.se
rialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
Lightning automatically upgraded your loaded checkpoint from v0.0.0 to v2.2.4. To apply the upgrade to your files permanently, run `python -m pytorch_lightning.utilities.upgrade_checkpoint ../kaiyuy_leandojo-lean4-retriever-tacgen-byt5-small/mo
del_lightning.ckpt`
2024-09-08 17:19:12.132 | INFO     | generator.model:__init__:124 - Retriever checkpoint path: /data/yingzi_ma/lean_project/checkpoints_PT_full_merge_each_time_ewc/mathlib4_29dcec074de168ac2bf835a77ef68bbe069194c5.ckpt
2024-09-08 17:19:12.132 | INFO     | generator.model:__init__:138 - Loading the retriever from /data/yingzi_ma/lean_project/checkpoints_PT_full_merge_each_time_ewc/mathlib4_29dcec074de168ac2bf835a77ef68bbe069194c5.ckpt
Lightning automatically upgraded your loaded checkpoint from v0.0.0 to v2.2.4. To apply the upgrade to your files permanently, run `python -m pytorch_lightning.utilities.upgrade_checkpoint ../checkpoints_PT_full_merge_each_time_ewc/mathlib4_29d
cec074de168ac2bf835a77ef68bbe069194c5.ckpt`
2024-09-08 17:19:14.097 | INFO     | generator.model:__init__:151 - RetrievalAugmentedGenerator initialized
/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/pytorch_lightning/core/saving.py:184: Found keys that are in the model state dict but not in the checkpoint: ['retriever.encoder.shared.weight', 'retriever.encoder.encoder.em
bed_tokens.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.v.weight', 'retriever.encoder.e
ncoder.block.0.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight', 'retriever.encoder.encoder.block.0.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.0.layer.1.
DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.0.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.0.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.0.layer.1.layer_norm.weight', 'retriever
.encoder.encoder.block.1.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.1.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.1.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.1.layer.0.SelfAtt
ention.o.weight', 'retriever.encoder.encoder.block.1.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.1.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.1.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.
encoder.block.1.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.1.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.k.wei
ght', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.2.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.2.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.2.laye
r.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.2.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.2.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.2.layer.1.layer_norm.weight', 'retri
ever.encoder.encoder.block.3.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.3.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.3.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.3.layer.0.Sel
fAttention.o.weight', 'retriever.encoder.encoder.block.3.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.3.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.3.layer.1.DenseReluDense.wi_1.weight', 'retriever.enco
der.encoder.block.3.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.3.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.k
.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.4.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.4.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.4.
layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.4.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.4.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.4.layer.1.layer_norm.weight', 'r
etriever.encoder.encoder.block.5.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.5.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.5.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.5.layer.0
.SelfAttention.o.weight', 'retriever.encoder.encoder.block.5.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.5.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.5.layer.1.DenseReluDense.wi_1.weight', 'retriever.
encoder.encoder.block.5.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.5.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttenti
on.k.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.6.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.6.layer.0.layer_norm.weight', 'retriever.encoder.encoder.bloc
k.6.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.6.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.6.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.6.layer.1.layer_norm.weight'
, 'retriever.encoder.encoder.block.7.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.7.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.7.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.7.lay
er.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.7.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.7.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.7.layer.1.DenseReluDense.wi_1.weight', 'retrie
ver.encoder.encoder.block.7.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.7.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAtt
ention.k.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.8.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.8.layer.0.layer_norm.weight', 'retriever.encoder.encoder.
block.8.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.8.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.8.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.8.layer.1.layer_norm.wei
ght', 'retriever.encoder.encoder.block.9.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.9.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.9.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.9
.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.9.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.9.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.9.layer.1.DenseReluDense.wi_1.weight', 're
triever.encoder.encoder.block.9.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.9.layer.1.layer_norm.weight', 'retriever.encoder.encoder.block.10.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.10.layer.0.S
elfAttention.k.weight', 'retriever.encoder.encoder.block.10.layer.0.SelfAttention.v.weight', 'retriever.encoder.encoder.block.10.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.10.layer.0.layer_norm.weight', 'retriever.encoder
.encoder.block.10.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.10.layer.1.DenseReluDense.wi_1.weight', 'retriever.encoder.encoder.block.10.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.10.layer.1.l
ayer_norm.weight', 'retriever.encoder.encoder.block.11.layer.0.SelfAttention.q.weight', 'retriever.encoder.encoder.block.11.layer.0.SelfAttention.k.weight', 'retriever.encoder.encoder.block.11.layer.0.SelfAttention.v.weight', 'retriever.encoder
.encoder.block.11.layer.0.SelfAttention.o.weight', 'retriever.encoder.encoder.block.11.layer.0.layer_norm.weight', 'retriever.encoder.encoder.block.11.layer.1.DenseReluDense.wi_0.weight', 'retriever.encoder.encoder.block.11.layer.1.DenseReluDen
se.wi_1.weight', 'retriever.encoder.encoder.block.11.layer.1.DenseReluDense.wo.weight', 'retriever.encoder.encoder.block.11.layer.1.layer_norm.weight', 'retriever.encoder.encoder.final_layer_norm.weight']
/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/pytorch_lightning/core/saving.py:188: Found keys that are not in the model state dict but in the checkpoint: ['pytorch-lightning_version', 'global_step', 'epoch', 'state_dict
', 'callbacks', 'loops', 'legacy_pytorch-lightning_version', 'hyper_parameters']
2024-09-08 17:19:14.630 | INFO     | prover.proof_search:__init__:451 - Loaded model from /data/yingzi_ma/lean_project/kaiyuy_leandojo-lean4-retriever-tacgen-byt5-small/model_lightning.ckpt
2024-09-08 17:19:14.631 | INFO     | prover.proof_search:__init__:452 - Using retriever: PremiseRetriever(
  (encoder): T5EncoderModel(
    (shared): Embedding(384, 1472)
    (encoder): T5Stack(
      (embed_tokens): Embedding(384, 1472)
      (block): ModuleList(
        (0): T5Block(
          (layer): ModuleList(
            (0): T5LayerSelfAttention(
              (SelfAttention): T5Attention(
                (q): Linear(in_features=1472, out_features=384, bias=False)
                (k): Linear(in_features=1472, out_features=384, bias=False)
                (v): Linear(in_features=1472, out_features=384, bias=False)
                (o): Linear(in_features=384, out_features=1472, bias=False)
                (relative_attention_bias): Embedding(32, 6)
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (1): T5LayerFF(
              (DenseReluDense): T5DenseGatedActDense(
                (wi_0): Linear(in_features=1472, out_features=3584, bias=False)
                (wi_1): Linear(in_features=1472, out_features=3584, bias=False)
                (wo): Linear(in_features=3584, out_features=1472, bias=False)
                (dropout): Dropout(p=0.1, inplace=False)
                (act): NewGELUActivation()
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
        (1-11): 11 x T5Block(
          (layer): ModuleList(
            (0): T5LayerSelfAttention(
              (SelfAttention): T5Attention(
                (q): Linear(in_features=1472, out_features=384, bias=False)
                (k): Linear(in_features=1472, out_features=384, bias=False)
                (v): Linear(in_features=1472, out_features=384, bias=False)
                (o): Linear(in_features=384, out_features=1472, bias=False)
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (1): T5LayerFF(
              (DenseReluDense): T5DenseGatedActDense(
                (wi_0): Linear(in_features=1472, out_features=3584, bias=False)
                (wi_1): Linear(in_features=1472, out_features=3584, bias=False)
                (wo): Linear(in_features=3584, out_features=1472, bias=False)
                (dropout): Dropout(p=0.1, inplace=False)
                (act): NewGELUActivation()
              )
              (layer_norm): T5LayerNorm()
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
      (final_layer_norm): T5LayerNorm()
      (dropout): Dropout(p=0.1, inplace=False)
    )
  )
)
2024-09-08 17:19:14.631 | INFO     | prover.proof_search:__init__:455 - Loading indexed corpus from /data/yingzi_ma/lean_project/datasets_retrieval_single_repo_no_ewc_pfr/merged_with_new_mathematics_in_lean_source_5297e0fb051367c48c0a084411853a
576389ecf5/corpus.jsonl
2024-09-08 17:19:14.631 | INFO     | common:__init__:208 - Building the corpus from /data/yingzi_ma/lean_project/datasets_retrieval_single_repo_no_ewc_pfr/merged_with_new_mathematics_in_lean_source_5297e0fb051367c48c0a084411853a576389ecf5/corpu
s.jsonl
2024-09-08 17:19:23.532 | INFO     | retrieval.model:load_corpus:159 - Embeddings staled load corpus jsonl: True
2024-09-08 17:19:23.532 | INFO     | prover.proof_search:__init__:457 - Loaded indexed corpus from /data/yingzi_ma/lean_project/datasets_retrieval_single_repo_no_ewc_pfr/merged_with_new_mathematics_in_lean_source_5297e0fb051367c48c0a084411853a5
76389ecf5/corpus.jsonl
2024-09-08 17:19:23.532 | INFO     | prover.proof_search:__init__:471 - Launching 4 workers with 4 GPUs.
2024-09-08 17:19:26,340 INFO worker.py:1774 -- Started a local Ray instance. View the dashboard at 127.0.0.1:8265
(pid=1131591) [2024-09-08 17:20:04,588] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
(ProverActor pid=1131591) /data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle
 module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the
 default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by th
e user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimen
tal feature.
(ProverActor pid=1131591)   return torch.load(io.BytesIO(b))
(pid=1131817) [2024-09-08 17:20:15,925] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
(ProverActor pid=1131817) /data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle
 module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the
 default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by th
e user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimen
tal feature.
(ProverActor pid=1131817)   return torch.load(io.BytesIO(b))
(pid=1132027) [2024-09-08 17:20:28,259] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
(ProverActor pid=1132027) /data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle
 module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the
 default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by th
e user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimen
tal feature.
(ProverActor pid=1132027)   return torch.load(io.BytesIO(b))
> /data/yingzi_ma/lean_project/ReProver/main.py(803)prove_sorry_theorems()
    802
--> 803     processed_theorems: Set[Tuple[str, str, Tuple[int, int], Tuple[int, int]]] = set()
    804     all_encountered_theorems: Set[Tuple[str, str, Tuple[int, int], Tuple[int, int]]] = set()

ipdb> (pid=1132247) [2024-09-08 17:20:39,751] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
(ProverActor pid=1132247) /data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle
 module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the
 default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by th
e user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimen
tal feature.
(ProverActor pid=1132247)   return torch.load(io.BytesIO(b))
ipdb> n
> /data/yingzi_ma/lean_project/ReProver/main.py(804)prove_sorry_theorems()
    803     processed_theorems: Set[Tuple[str, str, Tuple[int, int], Tuple[int, int]]] = set()
--> 804     all_encountered_theorems: Set[Tuple[str, str, Tuple[int, int], Tuple[int, int]]] = set()
    805     last_save_time = datetime.datetime.now()

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(805)prove_sorry_theorems()
    804     all_encountered_theorems: Set[Tuple[str, str, Tuple[int, int], Tuple[int, int]]] = set()
--> 805     last_save_time = datetime.datetime.now()
    806     save_interval = timedelta(minutes=30)

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(806)prove_sorry_theorems()
    805     last_save_time = datetime.datetime.now()
--> 806     save_interval = timedelta(minutes=30)
    807

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(809)prove_sorry_theorems()
    808     # Load previously encountered theorems
--> 809     all_encountered_theorems = load_encountered_theorems(ENCOUNTERED_THEOREMS_FILE)
    810

ipdb> b 853
Breakpoint 1 at /data/yingzi_ma/lean_project/ReProver/main.py:853
ipdb> c
2024-09-08 17:21:27.402 | INFO     | __main__:prove_sorry_theorems:816 - Found 29 sorry theorems to prove
Processing theorems from avigad/mathematics_in_lean_source:   0%|                                                                                                                                                       | 0/29 [00:00<?, ?theorem/s]
2024-09-08 17:21:27.411 | INFO     | __main__:prove_sorry_theorems:839 - Searching for proof for MyRing.neg_neg
2024-09-08 17:21:27.412 | INFO     | __main__:prove_sorry_theorems:840 - Position: (305, 1)
2024-09-08 17:21:27.413 | INFO     | __main__:prove_sorry_theorems:839 - Searching for proof for Cantor
2024-09-08 17:21:27.413 | INFO     | __main__:prove_sorry_theorems:840 - Position: (673, 1)
2024-09-08 17:21:27.414 | INFO     | __main__:prove_sorry_theorems:839 - Searching for proof for MyGroup.mul_right_inv
2024-09-08 17:21:27.415 | INFO     | __main__:prove_sorry_theorems:840 - Position: (468, 1)
2024-09-08 17:21:27.416 | INFO     | __main__:prove_sorry_theorems:839 - Searching for proof for C03S06.aux
2024-09-08 17:21:27.416 | INFO     | __main__:prove_sorry_theorems:840 - Position: (275, 1)
2024-09-08 17:21:27.417 | INFO     | __main__:prove_sorry_theorems:839 - Searching for proof for cauchySeq_of_le_geometric_two'
2024-09-08 17:21:27.418 | INFO     | __main__:prove_sorry_theorems:840 - Position: (423, 1)
2024-09-08 17:21:27.419 | INFO     | __main__:prove_sorry_theorems:839 - Searching for proof for C03S05.MyAbs.lt_abs
2024-09-08 17:21:27.419 | INFO     | __main__:prove_sorry_theorems:840 - Position: (193, 1)
2024-09-08 17:21:27.420 | INFO     | __main__:prove_sorry_theorems:839 - Searching for proof for MyRing.zero_mul
2024-09-08 17:21:27.421 | INFO     | __main__:prove_sorry_theorems:840 - Position: (279, 1)
2024-09-08 17:21:27.422 | INFO     | __main__:prove_sorry_theorems:839 - Searching for proof for C03S01.my_lemma3
2024-09-08 17:21:27.422 | INFO     | __main__:prove_sorry_theorems:840 - Position: (99, 1)
2024-09-08 17:21:27.423 | INFO     | __main__:prove_sorry_theorems:839 - Searching for proof for MyRing.two_mul
2024-09-08 17:21:27.424 | INFO     | __main__:prove_sorry_theorems:840 - Position: (407, 1)
2024-09-08 17:21:27.425 | INFO     | __main__:prove_sorry_theorems:839 - Searching for proof for C03S05.MyAbs.abs_add
2024-09-08 17:21:27.425 | INFO     | __main__:prove_sorry_theorems:840 - Position: (163, 1)
> /data/yingzi_ma/lean_project/ReProver/main.py(853)prove_sorry_theorems()
    852             if len(theorem_batch) == batch_size:
1-> 853                 process_theorem_batch(theorem_batch, positions_batch, repo, db, prover, dynamic_database_json_path)
    854                 theorem_batch = []

ipdb> theorem_batch[2]
(Theorem(full_name='MyGroup.mul_right_inv', file_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), start=(468, 1), end=(469, 8), url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051
367c48c0a084411853a576389ecf5', theorem_statement='theorem mul_right_inv (a : G) : a * a⁻¹ = 1 :=', traced_tactics=[AnnotatedTactic(tactic='sorry', annotated_tactic=('sorry', []), state_before='G : Type u_1\ninst✝ : Group G\na : G\n⊢ a * a⁻¹ =
1', state_after='no goals')], difficulty_rating=None), Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'), file_path=PosixPath('MIL/C02_Basics/S02_Proving_Iden
tities_in_Algebraic_Structures.lean'), full_name='MyGroup.mul_right_inv'))
ipdb> positions_batch[2]
(468, 1)
ipdb> s
--Call--
> /data/yingzi_ma/lean_project/ReProver/main.py(740)process_theorem_batch()
    739
--> 740 def process_theorem_batch(theorem_batch, positions_batch, repo, db, prover, dynamic_database_json_path):
    741     lean_dojo_theorems = [t[1] for t in theorem_batch]

ipdb> n
> /data/yingzi_ma/lean_project/ReProver/main.py(741)process_theorem_batch()
    740 def process_theorem_batch(theorem_batch, positions_batch, repo, db, prover, dynamic_database_json_path):
--> 741     lean_dojo_theorems = [t[1] for t in theorem_batch]
    742     results = prover.search_unordered(LeanGitRepo(repo.url, repo.commit), lean_dojo_theorems, positions_batch)

ipdb>
> /data/yingzi_ma/lean_project/ReProver/main.py(742)process_theorem_batch()
    741     lean_dojo_theorems = [t[1] for t in theorem_batch]
--> 742     results = prover.search_unordered(LeanGitRepo(repo.url, repo.commit), lean_dojo_theorems, positions_batch)
    743

ipdb> c
2024-09-08 17:21:50.569 | INFO     | prover.proof_search:search_unordered:514 - Distributed
(ProverActor pid=1132027) 2024-09-08 17:21:50.620 | INFO     | prover.proof_search:search:81 - Proving Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'), file
_path=PosixPath('MIL/C04_Sets_and_Functions/S02_Functions.lean'), full_name='Cantor')
(ProverActor pid=1132247) 2024-09-08 17:21:50.597 | INFO     | prover.proof_search:search:81 - Proving Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'), file
_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), full_name='MyRing.neg_neg')
(ProverActor pid=1131591) 2024-09-08 17:21:50.681 | INFO     | prover.proof_search:search:81 - Proving Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'), file
_path=PosixPath('MIL/C03_Logic/S06_Sequences_and_Convergence.lean'), full_name='C03S06.aux')
(ProverActor pid=1131817) 2024-09-08 17:21:50.650 | INFO     | prover.proof_search:search:81 - Proving Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'), file
_path=PosixPath('MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean'), full_name='MyGroup.mul_right_inv')
(ProverActor pid=1131591) 2024-09-08 17:22:32.163 | INFO     | lean_dojo.utils:execute:88 -
(ProverActor pid=1131591) 2024-09-08 17:22:32.163 | ERROR    | lean_dojo.utils:execute:89 - info: downloading component 'lean'
(ProverActor pid=1131591) info: installing component 'lean'
(ProverActor pid=1131591) error: could not remove 'temp toolchain directory' directory: '/data/yingzi_ma/.elan/toolchains/leanprover--lean4---v4.8.tmp'
(ProverActor pid=1131591) info: caused by: Directory not empty (os error 39)
(ProverActor pid=1131591)
(ProverActor pid=1131817) info: caused by: No such file or directory (os error 2)
(ProverActor pid=1131817)
(ProverActor pid=1132247) error: failed to extract package
(ProverActor pid=1132247) info: caused by: failed to unpack `lean-4.8.0-rc2-linux/lib/libgmp.a` into `/data/yingzi_ma/.elan/toolchains/leanprover--lean4---v4.8.tmp/lib/libgmp.a`
(ProverActor pid=1132247)
(ProverActor pid=1131591) 2024-09-08 17:22:36.636 | INFO     | prover.proof_search:search:81 - Proving Theorem(repo=LeanGitRepo(url='https://github.com/avigad/mathematics_in_lean_source', commit='5297e0fb051367c48c0a084411853a576389ecf5'), file
_path=PosixPath('MIL/C09_Topology/S02_Metric_Spaces.lean'), full_name="cauchySeq_of_le_geometric_two'")
Processing theorems from avigad/mathematics_in_lean_source:  31%|████████████████████████████████████████████▍                                                                                                  | 9/29 [01:09<02:33,  7.69s/theorem]
2024-09-08 17:22:36.649 | INFO     | __main__:main:1685 - An error occurred: ray::ProverActor.search() (pid=1131591, ip=10.0.4.105, actor_id=6a44852b4ffec2055c42881d01000000, repr=<prover.proof_search.ProverActor object at 0x7e4e14c57430>)
  File "/data/yingzi_ma/lean_project/ReProver/prover/proof_search.py", line 332, in search
    return self.prover.search(repo, thm, pos)
  File "/data/yingzi_ma/lean_project/ReProver/prover/proof_search.py", line 96, in search
    with Dojo(thm, self.timeout, additional_imports=imps) as (
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/lean_dojo/interaction/dojo.py", line 255, in __enter__
    raise ex
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/lean_dojo/interaction/dojo.py", line 197, in __enter__
    self.container.run(
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/lean_dojo/container.py", line 194, in run
    execute(cmd, capture_output=capture_output)
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/lean_dojo/utils.py", line 90, in execute
    raise ex
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/lean_dojo/utils.py", line 85, in execute
    res = subprocess.run(cmd, shell=True, capture_output=capture_output, check=True)
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/subprocess.py", line 526, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command 'lake build Lean4Repl' returned non-zero exit status 1.
Traceback (most recent call last):
  File "/data/yingzi_ma/lean_project/ReProver/main.py", line 1653, in main
    prove_sorry_theorems(db, prover, dynamic_database_json_path, repos_for_merged_dataset)
  File "/data/yingzi_ma/lean_project/ReProver/main.py", line 853, in prove_sorry_theorems
    process_theorem_batch(theorem_batch, positions_batch, repo, db, prover, dynamic_database_json_path)
  File "/data/yingzi_ma/lean_project/ReProver/main.py", line 742, in process_theorem_batch
    results = prover.search_unordered(LeanGitRepo(repo.url, repo.commit), lean_dojo_theorems, positions_batch)
  File "/data/yingzi_ma/lean_project/ReProver/prover/proof_search.py", line 515, in search_unordered
    results = list(
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/ray/util/actor_pool.py", line 170, in get_generator
    yield self.get_next_unordered()
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/ray/util/actor_pool.py", line 370, in get_next_unordered
    return ray.get(future)
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/ray/_private/worker.py", line 2661, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/ray/_private/worker.py", line 871, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(CalledProcessError): ray::ProverActor.search() (pid=1131591, ip=10.0.4.105, actor_id=6a44852b4ffec2055c42881d01000000, repr=<prover.proof_search.ProverActor object at 0x7e4e14c57430>)
  File "/data/yingzi_ma/lean_project/ReProver/prover/proof_search.py", line 332, in search
    return self.prover.search(repo, thm, pos)
  File "/data/yingzi_ma/lean_project/ReProver/prover/proof_search.py", line 96, in search
    with Dojo(thm, self.timeout, additional_imports=imps) as (
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/lean_dojo/interaction/dojo.py", line 255, in __enter__
    raise ex
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/lean_dojo/interaction/dojo.py", line 197, in __enter__
    self.container.run(
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/lean_dojo/container.py", line 194, in run
    execute(cmd, capture_output=capture_output)
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/lean_dojo/utils.py", line 90, in execute
    raise ex
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/lean_dojo/utils.py", line 85, in execute
    res = subprocess.run(cmd, shell=True, capture_output=capture_output, check=True)
  File "/data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/subprocess.py", line 526, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command 'lake build Lean4Repl' returned non-zero exit status 1.
(ProverActor pid=1132247) 2024-09-08 17:22:32.187 | INFO     | lean_dojo.utils:execute:88 -  [repeated 2x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master
/ray-observability/user-guides/configure-logging.html#log-deduplication for more options.)
(ProverActor pid=1132247) 2024-09-08 17:22:32.187 | ERROR    | lean_dojo.utils:execute:89 - info: downloading component 'lean' [repeated 2x across cluster]
(ProverActor pid=1132247) info: installing component 'lean' [repeated 2x across cluster]
(ProverActor pid=1131817) error: could not remove 'temp toolchain directory' directory: '/data/yingzi_ma/.elan/toolchains/leanprover--lean4---v4.8.tmp'
(ProverActor pid=1132247) info: caused by: No such file or directory (os error 2)
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$
