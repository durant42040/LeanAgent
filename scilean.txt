(base) yingzi_ma@cais-login-0:~/lean_project/ReProver$ srun --partition=compute --gpus=4 --nodes=1 --time=2-00:00:00 --pty /bin/bash
srun: job 44473 queued and waiting for resources
srun: job 44473 has been allocated resources
(base) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ conda activate ReProver
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ export RAID_DIR="/data/yingzi_ma/lean_project"
cd ${RAID_DIR}/ReProver
echo "Script executed from: ${PWD}"
source ${RAID_DIR}/../miniconda3/etc/profile.d/conda.sh
conda activate ReProver
export PYTHONPATH="${PYTHONPATH}:${RAID_DIR}/ReProver"
export GITHUB_ACCESS_TOKEN="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"
export CACHE_DIR="${RAID_DIR}/.cache/lean_dojo"
Script executed from: /data/yingzi_ma/lean_project/ReProver
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ python leanagent
python: can't open file '/data/yingzi_ma/lean_project/ReProver/leanagent': [Errno 2] No such file or directory
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$ python leanagent.py
[2024-09-27 15:33:53,167] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)

Demo: Continuously Improving
Initializing LeanAgent...
Loading the model...
Model loaded!
2024-09-27 15:34:12,222 INFO worker.py:1774 -- Started a local Ray instance. View the dashboard at 127.0.0.1:8265
(pid=1682945) [2024-09-27 15:34:51,444] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
(ProverActor pid=1682945) /data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), wh
ich uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrus
ted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer b
e allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't h
ave full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
(ProverActor pid=1682945)   return torch.load(io.BytesIO(b))
(pid=1683126) [2024-09-27 15:35:01,742] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
(ProverActor pid=1683126) /data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), wh
ich uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrus
ted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer b
e allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't h
ave full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
(ProverActor pid=1683126)   return torch.load(io.BytesIO(b))
(pid=1683332) [2024-09-27 15:35:14,337] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
(ProverActor pid=1683332) /data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), wh
ich uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrus
ted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer b
e allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't h
ave full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
(ProverActor pid=1683332)   return torch.load(io.BytesIO(b))
LeanAgent is ready!
(pid=1683497) [2024-09-27 15:35:27,514] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
(ProverActor pid=1683497) /data/yingzi_ma/miniconda3/envs/ReProver/lib/python3.10/site-packages/torch/storage.py:414: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), wh
ich uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrus
ted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer b
e allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't h
ave full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
(ProverActor pid=1683497)   return torch.load(io.BytesIO(b))
Proving SciLean.ContCDiffMapFD_eta
(ProverActor pid=1683497)

Theorem: SciLean.ContCDiffMapFD_eta
Status: Not Proved

No proof found.
(ReProver) yingzi_ma@compute-permanent-node-106:~/lean_project/ReProver$
