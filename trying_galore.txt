        [ 0.2917, -0.0128,  0.3315,  ..., -0.3744,  0.4178,  0.3169],
        [-0.1353,  0.0194, -0.2589,  ..., -0.2124, -0.1394,  0.1254],
        ...,
        [-0.2580, -0.1620, -0.0212,  ...,  0.0404, -0.2567, -0.0198],
        [ 0.2855, -0.1196, -0.0620,  ...,  0.2951, -0.1850,  0.7106],
        [ 0.1893, -0.2171, -0.4357,  ...,  0.0713,  0.0501, -0.1533]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.6357, -0.1994, -0.3425,  ..., -0.5515, -0.3147,  0.8501],
        [-0.7417,  0.4008, -0.8617,  ..., -0.2875,  0.8585,  0.7500],
        [ 0.3856, -0.4907,  0.1627,  ..., -0.0426, -0.4690, -0.0856],
        ...,
        [ 0.7029, -0.0394, -0.0613,  ..., -0.3636, -0.0075,  0.2635],
        [-0.5717,  0.5050,  0.7643,  ..., -0.6229,  0.0815, -0.1127],
        [ 0.7883,  0.4660, -0.4783,  ...,  0.6271, -0.2404,  0.2002]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0801,  0.4506,  0.0284,  ...,  0.3239,  0.0103, -0.3774],
        [-0.2287, -0.1287,  0.6161,  ...,  0.3847,  0.0053,  0.1072],
        [ 0.1642, -0.4020,  0.1451,  ..., -0.0462,  0.1173, -0.0022],
        ...,
        [ 0.0751, -0.1163,  0.4217,  ...,  0.3714,  0.0218, -0.0451],
        [ 0.1151,  0.3072, -0.0107,  ...,  0.0584, -0.1231,  0.3260],
        [ 0.3611, -0.0367,  0.2915,  ..., -0.3073,  0.2915,  0.0498]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1542, 0.1307, 0.1214,  ..., 0.1359, 0.1457, 0.1467], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.0299,  0.0141,  0.0450,  ..., -0.0111,  0.0408, -0.0405],
        [-0.0533, -0.0420, -0.0588,  ..., -0.0510, -0.0163,  0.0481],
        [ 0.0163, -0.1194, -0.0396,  ...,  0.0350,  0.0704,  0.0993],
        ...,
        [ 0.0254,  0.0954, -0.1116,  ...,  0.0216,  0.0240, -0.0394],
        [-0.0523,  0.0166, -0.1044,  ..., -0.0251,  0.1284, -0.0376],
        [ 0.1119, -0.0345,  0.0425,  ..., -0.1244, -0.0634, -0.1063]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0650, -0.2416,  0.3096,  ...,  0.0849,  0.3642, -0.2868],
        [-0.0065,  0.3962, -0.1026,  ...,  0.0722,  0.2544, -0.2903],
        [-0.0370, -0.2742,  0.0148,  ..., -0.0913,  0.2557,  0.0040],
        ...,
        [ 0.1495,  0.3908, -0.1205,  ...,  0.2065,  0.0075,  0.1839],
        [ 0.3768,  0.0400,  0.1184,  ..., -0.1817,  0.1518, -0.0810],
        [-0.2820,  0.1453, -0.0732,  ...,  0.1679,  0.1350, -0.1489]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1655, -0.1385, -0.4528,  ..., -0.0760,  0.6173,  0.6571],
        [-0.2924, -0.2485,  0.4310,  ...,  0.0925,  0.4615, -0.2199],
        [-0.6890,  0.4856, -0.0306,  ...,  0.0252,  0.3093,  0.7753],
        ...,
        [-0.2987, -0.9105,  0.0068,  ..., -0.0669,  0.1357, -0.1866],
        [ 0.5730,  0.1304, -0.0356,  ...,  0.3542, -0.2504,  0.5501],
        [-0.0836,  0.2835, -0.1224,  ...,  0.1000,  0.1610, -0.1313]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.6289,  0.2035, -0.1930,  ...,  1.5665,  1.1281, -0.6367],
        [-1.0038,  0.9949, -0.2226,  ..., -0.3668,  0.5547, -0.7030],
        [ 0.6625,  0.3239,  1.2193,  ...,  0.5539, -0.0802, -1.3021],
        ...,
        [-1.2168,  0.4132, -0.1640,  ..., -0.5716,  0.4474, -0.9060],
        [-0.2225, -0.0917, -1.2647,  ..., -0.0139, -0.3167, -1.0787],
        [-1.8028,  0.6774, -0.3207,  ...,  1.0618,  0.6614,  0.2591]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.0855, 0.0999, 0.0523,  ..., 0.0899, 0.0530, 0.1326], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.1253,  0.1114, -0.0479,  ..., -0.0152,  0.0755,  0.0052],
        [-0.3960, -0.2596, -0.1775,  ...,  0.3007, -0.4077,  0.5067],
        [-0.1731,  0.1564,  0.1930,  ...,  0.0721,  0.2071, -0.0501],
        ...,
        [ 0.1273, -0.0310,  0.2682,  ...,  0.6793, -0.1057,  0.0515],
        [ 0.3916, -0.0503,  0.0758,  ...,  0.0813, -0.1773, -0.1895],
        [-0.0697,  0.1386,  0.4689,  ..., -0.2309, -0.1424,  0.1817]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.3246, -0.4408,  0.3114,  ..., -0.5664,  0.2495,  0.4076],
        [ 0.7161, -0.2713,  0.2448,  ..., -0.2339,  0.6984,  0.5393],
        [ 0.4861,  0.2653,  0.0933,  ..., -0.4618, -0.0829, -0.1616],
        ...,
        [ 0.0622,  0.4587, -0.7578,  ...,  0.0296, -0.0691, -0.5779],
        [ 0.3184,  0.0437,  0.7975,  ...,  0.5444,  0.4549, -0.4066],
        [-0.0094, -1.3397,  0.2705,  ...,  0.3469, -0.2775,  0.7077]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.3898, -0.2491, -0.2620,  ..., -0.4365,  0.2724,  0.0874],
        [-0.1939, -0.1219, -0.3211,  ...,  0.4565, -0.3018, -0.5680],
        [-0.3549, -0.0848, -0.0908,  ..., -0.2742,  0.4007, -0.3513],
        ...,
        [ 0.4133, -0.0998,  0.1488,  ..., -0.0812,  0.1090,  0.0834],
        [ 0.0082,  0.6446, -0.2152,  ..., -0.1521,  0.1666, -0.0356],
        [-0.3114,  0.0879, -0.0057,  ...,  0.1024,  0.0960, -0.0427]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1569, 0.1411, 0.0913,  ..., 0.1594, 0.1120, 0.1515], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 8.6493e-02,  1.1864e-01, -4.7127e-02,  ...,  1.0400e-03,
         -5.9485e-05, -2.5289e-02],
        [ 5.2656e-02, -1.0736e-01,  3.9772e-03,  ..., -6.1616e-02,
         -4.7377e-02,  7.2044e-02],
        [-9.6736e-03,  4.6710e-02, -6.9292e-02,  ..., -9.5216e-02,
          6.3163e-02,  4.8108e-03],
        ...,
        [ 1.3032e-02,  3.6994e-02,  2.6077e-02,  ...,  2.1818e-02,
         -1.0377e-02,  2.8291e-02],
        [-7.8823e-03, -5.5021e-02, -2.2140e-02,  ..., -1.1071e-01,
         -1.3177e-02,  5.7225e-02],
        [ 8.0026e-02,  4.3949e-03,  7.7743e-02,  ..., -3.6224e-02,
         -2.3697e-02, -5.3692e-02]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.2798,  0.0813,  0.2118,  ...,  0.0982, -0.0074,  0.0439],
        [-0.3636,  0.0675, -0.2933,  ..., -0.1665,  0.6828,  0.2201],
        [-0.2880, -0.1682,  0.1961,  ..., -0.0322, -0.0826, -0.0628],
        ...,
        [ 0.0673,  0.0874, -0.0328,  ...,  0.0731,  0.3178, -0.0430],
        [-0.0087,  0.0148, -0.2120,  ...,  0.1693, -0.0599, -0.7099],
        [-0.3132, -0.2017, -0.0438,  ..., -0.0622,  0.0612, -0.2143]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.3505,  0.6262, -0.4424,  ...,  0.2246, -0.0524,  0.1840],
        [ 0.2866, -0.4179, -0.7077,  ..., -0.5903, -0.1015,  0.0459],
        [-0.7709,  0.3221, -0.5639,  ..., -0.4898, -0.3641, -0.3166],
        ...,
        [-0.1669, -0.0688, -0.0847,  ..., -0.0845, -0.8840,  0.3713],
        [-0.0337, -0.4713,  0.0445,  ..., -0.7061,  0.2692,  0.1070],
        [ 0.2038,  0.3147,  0.6953,  ..., -0.3917, -0.1026, -0.1711]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 1.2451, -0.8443,  0.4343,  ..., -0.1703, -0.4211,  0.6494],
        [ 0.2124, -0.7410,  1.2796,  ...,  0.1461, -0.7157,  0.8489],
        [-0.3484,  0.0041, -1.2870,  ...,  0.2090, -0.3942,  0.2705],
        ...,
        [ 0.3678, -0.2484, -0.1503,  ..., -0.2978,  0.4094, -0.1555],
        [ 1.7720,  1.5209, -0.6756,  ..., -0.2656,  0.6469, -1.6392],
        [-1.2195, -1.3076,  0.6422,  ..., -0.0501, -1.5321,  0.1757]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.0996, 0.1369, 0.1192,  ..., 0.1216, 0.1223, 0.1058], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.1100,  0.3739, -0.0676,  ...,  0.2458,  0.1458,  0.0560],
        [-0.0868,  0.0880, -0.2089,  ...,  0.0624, -0.1598, -0.1113],
        [-0.3942,  0.0527, -0.3513,  ..., -0.0639, -0.2992, -0.3435],
        ...,
        [ 0.0707, -0.1719, -0.0423,  ..., -0.0787,  0.3035,  0.3511],
        [-0.1455, -0.0999, -0.0554,  ...,  0.2592,  0.0434, -0.0381],
        [-0.2601, -0.2403,  0.1251,  ..., -0.1829, -0.1257, -0.0931]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-1.6298e-01,  8.6156e-01, -5.0606e-01,  ...,  5.1014e-05,
         -5.0381e-01, -1.8974e-01],
        [ 5.9578e-01, -7.0933e-01,  2.3952e-01,  ..., -7.2817e-02,
          8.2570e-02,  1.2350e-01],
        [ 6.8266e-01,  1.0560e-01, -4.5402e-01,  ..., -2.6749e-01,
         -5.0903e-01,  2.8004e-01],
        ...,
        [ 3.0947e-01,  1.8922e-01, -2.3270e-02,  ..., -3.7609e-01,
          1.5632e-01, -8.4038e-01],
        [-5.2663e-01,  5.3586e-01,  2.3423e-01,  ...,  3.7255e-01,
          1.5604e-01,  7.1411e-01],
        [ 2.2940e-02, -1.8292e-01,  1.5026e-01,  ...,  7.4481e-02,
          8.2993e-02, -4.3909e-01]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1423, -0.2143, -0.2092,  ...,  0.1844, -0.4574, -0.1602],
        [-0.2354, -0.1411,  0.4054,  ...,  0.0567,  0.2876,  0.0250],
        [ 0.1356,  0.4131, -0.2987,  ...,  0.6200,  0.5001,  0.0645],
        ...,
        [ 0.1118,  0.0562, -0.1591,  ...,  0.4490,  0.1238, -0.1818],
        [-0.0117,  0.4209, -0.0390,  ...,  0.1107,  0.2282, -0.0656],
        [-0.1796, -0.0412, -0.0280,  ...,  0.0361,  0.3768,  0.0324]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1479, 0.2154, 0.1530,  ..., 0.1695, 0.2211, 0.1593], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.0516,  0.0035,  0.1411,  ..., -0.0244,  0.0687,  0.0476],
        [ 0.0537, -0.0393, -0.0208,  ..., -0.0977,  0.0085, -0.0581],
        [-0.0378,  0.0126,  0.0403,  ..., -0.0910,  0.0040, -0.0414],
        ...,
        [-0.0209, -0.0337,  0.0251,  ..., -0.0004, -0.0596, -0.0109],
        [ 0.0893,  0.0157,  0.0444,  ...,  0.0117, -0.0490, -0.0151],
        [-0.0550, -0.0424, -0.0489,  ...,  0.0187, -0.0524,  0.0948]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.2763,  0.0063,  0.1739,  ...,  0.0411,  0.0536,  0.1755],
        [-0.0418,  0.0979,  0.1338,  ..., -0.3364, -0.2638, -0.0035],
        [-0.0045,  0.1995,  0.0348,  ...,  0.1860,  0.1535, -0.2688],
        ...,
        [ 0.1037,  0.0535, -0.0966,  ...,  0.1127,  0.3156, -0.1310],
        [-0.1069, -0.1620,  0.0448,  ..., -0.0478,  0.0006, -0.1222],
        [-0.1869,  0.0381, -0.2885,  ..., -0.2219, -0.2124, -0.3899]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.4877,  0.1451,  0.1326,  ...,  0.0575,  0.6135,  0.1244],
        [-0.0822, -0.3104,  0.0972,  ...,  0.0632, -0.6959, -0.1641],
        [ 0.1739, -0.4995, -0.0028,  ..., -0.1688, -1.4590,  0.1476],
        ...,
        [ 0.1275, -0.3603,  0.0760,  ..., -0.2712,  0.0186,  0.0933],
        [-0.5587, -0.5279, -0.0277,  ..., -0.6918,  0.1871,  0.9558],
        [-0.1556,  0.6855,  0.7137,  ...,  0.1907,  0.7152,  0.2788]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-1.2846,  2.1369,  0.6453,  ..., -0.3144,  0.0234, -0.6893],
        [-0.5632,  1.2324,  1.2322,  ...,  0.0715,  2.0219, -0.7431],
        [ 0.0655, -1.6631,  0.0405,  ..., -0.5864, -1.4614,  0.6042],
        ...,
        [ 0.1519, -1.7112,  0.7306,  ..., -0.6011, -0.3382,  0.6658],
        [-1.4551,  0.8165,  2.4118,  ...,  1.4825, -0.6532, -0.2357],
        [-1.5091,  0.1921, -0.9644,  ...,  1.1462,  2.2858,  0.0225]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1365, 0.1049, 0.1191,  ..., 0.1025, 0.1155, 0.0759], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[-0.0140,  0.0372,  0.1210,  ...,  0.1836, -0.0540,  0.2473],
        [-0.6006,  0.3372, -0.2792,  ..., -0.1119,  0.5309,  0.1772],
        [-0.2203, -0.1154, -0.3822,  ...,  0.1103,  0.1227, -0.2907],
        ...,
        [-0.3121,  0.1479, -0.1092,  ...,  0.0177, -0.1840,  0.3334],
        [-0.1653, -0.0355,  0.3166,  ..., -0.2119, -0.0347, -0.0394],
        [-0.3057,  0.3041,  0.0766,  ...,  0.2570,  0.4409,  0.2518]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1237,  0.7064, -0.5562,  ...,  0.1906, -0.5588,  0.3537],
        [-0.1214, -0.0990, -0.1345,  ..., -0.4322, -0.6950,  0.2207],
        [-0.0884,  0.1357, -0.4938,  ...,  0.2214, -0.0591,  1.0437],
        ...,
        [-0.2984, -0.0783, -0.0792,  ...,  0.0224,  0.1268,  0.4522],
        [ 1.0064,  0.4652, -0.3044,  ...,  0.2635, -0.6092, -0.1047],
        [ 0.2121, -0.0997, -0.3504,  ..., -0.0315, -0.0804, -0.0994]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1782,  0.1593,  0.4505,  ...,  0.3956, -0.2527, -0.1428],
        [-0.4770,  0.2457,  0.1796,  ...,  0.1075,  0.0525, -0.1166],
        [-0.0325,  0.0029,  0.2620,  ...,  0.6440,  0.2343,  0.4092],
        ...,
        [ 0.3554,  0.1586, -0.1154,  ...,  0.3968, -0.2212,  0.0627],
        [-0.0311, -0.0334, -0.0052,  ...,  0.2411, -0.4357,  0.5295],
        [-0.2876,  0.3109, -0.2913,  ...,  0.0064,  0.0754,  0.1752]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.2294, 0.2282, 0.2305,  ..., 0.2305, 0.1807, 0.2635], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.1276, -0.1427,  0.0006,  ..., -0.0309, -0.0609, -0.0128],
        [ 0.1189,  0.0186, -0.0693,  ..., -0.0953, -0.0466, -0.0186],
        [ 0.0523,  0.0962,  0.0851,  ..., -0.0359,  0.0393, -0.0167],
        ...,
        [-0.0536, -0.0329,  0.0339,  ...,  0.0392, -0.0646,  0.0695],
        [ 0.0642,  0.0605,  0.0522,  ..., -0.0301,  0.0338,  0.0660],
        [ 0.0352, -0.0558,  0.0696,  ..., -0.0126, -0.0834, -0.0577]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1180, -0.1986, -0.0719,  ...,  0.0347,  0.2008, -0.0864],
        [ 0.0952,  0.4581,  0.1093,  ...,  0.1242, -0.0813, -0.0890],
        [ 0.1181, -0.0282,  0.2471,  ...,  0.2522,  0.3288,  0.0262],
        ...,
        [ 0.1264, -0.0135,  0.0449,  ..., -0.0530,  0.3325,  0.0614],
        [-0.2530,  0.0022, -0.0011,  ..., -0.2533, -0.1990, -0.1171],
        [ 0.0564, -0.0744, -0.1049,  ..., -0.2278,  0.0127, -0.1235]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.5116,  0.6095, -0.5631,  ...,  0.4092, -0.8412, -0.0064],
        [-0.1712,  0.3258, -0.1802,  ...,  0.9267,  0.2434,  0.4619],
        [ 0.0089,  0.2403,  0.6610,  ...,  1.7142,  0.5375,  0.0317],
        ...,
        [-0.0798, -0.1781, -0.3796,  ..., -0.4339, -0.1339,  0.3110],
        [-0.8814, -0.1316, -1.1257,  ..., -0.3955, -1.0864, -0.7173],
        [ 0.5727, -0.2390,  0.4667,  ...,  1.0632,  0.4963, -0.2129]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 1.7135,  3.8380, -2.6523,  ..., -0.7154, -0.3215, -0.1082],
        [-1.2288,  0.0951, -1.9631,  ..., -0.3462, -1.1982, -0.6106],
        [ 1.2525,  0.5383, -0.3817,  ..., -1.0700,  0.3258, -0.5983],
        ...,
        [ 1.2328, -0.8091,  0.6681,  ..., -0.1252,  0.1450,  1.1767],
        [-0.6297, -0.8704,  1.2809,  ..., -0.2287,  0.0722, -0.9306],
        [ 0.5459, -1.9060, -1.2948,  ..., -0.9005,  0.3789, -1.4101]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1427, 0.1544, 0.1239,  ..., 0.0939, 0.1138, 0.1386], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.1993,  0.2604, -0.2535,  ...,  0.3120,  0.4333, -0.0982],
        [ 0.3434,  0.4375, -0.5399,  ..., -0.0813,  0.1070, -0.2742],
        [-0.2646,  0.0296,  0.2048,  ..., -0.3274,  0.4359,  0.5073],
        ...,
        [-0.1151,  0.0597,  0.3334,  ...,  0.2567, -0.1773, -0.1595],
        [ 0.3380, -0.5024, -0.4156,  ...,  0.1767,  0.3242,  0.1550],
        [-0.1813, -0.0975,  0.0080,  ...,  0.0378, -0.1066, -0.0893]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.7414, -0.5195, -0.3591,  ..., -0.7358,  0.0965, -0.1873],
        [ 0.2408,  0.1636, -0.1045,  ...,  0.1721, -0.6865,  0.1944],
        [ 0.0727, -0.6169, -0.7796,  ...,  0.3420,  0.3019,  0.4412],
        ...,
        [-0.6075, -0.2431, -0.0707,  ...,  1.4163,  0.3386, -0.1313],
        [ 0.9421, -0.5123, -0.2810,  ..., -0.9093,  0.1325,  0.4669],
        [ 0.6322, -0.1317,  0.0049,  ...,  0.3472, -0.0298, -0.7130]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.2562,  0.1017, -0.3700,  ...,  0.0710,  0.2994, -0.0775],
        [-0.2004, -0.2603, -0.0225,  ..., -0.1340, -0.1427, -0.3519],
        [-0.1073, -0.0645,  0.0726,  ...,  0.2102,  0.3191,  0.0545],
        ...,
        [-0.0972, -0.1650,  0.4695,  ..., -0.1034,  0.1430,  0.3171],
        [ 0.2793,  0.2281,  0.1058,  ..., -0.3787, -0.1323, -0.2522],
        [ 0.0591, -0.2865,  0.0658,  ...,  0.2430,  0.0266,  0.2200]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.2855, 0.2796, 0.2470,  ..., 0.2666, 0.2642, 0.2299], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[-0.0805, -0.0913,  0.0175,  ...,  0.0199,  0.0065,  0.0431],
        [ 0.0076,  0.1492,  0.0539,  ..., -0.0513,  0.0242,  0.0238],
        [ 0.0421, -0.0002, -0.0261,  ...,  0.0303, -0.0381, -0.0127],
        ...,
        [-0.0319, -0.0087, -0.0502,  ..., -0.0307, -0.1263,  0.1179],
        [-0.0121, -0.0399, -0.0095,  ..., -0.0503,  0.0041,  0.0340],
        [-0.0449,  0.0774, -0.0383,  ..., -0.0495, -0.0087, -0.0475]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.1321, -0.0292,  0.0907,  ..., -0.0552,  0.1094, -0.0192],
        [-0.0142, -0.2271, -0.0111,  ...,  0.0354,  0.0005,  0.0493],
        [ 0.1310,  0.0887, -0.0687,  ..., -0.1802, -0.0110, -0.2185],
        ...,
        [ 0.0026, -0.0839, -0.1120,  ..., -0.0831, -0.0400, -0.0223],
        [ 0.0769,  0.1374,  0.2118,  ...,  0.1133, -0.0877, -0.3143],
        [-0.1370,  0.0369,  0.0794,  ..., -0.0099,  0.0421, -0.1456]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0018, -0.5465, -0.4072,  ..., -1.5510,  0.8466,  0.2418],
        [ 0.2240,  0.7699, -0.3570,  ...,  0.3180,  0.0525,  0.7328],
        [ 1.2197, -0.3681,  0.0137,  ..., -0.2988, -0.0935,  0.7294],
        ...,
        [-0.2582, -0.4749,  0.1073,  ..., -1.2317, -1.2940, -1.0855],
        [ 0.3543, -0.2584,  0.1214,  ..., -0.2028,  0.5534, -0.2258],
        [-0.5196, -0.3596, -0.7594,  ...,  0.7671, -0.5869,  0.1517]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-1.0232,  0.6950, -1.9791,  ...,  2.0967,  0.2306, -1.4733],
        [-1.0376, -0.0941,  1.2199,  ..., -0.8670, -0.8324, -1.0786],
        [-0.6776, -0.7308, -0.0360,  ..., -1.1271,  1.5589, -0.0682],
        ...,
        [ 0.1306, -0.6288, -1.1920,  ..., -0.0175, -1.4862,  0.9176],
        [-0.8768, -0.5463, -0.1574,  ..., -0.9485,  2.0887, -0.9220],
        [-0.7826, -0.1444, -1.2836,  ..., -2.1502, -1.0948,  1.0031]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1520, 0.1088, 0.1451,  ..., 0.1366, 0.1744, 0.1249], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[-0.2062, -0.2904, -0.2301,  ..., -0.2212,  0.1345, -0.4788],
        [ 0.1040, -0.1853,  0.0366,  ...,  0.0500,  0.0277,  0.0500],
        [-0.0785,  0.0884, -0.1886,  ...,  0.2319, -0.1261, -0.2594],
        ...,
        [ 0.1055, -0.2745, -0.3189,  ..., -0.1778,  0.3139,  0.2554],
        [ 0.2875,  0.0237,  0.1872,  ..., -0.1184,  0.1479,  0.2387],
        [ 0.1896,  0.2996, -0.1831,  ...,  0.0407, -0.1218,  0.0633]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.7146,  0.0647,  0.8174,  ..., -0.3913, -0.2337,  0.5820],
        [-0.4101, -0.7741, -0.7172,  ..., -0.6382,  0.0416, -0.2746],
        [-0.5334, -0.0030, -0.5524,  ..., -0.3482,  0.0528, -0.8476],
        ...,
        [-0.1314,  0.0551, -0.1294,  ..., -0.3498, -0.0990, -0.6694],
        [-0.1093, -0.2959,  0.0245,  ...,  0.2867, -0.4898,  0.6693],
        [ 0.1602, -0.0936, -0.3012,  ..., -0.0407, -0.4539,  0.7652]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.1864,  0.1729,  0.4431,  ...,  0.2863,  0.4689, -0.4054],
        [-0.0323,  0.4270, -0.0535,  ...,  0.3542, -0.1821, -0.3075],
        [-0.2271, -0.5569, -0.1246,  ..., -0.0009,  0.2307, -0.1488],
        ...,
        [ 0.4407, -0.1904,  0.0637,  ..., -0.1452,  0.2995, -0.0700],
        [-0.2923, -0.1130, -0.1031,  ..., -0.6558, -0.1590,  0.1511],
        [ 0.4852,  0.0285,  0.0818,  ..., -0.1192, -0.5484, -0.2566]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.3765, 0.4078, 0.4467,  ..., 0.4712, 0.4193, 0.4027], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0.0905, 0.1211, 0.0987,  ..., 0.1089, 0.1354, 0.1249], device='cuda:0',
       requires_grad=True)]
ipdb> non_galore_params
[]
ipdb> param_groups = [
            {'params': non_galore_params},
            {'params': galore_params, 'rank': 128, 'update_proj_gap': 200, 'scale': 0.25, 'proj_type': 's
td'}
        ]
ipdb>
ipdb> param_groups
[{'params': []}, {'params': [Parameter containing:
tensor([[ 3.8438,  9.0625, -2.2812,  ...,  4.1250,  0.4355, -1.9844],
        [-0.8695, -0.5950, -0.0154,  ...,  4.7008, -2.0263, -0.7167],
        [-0.0938,  0.1934, -0.6406,  ..., -0.1377,  0.1660, -0.3770],
        ...,
        [ 1.1328, -1.8828,  0.5469,  ...,  0.8008, -1.5469,  1.0000],
        [ 0.6875,  0.6133, -0.7266,  ...,  1.1094,  0.0471,  0.1006],
        [ 0.2891, -0.4824, -0.6484,  ...,  0.3809, -0.7109, -0.4941]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0079, -0.0251, -0.0261,  ...,  0.0611, -0.0046, -0.0195],
        [-0.0728, -0.0338,  0.0559,  ...,  0.0331, -0.0018,  0.0204],
        [-0.0359, -0.0177, -0.0010,  ..., -0.0371,  0.0472,  0.0320],
        ...,
        [ 0.0435, -0.1160, -0.0776,  ...,  0.0377,  0.0498,  0.0896],
        [-0.0199,  0.0057,  0.0258,  ..., -0.0094, -0.0008, -0.0115],
        [-0.0378,  0.0339,  0.0037,  ..., -0.0387, -0.0010, -0.0798]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.5980,  0.2721, -0.0320,  ..., -0.1216, -0.1892, -0.0615],
        [-0.2248, -0.3601, -0.0792,  ...,  0.1644,  0.0836,  0.3999],
        [ 0.0788,  0.4559, -0.1718,  ..., -0.1527,  0.1403, -0.1420],
        ...,
        [-0.1711, -0.0327, -0.0470,  ..., -0.1517,  0.1018, -0.0684],
        [-0.0690,  0.3074,  0.1069,  ..., -0.2031,  0.0406, -0.4556],
        [ 0.0345, -0.0546,  0.2119,  ...,  0.1605,  0.1390, -0.2263]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.1987,  0.0266,  0.2064,  ..., -0.0324,  0.0229, -0.0549],
        [ 0.1381,  0.0083,  0.0763,  ...,  0.0608, -0.0219,  0.0424],
        [ 0.2772,  0.1234, -0.0281,  ...,  0.0249, -0.0461, -0.1847],
        ...,
        [-0.2019, -0.0695,  0.0181,  ..., -0.0866,  0.0024,  0.0352],
        [ 0.1895,  0.1527, -0.0995,  ..., -0.1696, -0.0114, -0.0035],
        [ 0.1276, -0.0556,  0.2588,  ...,  0.1131,  0.0649,  0.1642]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0037,  1.2439,  0.5008,  ...,  0.0329, -0.4509, -0.0684],
        [-0.2428,  0.4730,  1.9898,  ...,  0.2571,  0.6736,  0.3358],
        [-0.0554, -0.1376,  0.1555,  ...,  0.5855,  0.5251, -0.0349],
        ...,
        [-0.1433,  0.1764,  0.0505,  ..., -0.3510,  0.4260, -0.5362],
        [-0.0450, -0.1471,  0.3593,  ..., -1.4837, -1.0851, -0.1124],
        [-1.4024, -0.8895,  0.3053,  ...,  1.3001, -0.1562, -0.8578]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-4.2309e+00,  1.6153e+00, -1.3038e+01, -1.5700e+01,  7.9748e-01,
         -1.2844e+00],
        [ 6.3908e-01,  8.4206e+00, -1.2446e-01,  4.6779e+00,  5.6668e+00,
         -1.9090e+00],
        [ 1.1599e+00,  5.7052e+00,  1.1536e+00,  5.2650e+00,  7.1201e+00,
         -2.1244e+00],
        [ 1.5650e+00,  4.4063e+00,  1.5995e+00,  5.8246e+00,  5.8733e+00,
         -2.0347e+00],
        [ 1.7204e+00,  3.7666e+00,  1.9265e+00,  5.9250e+00,  4.7573e+00,
         -2.1265e+00],
        [ 1.7660e+00,  2.9445e+00,  2.1585e+00,  5.7996e+00,  3.9579e+00,
         -2.1767e+00],
        [ 1.9944e+00,  2.3991e+00,  2.0391e+00,  5.7447e+00,  3.3524e+00,
         -1.9825e+00],
        [ 1.9583e+00,  2.0140e+00,  2.1316e+00,  5.5266e+00,  3.0079e+00,
         -2.1285e+00],
        [ 2.1049e+00,  1.2133e+00,  2.2307e+00,  5.2456e+00,  1.9666e+00,
         -2.0910e+00],
        [ 2.1837e+00,  8.1519e-01,  2.3201e+00,  4.7687e+00,  1.1426e+00,
         -2.1518e+00],
        [ 2.1703e+00,  7.6994e-02,  2.2104e+00,  4.1734e+00,  3.4566e-01,
         -2.3845e+00],
        [ 2.0440e+00, -5.2099e-01,  2.0336e+00,  3.6024e+00, -7.2328e-01,
         -2.3770e+00],
        [ 2.0249e+00, -7.8061e-01,  2.0129e+00,  3.0395e+00, -1.4060e+00,
         -2.4175e+00],
        [ 2.0064e+00, -9.5433e-01,  2.1333e+00,  2.2697e+00, -1.9674e+00,
         -2.3101e+00],
        [ 1.9288e+00, -1.2022e+00,  2.1129e+00,  1.8254e+00, -2.1966e+00,
         -2.5893e+00],
        [ 1.7396e+00, -1.5379e+00,  1.5839e+00,  5.2578e-01, -2.8936e+00,
         -3.0589e+00],
        [-1.1719e-02, -1.3672e-01, -2.3535e-01,  2.7930e-01, -2.8516e-01,
          3.7109e-02],
        [ 9.5378e-01,  2.0980e+00,  2.1349e+00, -9.8933e+00,  1.3676e+00,
          7.7018e+00],
        [ 1.1364e+00,  1.6559e+00,  2.9881e+00, -1.6587e+01,  1.2355e-01,
          6.6389e+00],
        [ 1.2276e+00,  9.6252e-01,  3.4523e+00, -1.8352e+01, -1.3968e+00,
          5.8562e+00],
        [ 1.5300e+00,  9.7154e-01,  3.8207e+00, -1.8144e+01, -1.8928e+00,
          5.2618e+00],
        [ 1.6067e+00,  2.8280e-01,  3.9230e+00, -1.7489e+01, -2.0077e+00,
          4.6776e+00],
        [ 1.9064e+00,  1.9483e-01,  3.9404e+00, -1.7639e+01, -2.3485e+00,
          4.3965e+00],
        [ 1.8513e+00,  4.5089e-04,  3.9516e+00, -1.7022e+01, -2.1136e+00,
          4.0633e+00],
        [ 1.9460e+00, -9.0100e-02,  4.1352e+00, -1.7971e+01, -2.5847e+00,
          3.2442e+00],
        [ 1.9890e+00, -4.0197e-01,  4.0190e+00, -1.7992e+01, -2.4464e+00,
          2.5247e+00],
        [ 1.9566e+00, -4.5094e-01,  3.9461e+00, -1.7748e+01, -2.6052e+00,
          1.6473e+00],
        [ 1.9397e+00, -7.0789e-01,  3.7806e+00, -1.7832e+01, -2.5330e+00,
          7.6609e-01],
        [ 1.9379e+00, -9.2002e-01,  3.6160e+00, -1.8558e+01, -2.2937e+00,
          1.4994e-02],
        [ 1.9800e+00, -7.7982e-01,  3.4139e+00, -1.8294e+01, -2.3604e+00,
         -6.6284e-01],
        [ 1.8616e+00, -8.7435e-01,  3.3633e+00, -1.8476e+01, -2.5936e+00,
         -1.5231e+00],
        [ 2.1602e+00, -1.0777e+00,  2.9937e+00, -5.9751e+01, -2.3467e+00,
         -2.6298e+00]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.0608, 0.0218, 0.0188,  ..., 0.0714, 0.0025, 0.0130], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[-0.1397,  0.0422, -0.4375,  ..., -0.2491, -0.2788, -0.0043],
        [ 0.1737,  0.3133, -0.0794,  ..., -0.0079, -0.2133, -0.1048],
        [ 0.2309, -0.4914, -0.3673,  ...,  0.2073,  0.2895, -0.0749],
        ...,
        [ 0.0106,  0.0988, -0.2365,  ...,  0.0572, -0.0891, -0.3173],
        [ 0.5298, -0.3070, -0.1625,  ...,  0.0360,  0.1472,  0.3767],
        [-0.1640, -0.2268, -0.2775,  ...,  0.0049,  0.0442,  0.0878]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0391, -0.2808,  0.3306,  ..., -0.4856,  0.0086,  0.3608],
        [ 0.0171,  0.0236,  0.4510,  ..., -0.0350,  0.3728, -0.2773],
        [-0.0516,  0.1213,  0.1137,  ..., -0.0529,  0.3732, -0.4751],
        ...,
        [-0.3644,  0.1763,  0.3878,  ...,  0.1346, -0.3301, -0.0969],
        [ 0.0984,  0.0989,  0.4136,  ..., -0.2317, -0.1574, -0.5709],
        [-0.3196, -0.4277,  0.0703,  ...,  0.0132, -0.0616,  0.2372]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0053,  0.0456,  0.0199,  ...,  0.0529,  0.0359, -0.1429],
        [ 0.1983,  0.2438, -0.1849,  ...,  0.1449, -0.2306,  0.1151],
        [-0.0860,  0.0434,  0.0154,  ..., -0.4979, -0.0156, -0.1391],
        ...,
        [ 0.0696,  0.0488, -0.2951,  ..., -0.0060,  0.3027,  0.2064],
        [-0.2690, -0.2718, -0.1339,  ..., -0.1609, -0.0407,  0.1970],
        [ 0.0726, -0.2205,  0.1233,  ..., -0.0172,  0.0808, -0.0967]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.0619, 0.0179, 0.0301,  ..., 0.0194, 0.0898, 0.1412], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[-0.0440,  0.0276,  0.0059,  ..., -0.0257, -0.0239, -0.0211],
        [ 0.1450,  0.0087, -0.0181,  ..., -0.0562, -0.0510,  0.0267],
        [-0.0167,  0.0747,  0.1216,  ..., -0.0163,  0.0156, -0.0080],
        ...,
        [-0.0427,  0.0635,  0.1099,  ...,  0.0386,  0.0718,  0.0859],
        [-0.0622, -0.0758, -0.0023,  ...,  0.0057,  0.0315,  0.0309],
        [-0.0687, -0.0575, -0.0465,  ..., -0.0142, -0.0193,  0.0134]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.3702, -0.5768,  0.2267,  ..., -0.1950,  0.6006,  0.1556],
        [ 0.6674,  0.0375,  0.7528,  ..., -0.3186, -0.6068,  0.4323],
        [-0.2424,  0.6395,  0.3377,  ..., -0.1836, -0.2273,  0.0551],
        ...,
        [-0.2116,  0.1611,  0.1196,  ...,  0.4408,  0.0478, -0.2224],
        [-0.4166, -0.4397,  0.3338,  ...,  0.5294, -0.1030, -0.2981],
        [-0.4127,  0.5405, -0.4011,  ..., -0.2770, -0.0619, -0.1461]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0053, -0.0624, -0.1542,  ...,  0.0224,  0.0665,  0.0311],
        [ 0.1535, -0.1012, -0.0290,  ..., -0.1845, -0.0055,  0.0995],
        [-0.0090,  0.0388, -0.0734,  ..., -0.2449, -0.0838,  0.0635],
        ...,
        [-0.0884, -0.1664,  0.1379,  ..., -0.1672, -0.1637, -0.0575],
        [-0.0346,  0.1210,  0.1889,  ..., -0.1969,  0.1913,  0.1828],
        [-0.1269, -0.0665,  0.3571,  ...,  0.0025, -0.3803,  0.0573]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.6577, -0.5869,  0.7730,  ...,  0.7352, -0.2560,  0.3885],
        [ 0.1537, -0.5741, -0.5266,  ..., -0.2525,  0.7439, -0.2109],
        [-0.1728, -0.3497,  1.2650,  ...,  1.5015, -0.5542,  0.8273],
        ...,
        [-0.0787,  0.5614,  0.6039,  ...,  1.0659,  0.1676, -0.0219],
        [ 0.3328, -0.0703,  0.2765,  ..., -0.5405, -0.1742, -0.3054],
        [-0.2333, -0.2558,  0.0570,  ..., -0.2297, -0.1502, -0.2531]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.0685, 0.0685, 0.0465,  ..., 0.0603, 0.0609, 0.0637], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[-0.3077,  0.3665,  0.1219,  ..., -0.0691, -0.0701, -0.3514],
        [-0.0394, -0.1663,  0.5800,  ..., -0.2675, -0.1789,  0.0536],
        [ 0.0208, -0.4020, -0.5619,  ..., -0.0173, -0.5870, -0.1885],
        ...,
        [-0.3130,  0.4235, -0.1801,  ..., -0.0831,  0.2306, -0.2115],
        [-0.0174, -0.0282, -0.5955,  ..., -0.3613, -0.0677, -0.0121],
        [ 0.1449, -0.3571,  0.1242,  ..., -0.3979,  0.2272, -0.1819]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 1.4725e-01, -1.4346e-01,  1.7248e-01,  ...,  1.5726e-02,
         -1.4043e-01,  4.1496e-01],
        [-1.7536e-01, -4.3478e-01,  1.7851e-01,  ...,  1.8270e-01,
         -4.5173e-04,  2.0838e-01],
        [-2.0756e-01,  6.0627e-01,  1.0248e+00,  ..., -2.2377e-01,
          1.5206e-01, -3.2487e-01],
        ...,
        [-4.2879e-01, -2.4852e-02, -1.6033e-01,  ...,  3.6020e-01,
          3.1609e-01,  1.8409e-01],
        [-2.1628e-01, -4.5030e-01,  6.0395e-02,  ..., -2.1071e-01,
          1.5750e-01,  6.0242e-01],
        [-4.3440e-01, -2.4511e-01,  7.5537e-01,  ..., -8.5149e-01,
          2.6034e-01, -1.9835e-01]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1341, -0.0094,  0.1923,  ..., -0.0830, -0.1806, -0.0592],
        [ 0.4825, -0.2326,  0.2679,  ...,  0.1669,  0.3511,  0.0947],
        [-0.0751,  0.0342,  0.0880,  ...,  0.0079,  0.1785,  0.0725],
        ...,
        [ 0.3143, -0.3054, -0.1605,  ...,  0.2669,  0.2215,  0.2994],
        [-0.0361,  0.1354, -0.2338,  ..., -0.1057, -0.0409, -0.1406],
        [-0.1191,  0.1199, -0.1983,  ..., -0.2642,  0.2022,  0.4687]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1192, 0.0558, 0.0789,  ..., 0.0808, 0.0952, 0.1112], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.0929, -0.0369,  0.1904,  ..., -0.0249, -0.1360, -0.0835],
        [ 0.0354,  0.0726,  0.0414,  ...,  0.0017,  0.0029,  0.1163],
        [-0.0341,  0.1248,  0.0501,  ..., -0.0013,  0.0772,  0.1185],
        ...,
        [ 0.0692, -0.1346, -0.0015,  ..., -0.0383, -0.1356, -0.0785],
        [ 0.0867,  0.1524,  0.0650,  ..., -0.0122,  0.0145, -0.0762],
        [-0.0441,  0.0283,  0.0946,  ...,  0.0377, -0.0407, -0.1512]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 1.0138, -0.2226, -0.0638,  ..., -0.0079,  0.1676, -0.0481],
        [-0.8652,  0.2013,  0.0994,  ...,  0.1280,  0.3469, -0.1809],
        [-0.2534,  0.0852,  0.5530,  ..., -0.2794, -0.1821,  0.7075],
        ...,
        [-0.4271, -0.3481, -0.2514,  ..., -0.3858,  0.1159, -0.1637],
        [-0.1832,  0.3284,  0.1542,  ...,  0.0097,  0.4063,  0.5910],
        [ 0.1433, -0.3311, -0.1650,  ...,  0.0088,  0.1733,  0.0946]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1622,  0.2433,  0.0534,  ..., -0.0898, -0.1683, -0.0008],
        [ 0.0874, -0.2726,  0.0767,  ..., -0.0162, -0.0782,  0.1309],
        [ 0.1881,  0.0209, -0.3028,  ..., -0.2957, -0.1876, -0.3031],
        ...,
        [ 0.1202,  0.2107, -0.1000,  ..., -0.0115,  0.1842,  0.2957],
        [ 0.0909,  0.0656,  0.2058,  ..., -0.4175,  0.0451, -0.1320],
        [ 0.1117, -0.2198,  0.2820,  ..., -0.1715, -0.0066,  0.0516]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.2301, -0.4128, -1.0940,  ...,  0.2657,  0.5096, -0.3635],
        [ 0.0640, -0.6514, -0.1125,  ..., -0.0672,  0.0943,  0.2533],
        [ 0.2869,  1.0756,  0.2002,  ..., -0.4560,  0.3645,  0.3857],
        ...,
        [-0.2772,  0.0778, -0.1978,  ...,  0.5042,  0.7650,  0.0355],
        [-0.0800,  0.3292,  0.8133,  ..., -0.1447, -0.2065, -0.6091],
        [ 0.3517,  0.1087,  0.6453,  ..., -0.3793, -0.4978,  0.1878]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1013, 0.0173, 0.0656,  ..., 0.0421, 0.0503, 0.0559], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.2947,  0.1186, -0.0892,  ..., -0.4399, -0.4043, -0.2719],
        [-0.1121, -0.0442, -0.0240,  ...,  0.0793, -0.2808, -0.0324],
        [ 0.0235,  0.0357, -0.0575,  ...,  0.0551, -0.2504, -0.3019],
        ...,
        [ 0.1117, -0.0070,  0.1290,  ...,  0.1160, -0.7426, -0.1977],
        [-0.0493,  0.0540,  0.0848,  ...,  0.0853, -0.4767,  0.2998],
        [-0.3951, -0.1045,  0.0772,  ..., -0.0255, -0.0068,  0.1007]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1134, -0.1656,  0.2550,  ...,  0.2783,  0.1826,  0.2404],
        [-0.3634,  0.0593, -0.3669,  ...,  0.0575, -0.1511, -0.1601],
        [-0.4658,  0.0221, -0.1767,  ...,  0.2997,  0.4346, -0.2116],
        ...,
        [-0.0044,  0.0790, -0.0662,  ...,  0.0659, -0.1674,  0.1331],
        [-0.1422, -0.0458, -0.0547,  ...,  0.0060, -0.5278,  0.5359],
        [ 0.0753,  0.1837,  0.4542,  ..., -0.0416,  0.2267, -0.1618]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1993, -0.0010, -0.0370,  ..., -0.0672,  0.0828, -0.1700],
        [-0.3438, -0.1306,  0.2470,  ..., -0.1484,  0.0541,  0.2119],
        [-0.1821, -0.2240,  0.0076,  ...,  0.0045, -0.4310,  0.2385],
        ...,
        [-0.0492, -0.0204, -0.2250,  ..., -0.1345, -0.0014, -0.1577],
        [-0.1241, -0.1761,  0.0601,  ...,  0.3014, -0.0350, -0.2514],
        [ 0.3207,  0.1528,  0.0046,  ...,  0.1183, -0.3445,  0.0368]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1180, 0.0961, 0.0674,  ..., 0.0824, 0.1147, 0.1086], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.0380, -0.0814,  0.0035,  ..., -0.1058,  0.0251, -0.1466],
        [ 0.0316,  0.0785, -0.0734,  ..., -0.0022,  0.0731,  0.0746],
        [-0.0265, -0.0189,  0.0015,  ..., -0.0440, -0.2243,  0.1634],
        ...,
        [ 0.0798, -0.0229,  0.0210,  ..., -0.0135, -0.1157, -0.0391],
        [-0.0081, -0.0074,  0.0082,  ...,  0.0329, -0.0050, -0.0774],
        [ 0.1146,  0.0639,  0.0172,  ..., -0.0722,  0.0319,  0.0060]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0310, -0.7006, -0.1413,  ..., -0.3196, -0.1400, -0.0459],
        [ 0.0372,  0.5714, -0.5389,  ..., -0.6020, -0.2716, -0.1748],
        [-0.2660,  0.0525,  0.1761,  ...,  0.1069, -1.5340,  1.0569],
        ...,
        [ 0.0975,  0.1598, -0.1562,  ...,  0.0403,  0.2137,  0.3262],
        [ 0.4079,  0.1655,  0.0422,  ..., -0.0539, -0.3031, -0.2109],
        [-0.1048, -0.6289,  0.0526,  ..., -0.2033, -0.2922,  0.0551]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.4436, -0.5181,  0.0720,  ..., -0.0097,  0.2415,  0.0798],
        [ 0.2603, -0.1437, -0.1345,  ...,  0.0463, -0.0572, -0.1635],
        [-0.2376, -0.0411, -0.1074,  ..., -0.1678,  0.0304, -0.0873],
        ...,
        [-0.2361, -0.3749,  0.0639,  ..., -0.0751,  0.2202,  0.0069],
        [ 0.2357, -0.2865, -0.0044,  ...,  0.0248,  0.2122,  0.0549],
        [-0.0359,  0.0633, -0.4085,  ...,  0.0032, -0.2847,  0.0538]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0771, -0.2948, -0.2313,  ...,  0.3486,  0.1269,  0.2600],
        [ 0.2868, -0.5770, -0.3988,  ...,  0.3126, -0.3409,  0.6619],
        [ 0.3698,  0.2709,  0.3777,  ...,  0.1369,  0.9132, -0.3436],
        ...,
        [ 0.2995, -0.0620,  0.6924,  ..., -0.0320, -0.6853, -0.5866],
        [-0.8262,  0.0610, -0.7149,  ..., -0.6445, -0.7607, -0.0584],
        [-0.8800,  0.3750, -0.0777,  ...,  0.3443,  0.4470, -1.2594]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.0866, 0.0789, 0.0322,  ..., 0.0623, 0.0722, 0.0620], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.3881,  0.0137,  0.0695,  ..., -0.1073,  0.1260, -0.4855],
        [-0.2872,  0.0213,  0.3225,  ..., -0.0959, -0.1769,  0.1162],
        [-0.0772, -0.3068, -0.1084,  ...,  0.3366,  0.2910, -0.0711],
        ...,
        [-0.2413,  0.1065,  0.3243,  ..., -0.3816,  0.0130, -0.2888],
        [ 0.0674,  0.4518,  0.3216,  ..., -0.5117,  0.0183,  0.2426],
        [ 0.2490,  0.0364,  0.1529,  ..., -0.2930, -0.0503, -0.2532]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.2044, -0.5168,  0.3675,  ...,  0.2017,  0.6489,  0.1529],
        [-0.3255,  0.2211,  0.1574,  ..., -0.2290, -0.4853,  0.2650],
        [-0.1283,  0.4688, -0.1102,  ...,  0.2262,  0.6126,  0.6554],
        ...,
        [-0.0669, -0.2630, -0.4527,  ...,  0.4631, -0.1234,  0.0368],
        [-0.0992, -0.1162,  0.0774,  ...,  0.2143,  0.0330, -0.5835],
        [-0.3231,  0.5341, -0.6928,  ..., -0.2434, -0.6233,  0.5682]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0626, -0.0366,  0.1248,  ..., -0.1700,  0.1061,  0.0434],
        [-0.3180,  0.1903,  0.0689,  ...,  0.3957, -0.0005, -0.0178],
        [-0.1232, -0.1860,  0.3665,  ..., -0.1020, -0.1129, -0.0858],
        ...,
        [ 0.1533,  0.2967,  0.3078,  ...,  0.3050,  0.1720,  0.0731],
        [ 0.3970, -0.0802,  0.0324,  ..., -0.0133, -0.2683,  0.0046],
        [-0.3935,  0.0082,  0.1086,  ...,  0.0405,  0.4289, -0.0582]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1099, 0.0835, 0.0922,  ..., 0.1185, 0.1269, 0.1260], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[-0.0205,  0.0146,  0.0191,  ...,  0.0127, -0.0558, -0.1150],
        [-0.0680, -0.1110, -0.0524,  ...,  0.0467, -0.1622, -0.0200],
        [ 0.0556,  0.1349,  0.1033,  ...,  0.0586,  0.0417, -0.0844],
        ...,
        [ 0.0318,  0.0603, -0.0861,  ..., -0.0290,  0.0792, -0.0237],
        [ 0.0289, -0.0919, -0.0679,  ..., -0.0597,  0.0267, -0.0077],
        [ 0.0205, -0.0675,  0.0257,  ...,  0.0489,  0.0113,  0.0304]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.2815,  0.2141,  0.0300,  ..., -0.1532, -0.0280,  0.0310],
        [ 0.7852,  0.1869, -0.0690,  ..., -0.1693, -0.4297,  0.4763],
        [ 0.2203, -0.6133,  0.6340,  ...,  0.1706, -0.2978,  0.3992],
        ...,
        [ 0.0451, -0.2934, -0.4061,  ...,  0.1911, -0.2890,  0.0990],
        [-0.2018, -0.0150, -0.1483,  ...,  0.3990,  0.2267,  0.0211],
        [ 0.1733, -0.1294, -0.2575,  ..., -0.0427, -0.1472,  0.3562]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.1165, -0.2055,  0.2140,  ..., -0.0379,  0.3787,  0.0238],
        [-0.2625,  0.2199,  0.0887,  ..., -0.1345,  0.1003,  0.2019],
        [ 0.1039,  0.1419, -0.0642,  ...,  0.2207, -0.0107,  0.1460],
        ...,
        [ 0.2114, -0.3113,  0.0840,  ..., -0.0099, -0.3348,  0.0865],
        [-0.0492, -0.0953, -0.0171,  ...,  0.0585, -0.1173,  0.3437],
        [ 0.0393, -0.0519,  0.2907,  ...,  0.1290, -0.1214,  0.3218]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.2949, -0.6845,  0.4292,  ..., -0.4868, -0.8840,  0.0226],
        [ 0.6250,  0.5312,  1.0618,  ...,  0.1542,  0.0447, -0.3049],
        [-0.1736, -0.6488, -0.1850,  ...,  0.1860, -0.3021, -0.4834],
        ...,
        [ 0.3822,  1.1267,  1.0838,  ..., -0.1488,  0.6613, -0.6914],
        [-0.2134, -0.1659,  0.3131,  ..., -0.4455, -0.5087,  0.2805],
        [-0.4538,  0.9375, -0.2535,  ...,  0.1052, -0.0378, -0.4545]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.0760, 0.0726, 0.0759,  ..., 0.0824, 0.0605, 0.0896], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.4381,  0.0027,  0.3167,  ...,  0.3023, -0.1354,  0.0338],
        [-0.0193, -0.5098, -0.3933,  ..., -0.0407, -0.4323,  0.0345],
        [-0.0404, -0.1894,  0.0898,  ..., -0.2019,  0.2569,  0.3414],
        ...,
        [-0.0837,  0.0351, -0.0545,  ..., -0.2150,  0.1587, -0.2431],
        [ 0.1071, -0.6832,  0.3763,  ..., -0.1777, -0.1594,  0.1087],
        [ 0.0535,  0.2830,  0.0377,  ...,  0.0102, -0.3701,  0.0427]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.2040, -0.0983,  0.3300,  ...,  0.5203, -0.1759, -0.0191],
        [ 0.2549,  0.0612,  0.4203,  ...,  0.3232,  0.3329, -0.0434],
        [-0.5784,  0.4072,  0.9561,  ...,  0.0386,  0.2984,  0.3381],
        ...,
        [-0.3907, -0.0371, -0.6803,  ...,  0.3392, -0.0080, -0.2989],
        [-0.0123,  0.2892, -0.1408,  ..., -0.4913, -0.9550,  0.9797],
        [ 0.2408,  0.0971, -0.3861,  ...,  0.1910, -0.0892,  0.6898]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0168,  0.1239,  0.3899,  ...,  0.0488, -0.0285,  0.2386],
        [ 0.0395, -0.2135, -0.2007,  ..., -0.6676, -0.4111, -0.4992],
        [-0.0869, -0.0318, -0.3209,  ...,  0.0848,  0.1196, -0.1329],
        ...,
        [ 0.3447,  0.0582,  0.1334,  ...,  0.4003,  0.1077, -0.1172],
        [ 0.0148,  0.0164, -0.3152,  ..., -0.0048,  0.3433, -0.0185],
        [ 0.0913, -0.3261, -0.1410,  ...,  0.2670, -0.3862,  0.0296]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1296, 0.1177, 0.0872,  ..., 0.1088, 0.1026, 0.0975], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[-2.8811e-02, -6.8848e-02,  1.3729e-01,  ..., -4.7740e-05,
         -6.9514e-03, -6.8797e-02],
        [-3.6593e-02, -6.2284e-02, -3.0115e-02,  ...,  9.0457e-02,
         -4.3945e-02,  8.3735e-02],
        [ 3.3449e-02, -1.5943e-03,  9.2322e-02,  ..., -5.7425e-03,
          6.4467e-02, -2.6198e-02],
        ...,
        [ 3.5647e-02,  4.9124e-02,  5.3420e-02,  ..., -1.4620e-01,
         -5.9230e-02,  1.0830e-02],
        [-7.5319e-02,  3.5325e-02,  5.0335e-03,  ..., -2.1547e-02,
         -5.4478e-02,  1.8241e-02],
        [ 7.0399e-02, -5.5645e-05, -8.9710e-02,  ..., -5.9600e-02,
         -1.0227e-01,  2.4987e-02]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.5696, -0.0118,  0.0682,  ...,  0.2691, -0.1676, -0.1314],
        [ 0.2095, -0.2777, -0.0160,  ...,  0.0067,  0.5963,  0.0906],
        [ 0.2628,  0.1012, -0.2395,  ..., -0.4167, -0.9272,  0.4841],
        ...,
        [-0.0291,  0.1134,  0.2098,  ..., -0.0855,  0.2379,  0.0536],
        [ 0.5115,  0.2496,  0.1260,  ..., -0.0962,  0.1212,  0.1355],
        [-0.2592,  0.2114, -0.0201,  ...,  0.0531, -0.0225,  0.1234]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 2.6888e-02,  1.8376e-02,  2.6170e-01,  ..., -4.4160e-02,
          2.1074e-01,  5.4419e-01],
        [-2.4404e-01,  6.0995e-01,  2.9240e-01,  ...,  5.5634e-04,
         -2.3070e-01, -2.4856e-02],
        [ 9.2567e-02,  7.4888e-02, -2.6100e-01,  ..., -3.1646e-01,
          9.5160e-03,  9.9722e-02],
        ...,
        [-9.0687e-02, -4.6487e-02, -3.6158e-01,  ...,  3.4683e-01,
         -3.9529e-01, -1.3732e-01],
        [-1.9481e-02, -4.4595e-01,  8.7863e-02,  ...,  5.5087e-02,
         -2.0575e-01,  1.8158e-02],
        [-2.1474e-01, -4.2546e-01, -3.3651e-01,  ..., -2.0306e-01,
         -3.4817e-01,  1.7744e-01]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.6383,  0.1512, -0.0718,  ...,  0.0635, -0.1840,  0.4764],
        [ 0.0272, -0.2005, -0.6440,  ...,  1.1236, -0.3441,  0.8794],
        [-0.5216, -0.0355,  0.8097,  ...,  0.1056,  0.0117, -0.4726],
        ...,
        [ 1.3600, -0.3371, -0.0264,  ..., -0.7911, -0.8088, -0.2999],
        [ 0.0904, -0.4089,  0.8554,  ..., -1.1053,  0.7398, -0.6254],
        [-1.2579, -0.4532, -0.3157,  ...,  0.7394, -0.6242, -0.1895]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.0824, 0.0300, 0.0478,  ..., 0.1134, 0.0636, 0.0793], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[-0.0631, -0.4779,  0.0749,  ...,  0.4592,  0.2046,  0.2202],
        [ 0.1078, -0.3611,  0.6047,  ...,  0.0313, -0.3726,  0.0758],
        [ 0.0860, -0.0393,  0.0429,  ..., -0.1696, -0.1506, -0.2694],
        ...,
        [-0.5416,  0.1975,  0.0629,  ...,  0.2636, -0.3487, -0.3276],
        [-0.2235, -0.0449,  0.0754,  ..., -0.3462,  0.2572, -0.1997],
        [-0.0879,  0.0422, -0.0260,  ..., -0.0709,  0.2451,  0.1706]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.2480,  0.4928,  0.3402,  ..., -0.0733,  0.0508,  0.3900],
        [-0.0590, -0.4363,  0.2240,  ...,  0.1027, -0.3809, -0.5053],
        [-1.3761,  0.4239, -0.4159,  ...,  0.3592, -0.2716, -0.1685],
        ...,
        [ 0.3141, -0.2144, -0.3221,  ...,  0.6036, -0.0576,  0.1749],
        [ 0.3000, -0.2915,  0.4192,  ..., -0.4038, -0.7353, -0.5208],
        [ 0.3268,  0.2393, -0.5874,  ...,  0.3292,  0.3112, -0.1879]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 1.0139e-01, -3.5622e-01, -5.2169e-01,  ...,  1.0069e-01,
          2.1868e-01, -5.9741e-04],
        [-1.7840e-01,  2.8909e-02,  2.0903e-01,  ...,  7.5645e-03,
          9.7767e-02, -5.4990e-01],
        [-1.2178e-02, -1.4469e-01,  3.8934e-02,  ...,  7.2647e-02,
          4.3879e-04, -4.5067e-01],
        ...,
        [ 1.9987e-01, -2.8075e-01, -1.0815e-01,  ...,  5.1615e-01,
          3.6678e-01,  2.3245e-01],
        [ 8.4184e-02,  4.5515e-01, -4.9028e-02,  ..., -5.1631e-02,
          2.1891e-01,  2.5145e-01],
        [-3.4218e-01,  4.6584e-01, -1.6024e-01,  ...,  7.4838e-02,
          3.3235e-01, -3.0575e-01]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1074, 0.1039, 0.0902,  ..., 0.1378, 0.1546, 0.1340], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 5.3613e-02, -5.3824e-02,  6.3186e-02,  ..., -7.2015e-02,
          1.7687e-03, -1.7407e-03],
        [-8.8331e-02,  2.3566e-02, -4.0941e-02,  ..., -5.4699e-02,
         -3.2533e-02,  1.2375e-01],
        [-1.5793e-01,  3.5672e-02,  7.9844e-02,  ..., -1.3804e-01,
          1.1863e-01,  1.3549e-02],
        ...,
        [ 4.6748e-02,  4.9771e-02,  8.0005e-02,  ..., -5.9585e-02,
         -5.5595e-02,  4.0643e-02],
        [-1.9238e-02, -3.4290e-02, -1.5687e-04,  ..., -2.2457e-02,
          5.2859e-02, -2.6867e-02],
        [ 4.4633e-02,  3.2794e-02, -6.1023e-02,  ..., -4.7559e-02,
         -1.4507e-02, -3.0495e-02]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0109, -0.3178, -0.0033,  ..., -0.4680,  0.1656, -0.2033],
        [-0.2603,  0.3726, -0.1104,  ..., -0.2805, -0.0886, -0.0079],
        [ 0.0293, -0.3837,  0.3675,  ...,  0.7461, -0.2759,  0.1272],
        ...,
        [-0.2248,  0.1532, -0.1966,  ..., -0.3271, -0.2946, -0.1856],
        [ 0.1535,  0.2292,  0.0295,  ...,  0.0128, -0.2862,  0.5315],
        [ 0.0711,  0.0205,  0.1816,  ..., -0.0649,  0.3558,  0.3410]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0572,  0.4688, -0.2918,  ...,  0.1257,  0.0799,  0.2528],
        [-0.3230,  0.3559, -0.1250,  ...,  0.0397, -0.2007,  0.1174],
        [-0.3170, -0.0768,  0.5749,  ..., -0.5142, -0.1652,  0.2295],
        ...,
        [-0.0058,  0.1800,  0.0115,  ..., -0.3106, -0.4688,  0.4927],
        [ 0.2665, -0.3065,  0.4775,  ...,  0.1766,  0.5556,  0.3142],
        [-0.1044,  0.0115,  0.3047,  ...,  0.3341, -0.2085,  0.7893]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-1.6229, -0.7989, -0.1762,  ...,  0.7302, -0.0056, -0.4107],
        [-0.8133,  0.1951,  0.7650,  ...,  0.0983, -0.8194, -0.4034],
        [ 0.0508, -0.0375, -0.5530,  ..., -1.0933, -0.8757, -0.2173],
        ...,
        [-0.0663,  0.3344, -0.2816,  ...,  0.5560,  0.4427,  0.5559],
        [-0.5000,  1.2333,  0.9080,  ...,  0.5852,  0.2781,  0.6077],
        [-0.8129, -0.2898, -0.5408,  ...,  0.2723,  0.2295, -0.0988]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.0737, 0.0949, 0.0527,  ..., 0.0787, 0.0452, 0.0988], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[-0.1441, -0.6989,  0.0203,  ..., -0.3199, -0.2050, -0.0984],
        [ 0.2917, -0.0128,  0.3315,  ..., -0.3744,  0.4178,  0.3169],
        [-0.1353,  0.0194, -0.2589,  ..., -0.2124, -0.1394,  0.1254],
        ...,
        [-0.2580, -0.1620, -0.0212,  ...,  0.0404, -0.2567, -0.0198],
        [ 0.2855, -0.1196, -0.0620,  ...,  0.2951, -0.1850,  0.7106],
        [ 0.1893, -0.2171, -0.4357,  ...,  0.0713,  0.0501, -0.1533]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.6357, -0.1994, -0.3425,  ..., -0.5515, -0.3147,  0.8501],
        [-0.7417,  0.4008, -0.8617,  ..., -0.2875,  0.8585,  0.7500],
        [ 0.3856, -0.4907,  0.1627,  ..., -0.0426, -0.4690, -0.0856],
        ...,
        [ 0.7029, -0.0394, -0.0613,  ..., -0.3636, -0.0075,  0.2635],
        [-0.5717,  0.5050,  0.7643,  ..., -0.6229,  0.0815, -0.1127],
        [ 0.7883,  0.4660, -0.4783,  ...,  0.6271, -0.2404,  0.2002]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0801,  0.4506,  0.0284,  ...,  0.3239,  0.0103, -0.3774],
        [-0.2287, -0.1287,  0.6161,  ...,  0.3847,  0.0053,  0.1072],
        [ 0.1642, -0.4020,  0.1451,  ..., -0.0462,  0.1173, -0.0022],
        ...,
        [ 0.0751, -0.1163,  0.4217,  ...,  0.3714,  0.0218, -0.0451],
        [ 0.1151,  0.3072, -0.0107,  ...,  0.0584, -0.1231,  0.3260],
        [ 0.3611, -0.0367,  0.2915,  ..., -0.3073,  0.2915,  0.0498]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1542, 0.1307, 0.1214,  ..., 0.1359, 0.1457, 0.1467], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.0299,  0.0141,  0.0450,  ..., -0.0111,  0.0408, -0.0405],
        [-0.0533, -0.0420, -0.0588,  ..., -0.0510, -0.0163,  0.0481],
        [ 0.0163, -0.1194, -0.0396,  ...,  0.0350,  0.0704,  0.0993],
        ...,
        [ 0.0254,  0.0954, -0.1116,  ...,  0.0216,  0.0240, -0.0394],
        [-0.0523,  0.0166, -0.1044,  ..., -0.0251,  0.1284, -0.0376],
        [ 0.1119, -0.0345,  0.0425,  ..., -0.1244, -0.0634, -0.1063]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0650, -0.2416,  0.3096,  ...,  0.0849,  0.3642, -0.2868],
        [-0.0065,  0.3962, -0.1026,  ...,  0.0722,  0.2544, -0.2903],
        [-0.0370, -0.2742,  0.0148,  ..., -0.0913,  0.2557,  0.0040],
        ...,
        [ 0.1495,  0.3908, -0.1205,  ...,  0.2065,  0.0075,  0.1839],
        [ 0.3768,  0.0400,  0.1184,  ..., -0.1817,  0.1518, -0.0810],
        [-0.2820,  0.1453, -0.0732,  ...,  0.1679,  0.1350, -0.1489]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1655, -0.1385, -0.4528,  ..., -0.0760,  0.6173,  0.6571],
        [-0.2924, -0.2485,  0.4310,  ...,  0.0925,  0.4615, -0.2199],
        [-0.6890,  0.4856, -0.0306,  ...,  0.0252,  0.3093,  0.7753],
        ...,
        [-0.2987, -0.9105,  0.0068,  ..., -0.0669,  0.1357, -0.1866],
        [ 0.5730,  0.1304, -0.0356,  ...,  0.3542, -0.2504,  0.5501],
        [-0.0836,  0.2835, -0.1224,  ...,  0.1000,  0.1610, -0.1313]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.6289,  0.2035, -0.1930,  ...,  1.5665,  1.1281, -0.6367],
        [-1.0038,  0.9949, -0.2226,  ..., -0.3668,  0.5547, -0.7030],
        [ 0.6625,  0.3239,  1.2193,  ...,  0.5539, -0.0802, -1.3021],
        ...,
        [-1.2168,  0.4132, -0.1640,  ..., -0.5716,  0.4474, -0.9060],
        [-0.2225, -0.0917, -1.2647,  ..., -0.0139, -0.3167, -1.0787],
        [-1.8028,  0.6774, -0.3207,  ...,  1.0618,  0.6614,  0.2591]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.0855, 0.0999, 0.0523,  ..., 0.0899, 0.0530, 0.1326], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.1253,  0.1114, -0.0479,  ..., -0.0152,  0.0755,  0.0052],
        [-0.3960, -0.2596, -0.1775,  ...,  0.3007, -0.4077,  0.5067],
        [-0.1731,  0.1564,  0.1930,  ...,  0.0721,  0.2071, -0.0501],
        ...,
        [ 0.1273, -0.0310,  0.2682,  ...,  0.6793, -0.1057,  0.0515],
        [ 0.3916, -0.0503,  0.0758,  ...,  0.0813, -0.1773, -0.1895],
        [-0.0697,  0.1386,  0.4689,  ..., -0.2309, -0.1424,  0.1817]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.3246, -0.4408,  0.3114,  ..., -0.5664,  0.2495,  0.4076],
        [ 0.7161, -0.2713,  0.2448,  ..., -0.2339,  0.6984,  0.5393],
        [ 0.4861,  0.2653,  0.0933,  ..., -0.4618, -0.0829, -0.1616],
        ...,
        [ 0.0622,  0.4587, -0.7578,  ...,  0.0296, -0.0691, -0.5779],
        [ 0.3184,  0.0437,  0.7975,  ...,  0.5444,  0.4549, -0.4066],
        [-0.0094, -1.3397,  0.2705,  ...,  0.3469, -0.2775,  0.7077]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.3898, -0.2491, -0.2620,  ..., -0.4365,  0.2724,  0.0874],
        [-0.1939, -0.1219, -0.3211,  ...,  0.4565, -0.3018, -0.5680],
        [-0.3549, -0.0848, -0.0908,  ..., -0.2742,  0.4007, -0.3513],
        ...,
        [ 0.4133, -0.0998,  0.1488,  ..., -0.0812,  0.1090,  0.0834],
        [ 0.0082,  0.6446, -0.2152,  ..., -0.1521,  0.1666, -0.0356],
        [-0.3114,  0.0879, -0.0057,  ...,  0.1024,  0.0960, -0.0427]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1569, 0.1411, 0.0913,  ..., 0.1594, 0.1120, 0.1515], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 8.6493e-02,  1.1864e-01, -4.7127e-02,  ...,  1.0400e-03,
         -5.9485e-05, -2.5289e-02],
        [ 5.2656e-02, -1.0736e-01,  3.9772e-03,  ..., -6.1616e-02,
         -4.7377e-02,  7.2044e-02],
        [-9.6736e-03,  4.6710e-02, -6.9292e-02,  ..., -9.5216e-02,
          6.3163e-02,  4.8108e-03],
        ...,
        [ 1.3032e-02,  3.6994e-02,  2.6077e-02,  ...,  2.1818e-02,
         -1.0377e-02,  2.8291e-02],
        [-7.8823e-03, -5.5021e-02, -2.2140e-02,  ..., -1.1071e-01,
         -1.3177e-02,  5.7225e-02],
        [ 8.0026e-02,  4.3949e-03,  7.7743e-02,  ..., -3.6224e-02,
         -2.3697e-02, -5.3692e-02]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.2798,  0.0813,  0.2118,  ...,  0.0982, -0.0074,  0.0439],
        [-0.3636,  0.0675, -0.2933,  ..., -0.1665,  0.6828,  0.2201],
        [-0.2880, -0.1682,  0.1961,  ..., -0.0322, -0.0826, -0.0628],
        ...,
        [ 0.0673,  0.0874, -0.0328,  ...,  0.0731,  0.3178, -0.0430],
        [-0.0087,  0.0148, -0.2120,  ...,  0.1693, -0.0599, -0.7099],
        [-0.3132, -0.2017, -0.0438,  ..., -0.0622,  0.0612, -0.2143]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.3505,  0.6262, -0.4424,  ...,  0.2246, -0.0524,  0.1840],
        [ 0.2866, -0.4179, -0.7077,  ..., -0.5903, -0.1015,  0.0459],
        [-0.7709,  0.3221, -0.5639,  ..., -0.4898, -0.3641, -0.3166],
        ...,
        [-0.1669, -0.0688, -0.0847,  ..., -0.0845, -0.8840,  0.3713],
        [-0.0337, -0.4713,  0.0445,  ..., -0.7061,  0.2692,  0.1070],
        [ 0.2038,  0.3147,  0.6953,  ..., -0.3917, -0.1026, -0.1711]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 1.2451, -0.8443,  0.4343,  ..., -0.1703, -0.4211,  0.6494],
        [ 0.2124, -0.7410,  1.2796,  ...,  0.1461, -0.7157,  0.8489],
        [-0.3484,  0.0041, -1.2870,  ...,  0.2090, -0.3942,  0.2705],
        ...,
        [ 0.3678, -0.2484, -0.1503,  ..., -0.2978,  0.4094, -0.1555],
        [ 1.7720,  1.5209, -0.6756,  ..., -0.2656,  0.6469, -1.6392],
        [-1.2195, -1.3076,  0.6422,  ..., -0.0501, -1.5321,  0.1757]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.0996, 0.1369, 0.1192,  ..., 0.1216, 0.1223, 0.1058], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.1100,  0.3739, -0.0676,  ...,  0.2458,  0.1458,  0.0560],
        [-0.0868,  0.0880, -0.2089,  ...,  0.0624, -0.1598, -0.1113],
        [-0.3942,  0.0527, -0.3513,  ..., -0.0639, -0.2992, -0.3435],
        ...,
        [ 0.0707, -0.1719, -0.0423,  ..., -0.0787,  0.3035,  0.3511],
        [-0.1455, -0.0999, -0.0554,  ...,  0.2592,  0.0434, -0.0381],
        [-0.2601, -0.2403,  0.1251,  ..., -0.1829, -0.1257, -0.0931]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-1.6298e-01,  8.6156e-01, -5.0606e-01,  ...,  5.1014e-05,
         -5.0381e-01, -1.8974e-01],
        [ 5.9578e-01, -7.0933e-01,  2.3952e-01,  ..., -7.2817e-02,
          8.2570e-02,  1.2350e-01],
        [ 6.8266e-01,  1.0560e-01, -4.5402e-01,  ..., -2.6749e-01,
         -5.0903e-01,  2.8004e-01],
        ...,
        [ 3.0947e-01,  1.8922e-01, -2.3270e-02,  ..., -3.7609e-01,
          1.5632e-01, -8.4038e-01],
        [-5.2663e-01,  5.3586e-01,  2.3423e-01,  ...,  3.7255e-01,
          1.5604e-01,  7.1411e-01],
        [ 2.2940e-02, -1.8292e-01,  1.5026e-01,  ...,  7.4481e-02,
          8.2993e-02, -4.3909e-01]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1423, -0.2143, -0.2092,  ...,  0.1844, -0.4574, -0.1602],
        [-0.2354, -0.1411,  0.4054,  ...,  0.0567,  0.2876,  0.0250],
        [ 0.1356,  0.4131, -0.2987,  ...,  0.6200,  0.5001,  0.0645],
        ...,
        [ 0.1118,  0.0562, -0.1591,  ...,  0.4490,  0.1238, -0.1818],
        [-0.0117,  0.4209, -0.0390,  ...,  0.1107,  0.2282, -0.0656],
        [-0.1796, -0.0412, -0.0280,  ...,  0.0361,  0.3768,  0.0324]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1479, 0.2154, 0.1530,  ..., 0.1695, 0.2211, 0.1593], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.0516,  0.0035,  0.1411,  ..., -0.0244,  0.0687,  0.0476],
        [ 0.0537, -0.0393, -0.0208,  ..., -0.0977,  0.0085, -0.0581],
        [-0.0378,  0.0126,  0.0403,  ..., -0.0910,  0.0040, -0.0414],
        ...,
        [-0.0209, -0.0337,  0.0251,  ..., -0.0004, -0.0596, -0.0109],
        [ 0.0893,  0.0157,  0.0444,  ...,  0.0117, -0.0490, -0.0151],
        [-0.0550, -0.0424, -0.0489,  ...,  0.0187, -0.0524,  0.0948]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.2763,  0.0063,  0.1739,  ...,  0.0411,  0.0536,  0.1755],
        [-0.0418,  0.0979,  0.1338,  ..., -0.3364, -0.2638, -0.0035],
        [-0.0045,  0.1995,  0.0348,  ...,  0.1860,  0.1535, -0.2688],
        ...,
        [ 0.1037,  0.0535, -0.0966,  ...,  0.1127,  0.3156, -0.1310],
        [-0.1069, -0.1620,  0.0448,  ..., -0.0478,  0.0006, -0.1222],
        [-0.1869,  0.0381, -0.2885,  ..., -0.2219, -0.2124, -0.3899]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.4877,  0.1451,  0.1326,  ...,  0.0575,  0.6135,  0.1244],
        [-0.0822, -0.3104,  0.0972,  ...,  0.0632, -0.6959, -0.1641],
        [ 0.1739, -0.4995, -0.0028,  ..., -0.1688, -1.4590,  0.1476],
        ...,
        [ 0.1275, -0.3603,  0.0760,  ..., -0.2712,  0.0186,  0.0933],
        [-0.5587, -0.5279, -0.0277,  ..., -0.6918,  0.1871,  0.9558],
        [-0.1556,  0.6855,  0.7137,  ...,  0.1907,  0.7152,  0.2788]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-1.2846,  2.1369,  0.6453,  ..., -0.3144,  0.0234, -0.6893],
        [-0.5632,  1.2324,  1.2322,  ...,  0.0715,  2.0219, -0.7431],
        [ 0.0655, -1.6631,  0.0405,  ..., -0.5864, -1.4614,  0.6042],
        ...,
        [ 0.1519, -1.7112,  0.7306,  ..., -0.6011, -0.3382,  0.6658],
        [-1.4551,  0.8165,  2.4118,  ...,  1.4825, -0.6532, -0.2357],
        [-1.5091,  0.1921, -0.9644,  ...,  1.1462,  2.2858,  0.0225]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1365, 0.1049, 0.1191,  ..., 0.1025, 0.1155, 0.0759], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[-0.0140,  0.0372,  0.1210,  ...,  0.1836, -0.0540,  0.2473],
        [-0.6006,  0.3372, -0.2792,  ..., -0.1119,  0.5309,  0.1772],
        [-0.2203, -0.1154, -0.3822,  ...,  0.1103,  0.1227, -0.2907],
        ...,
        [-0.3121,  0.1479, -0.1092,  ...,  0.0177, -0.1840,  0.3334],
        [-0.1653, -0.0355,  0.3166,  ..., -0.2119, -0.0347, -0.0394],
        [-0.3057,  0.3041,  0.0766,  ...,  0.2570,  0.4409,  0.2518]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1237,  0.7064, -0.5562,  ...,  0.1906, -0.5588,  0.3537],
        [-0.1214, -0.0990, -0.1345,  ..., -0.4322, -0.6950,  0.2207],
        [-0.0884,  0.1357, -0.4938,  ...,  0.2214, -0.0591,  1.0437],
        ...,
        [-0.2984, -0.0783, -0.0792,  ...,  0.0224,  0.1268,  0.4522],
        [ 1.0064,  0.4652, -0.3044,  ...,  0.2635, -0.6092, -0.1047],
        [ 0.2121, -0.0997, -0.3504,  ..., -0.0315, -0.0804, -0.0994]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1782,  0.1593,  0.4505,  ...,  0.3956, -0.2527, -0.1428],
        [-0.4770,  0.2457,  0.1796,  ...,  0.1075,  0.0525, -0.1166],
        [-0.0325,  0.0029,  0.2620,  ...,  0.6440,  0.2343,  0.4092],
        ...,
        [ 0.3554,  0.1586, -0.1154,  ...,  0.3968, -0.2212,  0.0627],
        [-0.0311, -0.0334, -0.0052,  ...,  0.2411, -0.4357,  0.5295],
        [-0.2876,  0.3109, -0.2913,  ...,  0.0064,  0.0754,  0.1752]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.2294, 0.2282, 0.2305,  ..., 0.2305, 0.1807, 0.2635], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.1276, -0.1427,  0.0006,  ..., -0.0309, -0.0609, -0.0128],
        [ 0.1189,  0.0186, -0.0693,  ..., -0.0953, -0.0466, -0.0186],
        [ 0.0523,  0.0962,  0.0851,  ..., -0.0359,  0.0393, -0.0167],
        ...,
        [-0.0536, -0.0329,  0.0339,  ...,  0.0392, -0.0646,  0.0695],
        [ 0.0642,  0.0605,  0.0522,  ..., -0.0301,  0.0338,  0.0660],
        [ 0.0352, -0.0558,  0.0696,  ..., -0.0126, -0.0834, -0.0577]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1180, -0.1986, -0.0719,  ...,  0.0347,  0.2008, -0.0864],
        [ 0.0952,  0.4581,  0.1093,  ...,  0.1242, -0.0813, -0.0890],
        [ 0.1181, -0.0282,  0.2471,  ...,  0.2522,  0.3288,  0.0262],
        ...,
        [ 0.1264, -0.0135,  0.0449,  ..., -0.0530,  0.3325,  0.0614],
        [-0.2530,  0.0022, -0.0011,  ..., -0.2533, -0.1990, -0.1171],
        [ 0.0564, -0.0744, -0.1049,  ..., -0.2278,  0.0127, -0.1235]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.5116,  0.6095, -0.5631,  ...,  0.4092, -0.8412, -0.0064],
        [-0.1712,  0.3258, -0.1802,  ...,  0.9267,  0.2434,  0.4619],
        [ 0.0089,  0.2403,  0.6610,  ...,  1.7142,  0.5375,  0.0317],
        ...,
        [-0.0798, -0.1781, -0.3796,  ..., -0.4339, -0.1339,  0.3110],
        [-0.8814, -0.1316, -1.1257,  ..., -0.3955, -1.0864, -0.7173],
        [ 0.5727, -0.2390,  0.4667,  ...,  1.0632,  0.4963, -0.2129]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 1.7135,  3.8380, -2.6523,  ..., -0.7154, -0.3215, -0.1082],
        [-1.2288,  0.0951, -1.9631,  ..., -0.3462, -1.1982, -0.6106],
        [ 1.2525,  0.5383, -0.3817,  ..., -1.0700,  0.3258, -0.5983],
        ...,
        [ 1.2328, -0.8091,  0.6681,  ..., -0.1252,  0.1450,  1.1767],
        [-0.6297, -0.8704,  1.2809,  ..., -0.2287,  0.0722, -0.9306],
        [ 0.5459, -1.9060, -1.2948,  ..., -0.9005,  0.3789, -1.4101]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1427, 0.1544, 0.1239,  ..., 0.0939, 0.1138, 0.1386], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 0.1993,  0.2604, -0.2535,  ...,  0.3120,  0.4333, -0.0982],
        [ 0.3434,  0.4375, -0.5399,  ..., -0.0813,  0.1070, -0.2742],
        [-0.2646,  0.0296,  0.2048,  ..., -0.3274,  0.4359,  0.5073],
        ...,
        [-0.1151,  0.0597,  0.3334,  ...,  0.2567, -0.1773, -0.1595],
        [ 0.3380, -0.5024, -0.4156,  ...,  0.1767,  0.3242,  0.1550],
        [-0.1813, -0.0975,  0.0080,  ...,  0.0378, -0.1066, -0.0893]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.7414, -0.5195, -0.3591,  ..., -0.7358,  0.0965, -0.1873],
        [ 0.2408,  0.1636, -0.1045,  ...,  0.1721, -0.6865,  0.1944],
        [ 0.0727, -0.6169, -0.7796,  ...,  0.3420,  0.3019,  0.4412],
        ...,
        [-0.6075, -0.2431, -0.0707,  ...,  1.4163,  0.3386, -0.1313],
        [ 0.9421, -0.5123, -0.2810,  ..., -0.9093,  0.1325,  0.4669],
        [ 0.6322, -0.1317,  0.0049,  ...,  0.3472, -0.0298, -0.7130]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.2562,  0.1017, -0.3700,  ...,  0.0710,  0.2994, -0.0775],
        [-0.2004, -0.2603, -0.0225,  ..., -0.1340, -0.1427, -0.3519],
        [-0.1073, -0.0645,  0.0726,  ...,  0.2102,  0.3191,  0.0545],
        ...,
        [-0.0972, -0.1650,  0.4695,  ..., -0.1034,  0.1430,  0.3171],
        [ 0.2793,  0.2281,  0.1058,  ..., -0.3787, -0.1323, -0.2522],
        [ 0.0591, -0.2865,  0.0658,  ...,  0.2430,  0.0266,  0.2200]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.2855, 0.2796, 0.2470,  ..., 0.2666, 0.2642, 0.2299], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[-0.0805, -0.0913,  0.0175,  ...,  0.0199,  0.0065,  0.0431],
        [ 0.0076,  0.1492,  0.0539,  ..., -0.0513,  0.0242,  0.0238],
        [ 0.0421, -0.0002, -0.0261,  ...,  0.0303, -0.0381, -0.0127],
        ...,
        [-0.0319, -0.0087, -0.0502,  ..., -0.0307, -0.1263,  0.1179],
        [-0.0121, -0.0399, -0.0095,  ..., -0.0503,  0.0041,  0.0340],
        [-0.0449,  0.0774, -0.0383,  ..., -0.0495, -0.0087, -0.0475]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.1321, -0.0292,  0.0907,  ..., -0.0552,  0.1094, -0.0192],
        [-0.0142, -0.2271, -0.0111,  ...,  0.0354,  0.0005,  0.0493],
        [ 0.1310,  0.0887, -0.0687,  ..., -0.1802, -0.0110, -0.2185],
        ...,
        [ 0.0026, -0.0839, -0.1120,  ..., -0.0831, -0.0400, -0.0223],
        [ 0.0769,  0.1374,  0.2118,  ...,  0.1133, -0.0877, -0.3143],
        [-0.1370,  0.0369,  0.0794,  ..., -0.0099,  0.0421, -0.1456]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0018, -0.5465, -0.4072,  ..., -1.5510,  0.8466,  0.2418],
        [ 0.2240,  0.7699, -0.3570,  ...,  0.3180,  0.0525,  0.7328],
        [ 1.2197, -0.3681,  0.0137,  ..., -0.2988, -0.0935,  0.7294],
        ...,
        [-0.2582, -0.4749,  0.1073,  ..., -1.2317, -1.2940, -1.0855],
        [ 0.3543, -0.2584,  0.1214,  ..., -0.2028,  0.5534, -0.2258],
        [-0.5196, -0.3596, -0.7594,  ...,  0.7671, -0.5869,  0.1517]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-1.0232,  0.6950, -1.9791,  ...,  2.0967,  0.2306, -1.4733],
        [-1.0376, -0.0941,  1.2199,  ..., -0.8670, -0.8324, -1.0786],
        [-0.6776, -0.7308, -0.0360,  ..., -1.1271,  1.5589, -0.0682],
        ...,
        [ 0.1306, -0.6288, -1.1920,  ..., -0.0175, -1.4862,  0.9176],
        [-0.8768, -0.5463, -0.1574,  ..., -0.9485,  2.0887, -0.9220],
        [-0.7826, -0.1444, -1.2836,  ..., -2.1502, -1.0948,  1.0031]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.1520, 0.1088, 0.1451,  ..., 0.1366, 0.1744, 0.1249], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[-0.2062, -0.2904, -0.2301,  ..., -0.2212,  0.1345, -0.4788],
        [ 0.1040, -0.1853,  0.0366,  ...,  0.0500,  0.0277,  0.0500],
        [-0.0785,  0.0884, -0.1886,  ...,  0.2319, -0.1261, -0.2594],
        ...,
        [ 0.1055, -0.2745, -0.3189,  ..., -0.1778,  0.3139,  0.2554],
        [ 0.2875,  0.0237,  0.1872,  ..., -0.1184,  0.1479,  0.2387],
        [ 0.1896,  0.2996, -0.1831,  ...,  0.0407, -0.1218,  0.0633]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.7146,  0.0647,  0.8174,  ..., -0.3913, -0.2337,  0.5820],
        [-0.4101, -0.7741, -0.7172,  ..., -0.6382,  0.0416, -0.2746],
        [-0.5334, -0.0030, -0.5524,  ..., -0.3482,  0.0528, -0.8476],
        ...,
        [-0.1314,  0.0551, -0.1294,  ..., -0.3498, -0.0990, -0.6694],
        [-0.1093, -0.2959,  0.0245,  ...,  0.2867, -0.4898,  0.6693],
        [ 0.1602, -0.0936, -0.3012,  ..., -0.0407, -0.4539,  0.7652]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.1864,  0.1729,  0.4431,  ...,  0.2863,  0.4689, -0.4054],
        [-0.0323,  0.4270, -0.0535,  ...,  0.3542, -0.1821, -0.3075],
        [-0.2271, -0.5569, -0.1246,  ..., -0.0009,  0.2307, -0.1488],
        ...,
        [ 0.4407, -0.1904,  0.0637,  ..., -0.1452,  0.2995, -0.0700],
        [-0.2923, -0.1130, -0.1031,  ..., -0.6558, -0.1590,  0.1511],
        [ 0.4852,  0.0285,  0.0818,  ..., -0.1192, -0.5484, -0.2566]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.3765, 0.4078, 0.4467,  ..., 0.4712, 0.4193, 0.4027], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([0.0905, 0.1211, 0.0987,  ..., 0.1089, 0.1354, 0.1249], device='cuda:0',
       requires_grad=True)], 'rank': 128, 'update_proj_gap': 200, 'scale': 0.25, 'proj_type': 'std'}]
ipdb> optimizer = GaLoreAdamW(param_groups, lr=lr)
*** NameError: name 'GaLoreAdamW' is not defined
ipdb> from galore_torch import GaLoreAdamW
ipdb> optimizer = GaLoreAdamW(param_groups, lr=lr)
/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/galore_torch/adamw.py:48:
 FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use t
he PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this
 warning
  warnings.warn(
ipdb> exit()
2024-08-10 15:27:06.859 | INFO     | __main__:main:651 - An error occurred:
Traceback (most recent call last):
  File "/home/adarsh/ReProver/compute_server.py", line 645, in main
    train(model_checkpoint_path, merged_data_path, next_suffix)
  File "/home/adarsh/ReProver/compute_server.py", line 545, in train
    trainer.fit(model, datamodule=data_module, ckpt_path=model_checkpoint_path)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/trainer/trainer.py", line 538, in fit
    call._call_and_handle_interrupt(
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/trainer/call.py", line 46, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/strategies/launchers/subprocess_script.py", line 105, in launch
    return function(*args, **kwargs)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/trainer/trainer.py", line 574, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/trainer/trainer.py", line 957, in _run
    self.strategy.setup(self)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/strategies/ddp.py", line 174, in setup
    self.setup_optimizers(trainer)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/strategies/strategy.py", line 138, in setup_optimizers
    self.optimizers, self.lr_scheduler_configs = _init_optimizers_and_lr_schedulers(self.lightning_module
)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/core/optimizer.py", line 179, in _init_optimizers_and_lr_schedulers
    optim_conf = call._call_lightning_module_hook(model.trainer, "configure_optimizers", pl_module=model)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/trainer/call.py", line 167, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
  File "/home/adarsh/ReProver/retrieval/model.py", line 254, in configure_optimizers
    # return get_optimizers(
  File "/home/adarsh/ReProver/common.py", line 434, in get_optimizers
    import ipdb; ipdb.set_trace()
  File "/home/adarsh/ReProver/common.py", line 434, in get_optimizers
    import ipdb; ipdb.set_trace()
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/bdb.py", line 90, in trace_disp
atch
    return self.dispatch_line(frame)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/bdb.py", line 115, in dispatch_
line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
^C
^Z
[7]+  Stopped                 bash run_compute_server.sh
(ReProverComputeServer) adarsh@tensorlab-DGX-Station-A100-920-23487-2531-000:~/ReProver$
(ReProverComputeServer) adarsh@tensorlab-DGX-Station-A100-920-23487-2531-000:~/ReProver$ bash run_compute
_server.sh
Script executed from: /home/adarsh/ReProver
[2024-08-10 15:29:32,718] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda
 (auto detect)
 [WARNING]  async_io requires the dev libaio .so object and headers but these were not found.
 [WARNING]  async_io: please install the libaio-dev package with apt
 [WARNING]  If libaio is already installed (perhaps from source), try setting the CFLAGS and LDFLAGS envi
ronment variables to where it can be found.
 [WARNING]  Please specify the CUTLASS repo directory as environment variable $CUTLASS_PATH
 [WARNING]  sparse_attn requires a torch version >= 1.5 and < 2.0 but detected 2.4
 [WARNING]  using untested triton version (3.0.0), only 1.0.0 is known to be compatible
/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/deepspeed/runtime/zero/li
near.py:49: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.cust
om_fwd(args..., device_type='cuda')` instead.
  def forward(ctx, input, weight, bias=None):
/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/deepspeed/runtime/zero/li
near.py:67: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.cust
om_bwd(args..., device_type='cuda')` instead.
  def backward(ctx, grad_output):
2024-08-10 15:29:39.708 | INFO     | __main__:check_progress_file:586 - Checking contents of /home/adarsh
/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning/loops/progress.py
2024-08-10 15:29:39.708 | INFO     | __main__:check_progress_file:590 - Contents of progress.py:
2024-08-10 15:29:39.708 | INFO     | __main__:check_progress_file:591 - # Copyright The Lightning AI team
.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
from dataclasses import asdict, dataclass, field
from typing import Type

from typing_extensions import override


@dataclass
class _BaseProgress:
    """Mixin that implements state-loading utilities for dataclasses."""

    def state_dict(self) -> dict:
        return asdict(self)

    def load_state_dict(self, state_dict: dict) -> None:
        if state_dict["completed"] == None:
            state_dict["completed"] = 0
        self.__dict__.update(state_dict)

    @classmethod
    def from_state_dict(cls, state_dict: dict) -> "_BaseProgress":
        obj = cls()
        obj.load_state_dict(state_dict)
        return obj

    def reset(self) -> None:
        """Reset the object's state."""
        raise NotImplementedError


@dataclass
class _ReadyCompletedTracker(_BaseProgress):
    """Track an event's progress.

    Args:
        ready: Intended to track the number of events ready to start.
        completed: Intended to be incremented after the event completes (e.g. after ``on_*_end`` runs).

    These attributes should be increased in order, that is, :attr:`ready` first and :attr:`completed` las
t.

    """

    ready: int = 0
    completed: int = 0

    @override
    def reset(self) -> None:
        """Reset the state."""
        self.ready = 0
        self.completed = 0

    def reset_on_restart(self) -> None:
        """Reset the progress on restart.

        If there is a failure before all attributes are increased, restore the attributes to the last ful
ly completed
        value.

        """
        self.ready = self.completed


@dataclass
class _StartedTracker(_ReadyCompletedTracker):
    """Track an event's progress.

    Args:
        ready: Intended to track the number of events ready to start.
        started: Intended to be incremented after the event is started (e.g. after ``on_*_start`` runs).
        completed: Intended to be incremented after the event completes (e.g. after ``on_*_end`` runs).

    These attributes should be increased in order, that is, :attr:`ready` first and :attr:`completed` las
t.

    """

    started: int = 0

    @override
    def reset(self) -> None:
        super().reset()
        self.started = 0

    @override
    def reset_on_restart(self) -> None:
        super().reset_on_restart()
        self.started = self.completed


@dataclass
class _ProcessedTracker(_StartedTracker):
    """Track an event's progress.

    Args:
        ready: Intended to track the number of events ready to start.
        started: Intended to be incremented after the event is started (e.g. after ``on_*_start`` runs).
        processed: Intended to be incremented after the event is processed.
        completed: Intended to be incremented after the event completes (e.g. after ``on_*_end`` runs).

    These attributes should be increased in order, that is, :attr:`ready` first and :attr:`completed` las
t.

    """

    processed: int = 0

    @override
    def reset(self) -> None:
        super().reset()
        self.processed = 0

    @override
    def reset_on_restart(self) -> None:
        super().reset_on_restart()
        self.processed = self.completed


@dataclass
class _Progress(_BaseProgress):
    """Track aggregated and current progress.

    Args:
        total: Intended to track the total progress of an event.
        current: Intended to track the current progress of an event.

    """

    total: _ReadyCompletedTracker = field(default_factory=_ProcessedTracker)
    current: _ReadyCompletedTracker = field(default_factory=_ProcessedTracker)

    def __post_init__(self) -> None:
        if self.total.__class__ is not self.current.__class__:
            raise ValueError("The `total` and `current` instances should be of the same class")

    def increment_ready(self) -> None:
        self.total.ready += 1
        self.current.ready += 1

    def increment_started(self) -> None:
        if not isinstance(self.total, _StartedTracker):
            raise TypeError(f"`{self.total.__class__.__name__}` doesn't have a `started` attribute")
        self.total.started += 1
        self.current.started += 1

    def increment_processed(self) -> None:
        if not isinstance(self.total, _ProcessedTracker):
            raise TypeError(f"`{self.total.__class__.__name__}` doesn't have a `processed` attribute")
        self.total.processed += 1
        self.current.processed += 1

    def increment_completed(self) -> None:
        self.total.completed += 1
        self.current.completed += 1

    @classmethod
    def from_defaults(cls, tracker_cls: Type[_ReadyCompletedTracker], **kwargs: int) -> "_Progress":
        """Utility function to easily create an instance from keyword arguments to both ``Tracker``s."""
        return cls(total=tracker_cls(**kwargs), current=tracker_cls(**kwargs))

    @override
    def reset(self) -> None:
        self.total.reset()
        self.current.reset()

    def reset_on_run(self) -> None:
        self.current.reset()

    def reset_on_restart(self) -> None:
        self.current.reset_on_restart()

    @override
    def load_state_dict(self, state_dict: dict) -> None:
        if state_dict["total"]["completed"] == None:
            state_dict["total"]["completed"] = 0
        self.total.load_state_dict(state_dict["total"])
        self.current.load_state_dict(state_dict["current"])


@dataclass
class _BatchProgress(_Progress):
    """Tracks batch progress.

    These counters are local to a trainer rank. By default, they are not globally synced across all ranks
.

    Args:
        total: Tracks the total batch progress.
        current: Tracks the current batch progress.
        is_last_batch: Whether the batch is the last one. This is useful for iterable datasets.

    """

    is_last_batch: bool = False

    @override
    def reset(self) -> None:
        super().reset()
        self.is_last_batch = False

    @override
    def reset_on_run(self) -> None:
        super().reset_on_run()
        self.is_last_batch = False

    @override
    def load_state_dict(self, state_dict: dict) -> None:
        if state_dict["total"]["completed"] == None:
            state_dict["total"]["completed"] = 0
        super().load_state_dict(state_dict)
        self.is_last_batch = state_dict["is_last_batch"]


@dataclass
class _SchedulerProgress(_Progress):
    """Tracks scheduler progress.

    These counters are local to a trainer rank. By default, they are not globally synced across all ranks
.

    Args:
        total: Tracks the total scheduler progress.
        current: Tracks the current scheduler progress.

    """

    total: _ReadyCompletedTracker = field(default_factory=_ReadyCompletedTracker)
    current: _ReadyCompletedTracker = field(default_factory=_ReadyCompletedTracker)


@dataclass
class _OptimizerProgress(_BaseProgress):
    """Track optimizer progress.

    Args:
        step: Tracks ``optimizer.step`` calls.
        zero_grad: Tracks ``optimizer.zero_grad`` calls.

    """

    step: _Progress = field(default_factory=lambda: _Progress.from_defaults(_ReadyCompletedTracker))
    zero_grad: _Progress = field(default_factory=lambda: _Progress.from_defaults(_StartedTracker))

    @override
    def reset(self) -> None:
        self.step.reset()
        self.zero_grad.reset()

    def reset_on_run(self) -> None:
        self.step.reset_on_run()
        self.zero_grad.reset_on_run()

    def reset_on_restart(self) -> None:
        self.step.reset_on_restart()
        self.zero_grad.reset_on_restart()

    @override
    def load_state_dict(self, state_dict: dict) -> None:
        if state_dict["step"]["total"]["completed"] == None:
            state_dict["step"]["total"]["completed"] = 0
        self.step.load_state_dict(state_dict["step"])
        self.zero_grad.load_state_dict(state_dict["zero_grad"])


@dataclass
class _OptimizationProgress(_BaseProgress):
    """Track optimization progress.

    Args:
        optimizer: Tracks optimizer progress.

    """

    optimizer: _OptimizerProgress = field(default_factory=_OptimizerProgress)

    @property
    def optimizer_steps(self) -> int:
        return self.optimizer.step.total.completed

    @override
    def reset(self) -> None:
        self.optimizer.reset()

    def reset_on_run(self) -> None:
        self.optimizer.reset_on_run()

    def reset_on_restart(self) -> None:
        self.optimizer.reset_on_restart()

    @override
    def load_state_dict(self, state_dict: dict) -> None:
        if state_dict["optimizer"]["step"]["total"]["completed"] == None:
            state_dict["optimizer"]["step"]["total"]["completed"] = 0
        self.optimizer.load_state_dict(state_dict["optimizer"])

2024-08-10 15:29:39.708 | INFO     | __main__:main:608 - Starting compute server...
2024-08-10 15:29:39.708 | INFO     | __main__:main:609 - Current working directory: /home/adarsh/ReProver
2024-08-10 15:29:39.709 | INFO     | __main__:main:617 - ROOT_DIR: /raid/adarsh
2024-08-10 15:29:39.709 | INFO     | __main__:main:618 - DATA_DIR: datasets_test
2024-08-10 15:29:39.709 | INFO     | __main__:main:622 - Configuring LeanDojo...
2024-08-10 15:29:39.712 | INFO     | generate_benchmark_lean4:configure_leandojo:294 - Current working di
rectory: /home/adarsh/ReProver
2024-08-10 15:29:39.712 | INFO     | __main__:main:624 - LeanDojo configured
2024-08-10 15:29:39.712 | INFO     | __main__:main:632 - Unique URLs: {'https://github.com/Adarsh321123/n
ew-version-test.git'}
2024-08-10 15:29:39.712 | INFO     | __main__:main:633 - About to generate datasets...
2024-08-10 15:29:39.712 | INFO     | __main__:generate_dataset:226 - Generating 1 datasets
2024-08-10 15:29:39.712 | INFO     | __main__:generate_dataset:231 - Processing https://github.com/Adarsh
321123/new-version-test.git
2024-08-10 15:29:39.911 | INFO     | __main__:get_compatible_commit:166 - Latest commit: f465306be03ced99
9caa157a85558a6c41b3e3f5
2024-08-10 15:29:39.911 | INFO     | __main__:get_compatible_commit:169 - Creating LeanGitRepo for https:
//github.com/Adarsh321123/new-version-test
2024-08-10 15:29:40.308 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:88 - Querying the com
mit hash for lean4 v4.8.0-rc1
2024-08-10 15:29:40.950 | INFO     | __main__:get_compatible_commit:171 - Getting config for https://gith
ub.com/Adarsh321123/new-version-test.git
2024-08-10 15:29:40.950 | INFO     | __main__:get_compatible_commit:175 - Latest commit compatible for ur
l https://github.com/Adarsh321123/new-version-test.git
2024-08-10 15:29:40.951 | INFO     | __main__:generate_dataset:236 - Found compatible commit f465306be03c
ed999caa157a85558a6c41b3e3f5 for https://github.com/Adarsh321123/new-version-test.git
2024-08-10 15:29:40.951 | INFO     | __main__:generate_dataset:237 - Lean version: v4.8.0-rc1
2024-08-10 15:29:40.951 | INFO     | __main__:generate_dataset:240 - Creating LeanGitRepo for https://git
hub.com/Adarsh321123/new-version-test
2024-08-10 15:29:40.951 | INFO     | __main__:generate_dataset:244 - Generating benchmark at /raid/adarsh
/datasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5
2024-08-10 15:29:40.951 | INFO     | generate_benchmark_lean4:main:301 - Generating dataset to go into /r
aid/adarsh/datasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5
2024-08-10 15:29:40.951 | INFO     | generate_benchmark_lean4:main:308 - lean toolchain version: {'conten
t': 'leanprover/lean4:v4.8.0-rc1\n'}
2024-08-10 15:29:40.951 | INFO     | generate_benchmark_lean4:main:310 - lean version v: v4.8.0-rc1
2024-08-10 15:29:40.951 | INFO     | generate_benchmark_lean4:main:311 - is supported: True
2024-08-10 15:29:40.951 | INFO     | generate_benchmark_lean4:main:321 - lean path1 /home/adarsh/.elan/to
olchains/leanprover--lean4---4.8.0-rc1
2024-08-10 15:29:40.951 | INFO     | generate_benchmark_lean4:main:322 - lean path2 /.elan/toolchains/lea
nprover--lean4---4.8.0-rc1
2024-08-10 15:29:40.951 | INFO     | generate_benchmark_lean4:main:323 - lean path3 ~/.elan/toolchains/le
anprover--lean4---4.8.0-rc1
2024-08-10 15:29:40.951 | INFO     | generate_benchmark_lean4:main:327 - Lean toolchain path 2 does not e
xist: /.elan/toolchains/leanprover--lean4---4.8.0-rc1
2024-08-10 15:29:40.951 | INFO     | generate_benchmark_lean4:main:329 - Lean toolchain path 3 does not e
xist: ~/.elan/toolchains/leanprover--lean4---4.8.0-rc1
2024-08-10 15:29:40.952 | INFO     | generate_benchmark_lean4:main:332 - Switched to Lean toolchain at: /
home/adarsh/.elan/toolchains/leanprover--lean4---4.8.0-rc1
2024-08-10 15:29:40.984 | INFO     | generate_benchmark_lean4:main:334 - lean --version: Lean (version 4.
8.0-rc1, x86_64-unknown-linux-gnu, commit dcccfb73cb24, Release)

2024-08-10 15:29:40.985 | INFO     | generate_benchmark_lean4:main:335 - repo: LeanGitRepo(url='https://g
ithub.com/Adarsh321123/new-version-test', commit='f465306be03ced999caa157a85558a6c41b3e3f5')
2024-08-10 15:29:40.985 | INFO     | generate_benchmark_lean4:main:337 - Configuring LeanDojo again...
2024-08-10 15:29:40.988 | INFO     | generate_benchmark_lean4:configure_leandojo:294 - Current working di
rectory: /home/adarsh/ReProver
2024-08-10 15:29:40.988 | INFO     | generate_benchmark_lean4:main:339 - LeanDojo configured
2024-08-10 15:29:40.988 | INFO     | generate_benchmark_lean4:main:342 - Tracing the repo...
2024-08-10 15:29:40.988 | DEBUG    | lean_dojo.data_extraction.trace:get_traced_repo_path:217 - The trace
d repo is available in the cache.
2024-08-10 15:29:40.988 | INFO     | lean_dojo.data_extraction.trace:trace:246 - Loading the traced repo
from /raid/adarsh/.cache/lean_dojo/Adarsh321123-new-version-test-f465306be03ced999caa157a85558a6c41b3e3f5
/new-version-test
2024-08-10 15:29:40.991 | DEBUG    | lean_dojo.utils:execute:110 - git remote get-url origin
2024-08-10 15:29:40.994 | DEBUG    | lean_dojo.utils:execute:110 - git log -n 1
2024-08-10 15:29:41.133 | DEBUG    | lean_dojo.data_extraction.traced_data:load_from_disk:1169 - Loading
5432 traced XML files from /raid/adarsh/.cache/lean_dojo/Adarsh321123-new-version-test-f465306be03ced999c
aa157a85558a6c41b3e3f5/new-version-test with 31 workers
2024-08-10 15:29:42,477 INFO worker.py:1772 -- Started a local Ray instance. View the dashboard at 127.0.
0.1:8267
  4%|██▋                                                              | 229/5432 [00:06<01:39, 52.40it/s]
(raylet) [2024-08-10 15:29:52,346 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85735563264; capacity: 1887507697664
. Object creation will fail if spilling is required.
  8%|█████▎                                                           | 440/5432 [00:15<02:50, 29.35it/s]
(raylet) [2024-08-10 15:30:02,352 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 86258606080; capacity: 1887507697664
. Object creation will fail if spilling is required.
 12%|████████                                                         | 677/5432 [00:24<01:31, 51.70it/s]
(raylet) [2024-08-10 15:30:12,358 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 87680667648; capacity: 1887507697664
. Object creation will fail if spilling is required.
 16%|██████████▍                                                      | 870/5432 [00:37<02:34, 29.52it/s]
(raylet) [2024-08-10 15:30:22,363 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 89236983808; capacity: 1887507697664
. Object creation will fail if spilling is required.
 18%|███████████▊                                                    | 1000/5432 [00:47<03:23, 21.75it/s]
(raylet) [2024-08-10 15:30:32,369 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85742280704; capacity: 1887507697664
. Object creation will fail if spilling is required.
 19%|████████████▍                                                   | 1055/5432 [00:57<07:46,  9.38it/s]
(raylet) [2024-08-10 15:30:42,641 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 87033561088; capacity: 1887507697664
. Object creation will fail if spilling is required.
 21%|█████████████▍                                                  | 1142/5432 [01:11<02:54, 24.65it/s]
(raylet) [2024-08-10 15:30:52,736 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 87260688384; capacity: 1887507697664
. Object creation will fail if spilling is required.
 24%|███████████████                                                 | 1282/5432 [01:14<01:34, 43.82it/s]
(raylet) [2024-08-10 15:31:02,742 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85734559744; capacity: 1887507697664
. Object creation will fail if spilling is required.
 24%|███████████████▏                                                | 1284/5432 [01:28<51:52,  1.33it/s]
(raylet) [2024-08-10 15:31:12,746 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85734535168; capacity: 1887507697664
. Object creation will fail if spilling is required.
 27%|█████████████████▍                                              | 1485/5432 [01:48<00:43, 91.61it/s]
(raylet) [2024-08-10 15:31:22,753 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85734518784; capacity: 1887507697664
. Object creation will fail if spilling is required.
 27%|█████████████████▌                                              | 1489/5432 [01:48<39:42,  1.65it/s]
(raylet) [2024-08-10 15:31:32,761 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85734506496; capacity: 1887507697664
. Object creation will fail if spilling is required.
 31%|███████████████████▉                                            | 1687/5432 [02:12<53:02,  1.18it/s]
(raylet) [2024-08-10 15:31:42,767 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85734445056; capacity: 1887507697664
. Object creation will fail if spilling is required.
(raylet) [2024-08-10 15:31:52,771 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85733482496; capacity: 1887507697664
. Object creation will fail if spilling is required.
 36%|███████████████████████▎                                        | 1980/5432 [02:17<01:00, 56.94it/s]
(raylet) [2024-08-10 15:32:02,777 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85733462016; capacity: 1887507697664
. Object creation will fail if spilling is required.
 37%|██████████████████████▊                                       | 2000/5432 [02:44<1:03:18,  1.11s/it]
(raylet) [2024-08-10 15:32:12,783 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85733445632; capacity: 1887507697664
. Object creation will fail if spilling is required.
 42%|██████████████████████████▏                                   | 2297/5432 [03:22<1:53:57,  2.18s/it]
(raylet) [2024-08-10 15:32:42,799 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85733359616; capacity: 1887507697664
. Object creation will fail if spilling is required. [repeated 3x across cluster] (Ray deduplicates logs
by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-o
bservability/user-guides/configure-logging.html#log-deduplication for more options.)
 47%|█████████████████████████████▉                                  | 2538/5432 [03:27<00:56, 51.57it/s]
(raylet) [2024-08-10 15:33:12,814 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85731672064; capacity: 1887507697664
. Object creation will fail if spilling is required. [repeated 3x across cluster]
 49%|██████████████████████████████▍                               | 2666/5432 [04:11<1:40:02,  2.17s/it]
(raylet) [2024-08-10 15:33:22,819 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85731647488; capacity: 1887507697664
. Object creation will fail if spilling is required.
(raylet) [2024-08-10 15:33:32,824 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85731635200; capacity: 1887507697664
. Object creation will fail if spilling is required.
 56%|███████████████████████████████████▋                            | 3029/5432 [04:17<00:35, 67.08it/s]
(raylet) [2024-08-10 15:34:02,849 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85730787328; capacity: 1887507697664
. Object creation will fail if spilling is required. [repeated 3x across cluster]
 59%|█████████████████████████████████████▉                          | 3215/5432 [05:11<00:51, 42.89it/s]
(raylet) [2024-08-10 15:34:12,856 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85730754560; capacity: 1887507697664
. Object creation will fail if spilling is required.
(raylet) [2024-08-10 15:34:22,863 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85730758656; capacity: 1887507697664
. Object creation will fail if spilling is required.
 67%|██████████████████████████████████████████▊                     | 3635/5432 [05:18<00:45, 39.17it/s]
(raylet) [2024-08-10 15:35:02,887 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85729370112; capacity: 1887507697664
. Object creation will fail if spilling is required. [repeated 4x across cluster]
 71%|█████████████████████████████████████████████▋                  | 3877/5432 [05:23<00:46, 33.56it/s]
(raylet) [2024-08-10 15:35:12,893 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85729353728; capacity: 1887507697664
. Object creation will fail if spilling is required.
 71%|████████████████████████████████████████████▎                 | 3880/5432 [06:22<1:39:55,  3.86s/it]
(raylet) [2024-08-10 15:35:22,900 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85729341440; capacity: 1887507697664
. Object creation will fail if spilling is required.
 77%|████████████████████████████████████████████████▉               | 4158/5432 [06:28<00:31, 40.49it/s]
(raylet) [2024-08-10 15:36:12,936 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85728440320; capacity: 1887507697664
. Object creation will fail if spilling is required. [repeated 5x across cluster]
 83%|████████████████████████████████████████████████████▉           | 4496/5432 [06:36<00:24, 38.12it/s]
(raylet) [2024-08-10 15:36:22,944 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85728428032; capacity: 1887507697664
. Object creation will fail if spilling is required.
 83%|███████████████████████████████████████████████████▎          | 4498/5432 [07:48<1:19:26,  5.10s/it]
(raylet) [2024-08-10 15:36:32,947 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85728419840; capacity: 1887507697664
. Object creation will fail if spilling is required.
 90%|█████████████████████████████████████████████████████████▎      | 4868/5432 [07:58<00:11, 48.87it/s]
(raylet) [2024-08-10 15:37:42,983 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85726982144; capacity: 1887507697664
. Object creation will fail if spilling is required. [repeated 7x across cluster]
100%|███████████████████████████████████████████████████████████████▊| 5415/5432 [09:35<00:00, 96.36it/s]
(raylet) [2024-08-10 15:37:52,990 E 194859 194888] (raylet) file_system_monitor.cc:111: /tmp/ray/session_
2024-08-10_15-29-41_255172_193856 is over 95% full, available space: 85726126080; capacity: 1887507697664
. Object creation will fail if spilling is required.
100%|████████████████████████████████████████████████████████████████| 5432/5432 [09:35<00:00,  9.44it/s]
2024-08-10 15:39:21.680 | DEBUG    | lean_dojo.data_extraction.lean:get_dependencies:489 - Querying the d
ependencies of LeanGitRepo(url='https://github.com/Adarsh321123/new-version-test', commit='f465306be03ced
999caa157a85558a6c41b3e3f5')
2024-08-10 15:39:22.648 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:88 - Querying the com
mit hash for lean4 v4.8.0-rc2
2024-08-10 15:39:23.954 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:88 - Querying the com
mit hash for lean4 v4.6.0-rc1
2024-08-10 15:39:26.171 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:88 - Querying the com
mit hash for lean4 v4.7.0
2024-08-10 15:39:27.150 | DEBUG    | lean_dojo.data_extraction.lean:url_to_repo:68 - url_to_repo("https:/
/github.com/leanprover-community/import-graph.git") failed. Retrying...
2024-08-10 15:39:28.272 | DEBUG    | lean_dojo.data_extraction.lean:url_to_repo:68 - url_to_repo("https:/
/github.com/leanprover-community/import-graph.git") failed. Retrying...
2024-08-10 15:39:32.123 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:88 - Querying the com
mit hash for lean4 v4.11.0-rc1
2024-08-10 15:39:32.681 | DEBUG    | lean_dojo.data_extraction.lean:get_dependencies:489 - Querying the d
ependencies of LeanGitRepo(url='https://github.com/leanprover-community/mathlib4', commit='19796eea79b36c
81ba5b1de34f5500e0348c84a2')
2024-08-10 15:39:33.349 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:88 - Querying the com
mit hash for lean4 v4.10.0
2024-08-10 15:39:34.446 | DEBUG    | lean_dojo.data_extraction.lean:_to_commit_hash:88 - Querying the com
mit hash for lean4 v4.9.0
2024-08-10 15:40:02.680 | DEBUG    | lean_dojo.data_extraction.traced_data:check_sanity:1032 - Checking t
he sanity of TracedRepo(repo=LeanGitRepo(url='https://github.com/Adarsh321123/new-version-test', commit='
f465306be03ced999caa157a85558a6c41b3e3f5'), dependencies={'lean4': LeanGitRepo(url='https://github.com/le
anprover/lean4', commit='daa22187642d4cf6954c39a23eab20d8a8675416'), 'batteries': LeanGitRepo(url='https:
//github.com/leanprover-community/batteries', commit='dc167d260ff7ee9849b436037add06bed15104be'), 'Qq': L
eanGitRepo(url='https://github.com/leanprover-community/quote4', commit='71f54425e6fe0fa75f3aef33a2813a78
98392222'), 'aesop': LeanGitRepo(url='https://github.com/leanprover-community/aesop', commit='0444234b421
6e944d5be2ce42a25d7410c67876f'), 'proofwidgets': LeanGitRepo(url='https://github.com/leanprover-community
/ProofWidgets4', commit='a96aee5245720f588876021b6a0aa73efee49c76'), 'Cli': LeanGitRepo(url='https://gith
ub.com/leanprover/lean4-cli', commit='2cf1030dc2ae6b3632c84a09350b675ef3e347d0'), 'mathlib': LeanGitRepo(
url='https://github.com/leanprover-community/mathlib4', commit='19796eea79b36c81ba5b1de34f5500e0348c84a2'
), 'importGraph': LeanGitRepo(url='https://github.com/leanprover-community/import-graph', commit='57bd206
5f1dbea5e9235646fb836c7cea9ab03b6')}, root_dir=PosixPath('/raid/adarsh/.cache/lean_dojo/Adarsh321123-new-
version-test-f465306be03ced999caa157a85558a6c41b3e3f5/new-version-test'))
2024-08-10 15:40:17.003 | INFO     | generate_benchmark_lean4:main:344 - Successfully traced the repo
2024-08-10 15:40:28.614 | INFO     | generate_benchmark_lean4:split_data:132 - 119751 theorems in total
2024-08-10 15:40:28.614 | INFO     | generate_benchmark_lean4:split_data:137 - 119751 theorems in total,
with 2395 for validation and 2395 for testing
2024-08-10 15:40:28.615 | INFO     | generate_benchmark_lean4:split_randomly:80 - Splitting the theorems
randomly
2024-08-10 15:40:28.663 | INFO     | generate_benchmark_lean4:split_by_premise:94 - Splitting the theorem
s by premises
2024-08-10 15:40:38.962 | INFO     | generate_benchmark_lean4:main:352 - Successfully split the data
2024-08-10 15:41:07.028 | INFO     | generate_benchmark_lean4:export_proofs:194 - 114961 theorems and 242
909 tactics saved to /raid/adarsh/datasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5
/random/train.json
2024-08-10 15:41:07.948 | INFO     | generate_benchmark_lean4:export_proofs:194 - 2395 theorems and 5246
tactics saved to /raid/adarsh/datasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5/ran
dom/val.json
2024-08-10 15:41:08.539 | INFO     | generate_benchmark_lean4:export_proofs:194 - 2395 theorems and 4928
tactics saved to /raid/adarsh/datasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5/ran
dom/test.json
2024-08-10 15:41:34.382 | INFO     | generate_benchmark_lean4:export_proofs:194 - 114961 theorems and 238
146 tactics saved to /raid/adarsh/datasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5
/novel_premises/train.json
2024-08-10 15:41:35.372 | INFO     | generate_benchmark_lean4:export_proofs:194 - 2395 theorems and 7493
tactics saved to /raid/adarsh/datasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5/nov
el_premises/val.json
2024-08-10 15:41:36.094 | INFO     | generate_benchmark_lean4:export_proofs:194 - 2395 theorems and 7444
tactics saved to /raid/adarsh/datasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5/nov
el_premises/test.json
2024-08-10 15:41:36.101 | INFO     | generate_benchmark_lean4:export_data:270 - Successfully exported the
 proofs
2024-08-10 15:42:06.849 | INFO     | generate_benchmark_lean4:export_premises:218 - 175685 theorems/defin
itions from 5432 files saved to /raid/adarsh/datasets_test/new-version-test_f465306be03ced999caa157a85558
a6c41b3e3f5/corpus.jsonl
2024-08-10 15:42:06.850 | INFO     | generate_benchmark_lean4:export_data:274 - Successfully exported the
 premises
2024-08-10 15:42:06.850 | INFO     | generate_benchmark_lean4:export_data:282 - Successfully exported the
 metadata
2024-08-10 15:42:06.850 | INFO     | generate_benchmark_lean4:main:354 - Successfully exported the data
2024-08-10 15:42:06.976 | INFO     | __main__:generate_dataset:246 - Finished generating benchmark at /ra
id/adarsh/datasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5
2024-08-10 15:42:06.976 | INFO     | __main__:generate_dataset:247 - Merging datasets
2024-08-10 15:42:06.976 | INFO     | __main__:merge_datasets:74 - Merging datasets for random
2024-08-10 15:42:06.976 | INFO     | __main__:merge_datasets:80 - Processing train split
2024-08-10 15:42:06.976 | INFO     | __main__:merge_datasets:86 - Processing new-version-test_f465306be03
ced999caa157a85558a6c41b3e3f5
2024-08-10 15:42:09.928 | INFO     | __main__:merge_datasets:98 - Deleted processed file: /raid/adarsh/da
tasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5/random/train.json
2024-08-10 15:42:18.679 | INFO     | __main__:merge_datasets:104 - Finished processing train split
2024-08-10 15:42:18.679 | INFO     | __main__:merge_datasets:80 - Processing val split
2024-08-10 15:42:18.691 | INFO     | __main__:merge_datasets:86 - Processing new-version-test_f465306be03
ced999caa157a85558a6c41b3e3f5
2024-08-10 15:42:19.038 | INFO     | __main__:merge_datasets:98 - Deleted processed file: /raid/adarsh/da
tasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5/random/val.json
2024-08-10 15:42:19.232 | INFO     | __main__:merge_datasets:104 - Finished processing val split
2024-08-10 15:42:19.232 | INFO     | __main__:merge_datasets:80 - Processing test split
2024-08-10 15:42:19.232 | INFO     | __main__:merge_datasets:86 - Processing new-version-test_f465306be03
ced999caa157a85558a6c41b3e3f5
2024-08-10 15:42:19.290 | INFO     | __main__:merge_datasets:98 - Deleted processed file: /raid/adarsh/da
tasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5/random/test.json
2024-08-10 15:42:19.476 | INFO     | __main__:merge_datasets:104 - Finished processing test split
2024-08-10 15:42:19.476 | INFO     | __main__:merge_datasets:105 - Finished merging datasets for random
2024-08-10 15:42:19.476 | INFO     | __main__:merge_datasets:74 - Merging datasets for novel_premises
2024-08-10 15:42:19.477 | INFO     | __main__:merge_datasets:80 - Processing train split
2024-08-10 15:42:19.477 | INFO     | __main__:merge_datasets:86 - Processing new-version-test_f465306be03
ced999caa157a85558a6c41b3e3f5
2024-08-10 15:42:22.264 | INFO     | __main__:merge_datasets:98 - Deleted processed file: /raid/adarsh/da
tasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5/novel_premises/train.json
2024-08-10 15:42:31.030 | INFO     | __main__:merge_datasets:104 - Finished processing train split
2024-08-10 15:42:31.031 | INFO     | __main__:merge_datasets:80 - Processing val split
2024-08-10 15:42:31.041 | INFO     | __main__:merge_datasets:86 - Processing new-version-test_f465306be03
ced999caa157a85558a6c41b3e3f5
2024-08-10 15:42:31.389 | INFO     | __main__:merge_datasets:98 - Deleted processed file: /raid/adarsh/da
tasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5/novel_premises/val.json
2024-08-10 15:42:31.664 | INFO     | __main__:merge_datasets:104 - Finished processing val split
2024-08-10 15:42:31.664 | INFO     | __main__:merge_datasets:80 - Processing test split
2024-08-10 15:42:31.665 | INFO     | __main__:merge_datasets:86 - Processing new-version-test_f465306be03
ced999caa157a85558a6c41b3e3f5
2024-08-10 15:42:31.740 | INFO     | __main__:merge_datasets:98 - Deleted processed file: /raid/adarsh/da
tasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5/novel_premises/test.json
2024-08-10 15:42:32.000 | INFO     | __main__:merge_datasets:104 - Finished processing test split
2024-08-10 15:42:32.000 | INFO     | __main__:merge_datasets:105 - Finished merging datasets for novel_pr
emises
2024-08-10 15:42:32.000 | INFO     | __main__:merge_datasets:107 - Merging corpus
2024-08-10 15:42:32.000 | INFO     | __main__:merge_datasets:112 - Processing new-version-test_f465306be0
3ced999caa157a85558a6c41b3e3f5
2024-08-10 15:42:32.449 | INFO     | __main__:merge_datasets:124 - Deleted processed corpus file: /raid/a
darsh/datasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5/corpus.jsonl
2024-08-10 15:42:32.513 | INFO     | __main__:merge_datasets:130 - Finished merging corpus
2024-08-10 15:42:32.513 | INFO     | __main__:merge_datasets:132 - Adding metadata
2024-08-10 15:42:32.513 | INFO     | __main__:merge_datasets:137 - Checking for metadata in new-version-t
est_f465306be03ced999caa157a85558a6c41b3e3f5
2024-08-10 15:42:32.514 | INFO     | __main__:merge_datasets:145 - Deleted processed metadata file: /raid
/adarsh/datasets_test/new-version-test_f465306be03ced999caa157a85558a6c41b3e3f5/metadata.json
2024-08-10 15:42:32.514 | INFO     | __main__:merge_datasets:150 - Finished adding metadata
2024-08-10 15:42:32.514 | INFO     | __main__:merge_datasets:154 - Deleting individual datasets
2024-08-10 15:42:32.514 | INFO     | __main__:merge_datasets:158 - Deleting dataset: new-version-test_f46
5306be03ced999caa157a85558a6c41b3e3f5
2024-08-10 15:42:32.525 | INFO     | __main__:generate_dataset:249 - Finished merging datasets
2024-08-10 15:42:32.634 | INFO     | __main__:main:639 - Latest PL checkpoint found: AK123321/pl-leancopi
lot-2
2024-08-10 15:42:32.733 | INFO     | __main__:download_pl_checkpoint:274 - Checkpoint downloaded to: /hom
e/adarsh/.cache/huggingface/hub/models--AK123321--pl-leancopilot-2/snapshots/d4955ed1972ad84c03dce9189162
d03912f2d86f/model.ckpt
2024-08-10 15:42:32.734 | INFO     | __main__:main:642 - Checkpoint path: /home/adarsh/.cache/huggingface
/hub/models--AK123321--pl-leancopilot-2/snapshots/d4955ed1972ad84c03dce9189162d03912f2d86f/model.ckpt
2024-08-10 15:42:32.734 | INFO     | __main__:train:464 - Training model with checkpoint: /home/adarsh/.c
ache/huggingface/hub/models--AK123321--pl-leancopilot-2/snapshots/d4955ed1972ad84c03dce9189162d03912f2d86
f/model.ckpt
Seed set to 3407
Lightning automatically upgraded your loaded checkpoint from v0.0.0 to v2.4.0. To apply the upgrade to yo
ur files permanently, run `python -m pytorch_lightning.utilities.upgrade_checkpoint ../.cache/huggingface
/hub/models--AK123321--pl-leancopilot-2/snapshots/d4955ed1972ad84c03dce9189162d03912f2d86f/model.ckpt`
2024-08-10 15:42:58.250 | INFO     | __main__:train:486 - Loaded premise retriever at /home/adarsh/.cache
/huggingface/hub/models--AK123321--pl-leancopilot-2/snapshots/d4955ed1972ad84c03dce9189162d03912f2d86f/mo
del.ckpt
2024-08-10 15:42:58.251 | INFO     | __main__:train:490 - Data path: /raid/adarsh/datasets_test/merged/ra
ndom
/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/transformers/tokenization
_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True`
by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by def
ault. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
2024-08-10 15:42:58.347 | INFO     | common:__init__:200 - Building the corpus from /raid/adarsh/datasets
_test/merged/corpus.jsonl
2024-08-10 15:43:19.523 | INFO     | retrieval.datamodule:load_or_cache_data:52 - Loaded data from cache
/raid/adarsh/datasets_test/merged/random/cache_train/cached_data.pkl
Training dataset size: 353052
2024-08-10 15:43:19.555 | INFO     | retrieval.datamodule:load_or_cache_data:52 - Loaded data from cache
/raid/adarsh/datasets_test/merged/random/cache_val/cached_data.pkl
Validation dataset size: 5403
2024-08-10 15:43:19.586 | INFO     | retrieval.datamodule:load_or_cache_data:52 - Loaded data from cache
/raid/adarsh/datasets_test/merged/random/cache_pred/cached_data.pkl
Testing dataset size: 5321
2024-08-10 15:43:19.588 | INFO     | __main__:train:523 - Training dataset size after load: 353052
2024-08-10 15:43:19.588 | INFO     | __main__:train:524 - Validation dataset size after load: 5403
2024-08-10 15:43:19.588 | INFO     | __main__:train:525 - Testing dataset size after load: 5321
Using bfloat16 Automatic Mixed Precision (AMP)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
2024-08-10 15:43:19.598 | INFO     | __main__:train:543 - Starting progressive training...
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/1
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 1 processes
----------------------------------------------------------------------------------------------------

2024-08-10 15:43:31.912 | INFO     | retrieval.datamodule:load_or_cache_data:52 - Loaded data from cache
/raid/adarsh/datasets_test/merged/random/cache_train/cached_data.pkl
Training dataset size: 353052
2024-08-10 15:43:32.111 | INFO     | retrieval.datamodule:load_or_cache_data:52 - Loaded data from cache
/raid/adarsh/datasets_test/merged/random/cache_val/cached_data.pkl
Validation dataset size: 5403
2024-08-10 15:43:32.150 | INFO     | retrieval.datamodule:load_or_cache_data:52 - Loaded data from cache
/raid/adarsh/datasets_test/merged/random/cache_pred/cached_data.pkl
Testing dataset size: 5321
/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning/callbac
ks/model_checkpoint.py:654: Checkpoint directory /raid/adarsh/checkpoints_test exists and is not empty.
Restoring states from the checkpoint path at /home/adarsh/.cache/huggingface/hub/models--AK123321--pl-lea
ncopilot-2/snapshots/d4955ed1972ad84c03dce9189162d03912f2d86f/model.ckpt
Lightning automatically upgraded your loaded checkpoint from v0.0.0 to v2.4.0. To apply the upgrade to yo
ur files permanently, run `python -m pytorch_lightning.utilities.upgrade_checkpoint ../.cache/huggingface
/hub/models--AK123321--pl-leancopilot-2/snapshots/d4955ed1972ad84c03dce9189162d03912f2d86f/model.ckpt`
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [3]
2024-08-10 15:43:33.433 | INFO     | common:get_optimizers:434 - Optimizing with GaLoreAdamW
/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/galore_torch/adamw.py:48:
 FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use t
he PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this
 warning
  warnings.warn(

  | Name    | Type           | Params | Mode
---------------------------------------------------
0 | encoder | T5EncoderModel | 217 M  | train
---------------------------------------------------
217 M     Trainable params
0         Non-trainable params
217 M     Total params
870.630   Total estimated model params size (MB)
235       Modules in train mode
0         Modules in eval mode
2024-08-10 15:43:37.776 | INFO     | __main__:main:651 - An error occurred: loaded state dict has a diffe
rent number of parameter groups
Traceback (most recent call last):
  File "/home/adarsh/ReProver/compute_server.py", line 645, in main
    train(model_checkpoint_path, merged_data_path, next_suffix)
  File "/home/adarsh/ReProver/compute_server.py", line 545, in train
    trainer.fit(model, datamodule=data_module, ckpt_path=model_checkpoint_path)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/trainer/trainer.py", line 538, in fit
    call._call_and_handle_interrupt(
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/trainer/call.py", line 46, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/strategies/launchers/subprocess_script.py", line 105, in launch
    return function(*args, **kwargs)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/trainer/trainer.py", line 574, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/trainer/trainer.py", line 972, in _run
    self._checkpoint_connector.restore_training_state()
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/trainer/connectors/checkpoint_connector.py", line 298, in restore_training_state
    self.restore_optimizers_and_schedulers()
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/trainer/connectors/checkpoint_connector.py", line 368, in restore_optimizers_and_schedulers
    self.restore_optimizers()
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/trainer/connectors/checkpoint_connector.py", line 383, in restore_optimizers
    self.trainer.strategy.load_optimizer_state_dict(self._loaded_checkpoint)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/pytorch_lightning
/strategies/strategy.py", line 376, in load_optimizer_state_dict
    optimizer.load_state_dict(opt_state)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/torch/_compile.py
", line 31, in inner
    return disable_fn(*args, **kwargs)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/torch/_dynamo/eva
l_frame.py", line 600, in _fn
    return fn(*args, **kwargs)
  File "/home/adarsh/miniconda3/envs/ReProverComputeServer/lib/python3.10/site-packages/torch/optim/optim
izer.py", line 848, in load_state_dict
    raise ValueError(
ValueError: loaded state dict has a different number of parameter groups

